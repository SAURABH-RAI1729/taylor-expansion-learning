[
  {
    "function": "sin(x)",
    "true_expansion": "-x**3/6 + x",
    "lstm_prediction": "* x * * 3 / 2 + 5 * x",
    "improved_lstm_prediction": "- x * * 3 / 6 + x",
    "transformer_prediction": "- x * * 3 / 6 + x"
  },
  {
    "function": "sqrt(x + 1)",
    "true_expansion": "-5*x**4/128 + x**3/16 - x**2/8 + x/2 + 1",
    "lstm_prediction": "- 5 * x * * 4 / 128 + x * * 3 / 16 - x * * 2 / 8 + x / 2 + 1",
    "improved_lstm_prediction": "- 5 * x * * 4 / 128 + x * * 3 / 16 - x * * 2 / 8 + x / 2 + 1",
    "transformer_prediction": "- 5 * x * * 4 / 128 + x * * 3 / 16 - x * * 2 / 8 + x / 2 + 1"
  },
  {
    "function": "x",
    "true_expansion": "x",
    "lstm_prediction": "x * * 2 / 2 + 1",
    "improved_lstm_prediction": "x * * 3 + x",
    "transformer_prediction": "x"
  },
  {
    "function": "log(3*x + 1)",
    "true_expansion": "-81*x**4/4 + 9*x**3 - 9*x**2/2 + 3*x",
    "lstm_prediction": "- 81 * x * * 4 / 4 + 9 * x * * 3 - 9 * x * * 2 / 2 + 3 * x",
    "improved_lstm_prediction": "- 81 * x * * 4 / 4 + 9 * x * * 3 - 9 * x * * 2 / 2 + 3 * x",
    "transformer_prediction": "- 3 * x * * 4 / 4 + x * * 3 - 3 * x * * 2 / 2 + 3 * x"
  },
  {
    "function": "4*(2*x**3 + 2*x**2 - 3*x)*cosh(x)",
    "true_expansion": "4*x**4 + 2*x**3 + 8*x**2 - 12*x",
    "lstm_prediction": "32 * x * * 4 / 3 - 12 * x * * 2 - 8 * x",
    "improved_lstm_prediction": "- 11 * x * * 4 + 8 * x * * 3 + 8 * x * * 2 - 8 * x",
    "transformer_prediction": "- 11 * x * * 4 / 6 + x * * 3 + 8 * x * * 2 + 8 * x + 4"
  },
  {
    "function": "3*x",
    "true_expansion": "3*x",
    "lstm_prediction": "3 * x",
    "improved_lstm_prediction": "3 * x * * 2 + 3 * x",
    "transformer_prediction": "3 * x"
  },
  {
    "function": "1/(1 - 4*x)",
    "true_expansion": "256*x**4 + 64*x**3 + 16*x**2 + 4*x + 1",
    "lstm_prediction": "256 * x * * 4 + 64 * x * * 3 + 16 * x * * 2 + 4 * x + 1",
    "improved_lstm_prediction": "256 * x * * 4 + 64 * x * * 3 + 16 * x * * 2 + 4 * x + 1",
    "transformer_prediction": "256 * x * * 4 + 64 * x * * 3 + 16 * x * * 2 + 4 * x + 1"
  },
  {
    "function": "2*(x - 1)*tan(x)",
    "true_expansion": "2*x**4/3 - 2*x**3/3 + 2*x**2 - 2*x",
    "lstm_prediction": "- x * * 4 / 3 + 2 * x * * 3 / 3 + 2 * x * * 2 - 4 * x",
    "improved_lstm_prediction": "- x * * 4 / 3 + x * * 3 / 3 + 2 * x * * 2 - 2 * x",
    "transformer_prediction": "- 2 * x * * 4 / 3 + 10 * x * * 3 / 3 + 2 * x * * 2 + 2 * x"
  },
  {
    "function": "(-3*x**3 - 2*x**2 - x + 1)*exp(2*x)",
    "true_expansion": "-32*x**4/3 - 23*x**3/3 - 2*x**2 + x + 1",
    "lstm_prediction": "- 11 * x * * 4 / 8 - 11 * x * * 3 / 3 - 5 * x * * 2 / 2 - x + 1",
    "improved_lstm_prediction": "- 14 * x * * 4 / 3 - 8 * x * * 3 / 3 + 2 * x * * 2 + x + 1",
    "transformer_prediction": "- 5 * x * * 4 / 24 - 13 * x * * 3 / 6 - 5 * x * * 2 / 2 - 3 * x - 1"
  },
  {
    "function": "tan(4*x)",
    "true_expansion": "64*x**3/3 + 4*x",
    "lstm_prediction": "64 * x * * 3 / 3 + 4 * x",
    "improved_lstm_prediction": "64 * x * * 3 / 3 + 4 * x",
    "transformer_prediction": "4 * x * * 3 / 3 + 4 * x"
  },
  {
    "function": "sinh(x)",
    "true_expansion": "x**3/6 + x",
    "lstm_prediction": "x * * 3 / 2 + x",
    "improved_lstm_prediction": "x * * 3 / 6 + x",
    "transformer_prediction": "x * * 3 / 6 + x"
  },
  {
    "function": "exp(x)",
    "true_expansion": "x**4/24 + x**3/6 + x**2/2 + x + 1",
    "lstm_prediction": "x * * 4 / 24 + x * * 2 / 2 + x + 1",
    "improved_lstm_prediction": "x * * 4 / 24 + x * * 3 / 6 + x * * 2 + x + 1",
    "transformer_prediction": "x * * 4 / 24 + x * * 3 / 6 + x * * 2 / 2 + x + 1"
  },
  {
    "function": "0",
    "true_expansion": "0",
    "lstm_prediction": "* x + 1",
    "improved_lstm_prediction": "0",
    "transformer_prediction": "0"
  },
  {
    "function": "15*cos(x)",
    "true_expansion": "5*x**4/8 - 15*x**2/2 + 15",
    "lstm_prediction": "15 * x * * 4 / 8 + 15 * x * * 2 / 2 + 15",
    "improved_lstm_prediction": "5 * x * * 4 / 8 + 15 * x * * 2 / 2 + 15",
    "transformer_prediction": "5 * x * * 4 / 8 - 15 * x * * 2 / 2 + 15"
  },
  {
    "function": "exp(x)",
    "true_expansion": "x**4/24 + x**3/6 + x**2/2 + x + 1",
    "lstm_prediction": "x * * 4 / 24 + x * * 2 / 2 + x + 1",
    "improved_lstm_prediction": "x * * 4 / 24 + x * * 3 / 6 + x * * 2 + x + 1",
    "transformer_prediction": "x * * 4 / 24 + x * * 3 / 6 + x * * 2 / 2 + x + 1"
  },
  {
    "function": "exp(x)",
    "true_expansion": "x**4/24 + x**3/6 + x**2/2 + x + 1",
    "lstm_prediction": "x * * 4 / 24 + x * * 2 / 2 + x + 1",
    "improved_lstm_prediction": "x * * 4 / 24 + x * * 3 / 6 + x * * 2 + x + 1",
    "transformer_prediction": "x * * 4 / 24 + x * * 3 / 6 + x * * 2 / 2 + x + 1"
  },
  {
    "function": "cos(x)",
    "true_expansion": "x**4/24 - x**2/2 + 1",
    "lstm_prediction": "x * * 2 / 2 + 1",
    "improved_lstm_prediction": "x * * 4 / 24 - x * * 2 / 2 + 1",
    "transformer_prediction": "x * * 4 / 24 - x * * 2 / 2 + 1"
  },
  {
    "function": "sinh(5*x)",
    "true_expansion": "125*x**3/6 + 5*x",
    "lstm_prediction": "125 * x * * 3 / 6 + 5 * x",
    "improved_lstm_prediction": "125 * x * * 3 / 6 + 5 * x",
    "transformer_prediction": "125 * x * * 3 / 6 + 5 * x"
  },
  {
    "function": "-x**3 + 3*x**2 + sinh(x) - 2",
    "true_expansion": "-5*x**3/6 + 3*x**2 + x - 2",
    "lstm_prediction": "- 7 * x * * 3 / 6 + 3 * x * * 2 + x - 2",
    "improved_lstm_prediction": "- 7 * x * * 3 / 6 + 3 * x * * 2 + x - 2",
    "transformer_prediction": "- x * * 3 / 6 + 2 * x * * 2 + 2 * x - 3"
  },
  {
    "function": "log(2*x + 1)",
    "true_expansion": "-4*x**4 + 8*x**3/3 - 2*x**2 + 2*x",
    "lstm_prediction": "- 4 * x * * 4 + 8 * x * * 3 / 3 - 2 * x * * 2 + 2 * x",
    "improved_lstm_prediction": "- 4 * x * * 4 + 8 * x * * 3 / 3 - 2 * x * * 2 + 2 * x",
    "transformer_prediction": "- 4 * x * * 4 + 8 * x * * 3 / 3 - 2 * x * * 2 + 2 * x"
  },
  {
    "function": "log(x + 1)",
    "true_expansion": "-x**4/4 + x**3/3 - x**2/2 + x",
    "lstm_prediction": "- x * * 4 / 4 + x * * 3 / 3 - x * * 2 / 2 + x",
    "improved_lstm_prediction": "- x * * 4 / 4 + x * * 3 / 3 - x * * 2 / 2 + x",
    "transformer_prediction": "- x * * 4 / 4 + x * * 3 / 3 - x * * 2 / 2 + x"
  },
  {
    "function": "2*sin(x)",
    "true_expansion": "-x**3/3 + 2*x",
    "lstm_prediction": "x * * 3 / 3 + 2 * x",
    "improved_lstm_prediction": "- x * * 3 / 3 + 2 * x",
    "transformer_prediction": "- 4 * x * * 3 / 3 + 2 * x"
  },
  {
    "function": "3*sinh(x)",
    "true_expansion": "x**3/2 + 3*x",
    "lstm_prediction": "x * * 3 / 2 + 3 * x",
    "improved_lstm_prediction": "x * * 3 / 2 + 3 * x",
    "transformer_prediction": "9 * x * * 3 / 2 + 3 * x"
  },
  {
    "function": "-x**3 + x + tan(x) - 2",
    "true_expansion": "-2*x**3/3 + 2*x - 2",
    "lstm_prediction": "5 * x * * 3 / 3 + x - 2",
    "improved_lstm_prediction": "- 2 * x * * 3 / 3 + 2 * x - 2",
    "transformer_prediction": "x * * 3 / 3 - x * * 2 - 2 * x + 3"
  },
  {
    "function": "sinh(3*x)",
    "true_expansion": "9*x**3/2 + 3*x",
    "lstm_prediction": "9 * x * * 2 / 2 + 1",
    "improved_lstm_prediction": "9 * x * * 3 / 2 + 3 * x",
    "transformer_prediction": "9 * x * * 3 / 2 + 3 * x"
  },
  {
    "function": "exp(x)",
    "true_expansion": "x**4/24 + x**3/6 + x**2/2 + x + 1",
    "lstm_prediction": "x * * 4 / 24 + x * * 2 / 2 + x + 1",
    "improved_lstm_prediction": "x * * 4 / 24 + x * * 3 / 6 + x * * 2 + x + 1",
    "transformer_prediction": "x * * 4 / 24 + x * * 3 / 6 + x * * 2 / 2 + x + 1"
  },
  {
    "function": "(2*x**3 + 2*x - 1)*exp(2*x)",
    "true_expansion": "6*x**4 + 14*x**3/3 + 2*x**2 - 1",
    "lstm_prediction": "16 * x * * 4 / 3 + 14 * x * * 3 / 3 + 4 * x * * 2 - x - 2",
    "improved_lstm_prediction": "- 8 * x * * 4 / 3 + 2 * x * * 3 / 3 + 2 * x * * 2 - x - 1",
    "transformer_prediction": "- 5 * x * * 4 / 12 - 13 * x * * 3 / 6 + 3 * x * * 2 + 2 * x + 2"
  },
  {
    "function": "sqrt(2*x + 1)*(-x**3 + 2*x**2 - 3*x)",
    "true_expansion": "-7*x**4/2 + 5*x**3/2 - x**2 - 3*x",
    "lstm_prediction": "- 3 * x * * 4 / 4 + 3 * x * * 3 / 2 - 6 * x * * 2 + 3 * x",
    "improved_lstm_prediction": "x * * 4 - x * * 3 + 3 * x * * 2 - 3 * x",
    "transformer_prediction": "- 3 * x * * 4 / 128 + 3 * x * * 3 / 16 + 3 * x * * 2 / 8 + 3 * x / 2 + 3"
  },
  {
    "function": "1/(1 - x)",
    "true_expansion": "x**4 + x**3 + x**2 + x + 1",
    "lstm_prediction": "x * * 4 + x * * 3 + x * * 2 + x + 1",
    "improved_lstm_prediction": "x * * 4 + x * * 3 + x * * 2 + x + 1",
    "transformer_prediction": "x * * 4 + x * * 3 + x * * 2 + x + 1"
  },
  {
    "function": "-2*x*sinh(x)",
    "true_expansion": "-x**4/3 - 2*x**2",
    "lstm_prediction": "x * * 3 / 2 - 2 * x",
    "improved_lstm_prediction": "- x * * 4 / 3 - 2 * x * * 3",
    "transformer_prediction": "- x * * 4 / 3 - x * * 3 / 3 - x * * 2 - 2 * x"
  },
  {
    "function": "-tan(2*x)",
    "true_expansion": "-8*x**3/3 - 2*x",
    "lstm_prediction": "- x * * 3 / 3 - 2 * x",
    "improved_lstm_prediction": "- 8 * x * * 3 / 3 - 2 * x",
    "transformer_prediction": "- 2 * x * * 3 / 3 - 2 * x"
  },
  {
    "function": "sqrt(x + 1)*(-3*x**2 + x)",
    "true_expansion": "7*x**4/16 - 13*x**3/8 - 5*x**2/2 + x",
    "lstm_prediction": "- 119 * x * * 4 / 128 - 43 * x * * 3 / 16 - 17 * x * * 2 / 8 + x / 2 + 1",
    "improved_lstm_prediction": "- 19 * x * * 4 / 16 - 39 * x * * 3 / 8 - 3 * x * * 2 / 2 + x",
    "transformer_prediction": "- 3 * x * * 4 / 128 + 3 * x * * 3 / 16 + 3 * x * * 2 / 8 + 3 * x / 2 + 3"
  },
  {
    "function": "-6*sqrt(x + 1)",
    "true_expansion": "15*x**4/64 - 3*x**3/8 + 3*x**2/4 - 3*x - 6",
    "lstm_prediction": "- 25 * x * * 4 / 8 + 5 * x * * 3 / 2 - 5 * x * * 2 / 2 - 5 * x",
    "improved_lstm_prediction": "- 5 * x * * 4 / 64 + 5 * x * * 3 / 8 - 3 * x * * 2 / 4 - 2 * x - 3",
    "transformer_prediction": "- 15 * x * * 4 / 16 + 3 * x * * 3 / 8 - 3 * x * * 2 + 6 * x + 6"
  },
  {
    "function": "5*tan(x)",
    "true_expansion": "5*x**3/3 + 5*x",
    "lstm_prediction": "5 * x * * 3 / 3 + 5 * x",
    "improved_lstm_prediction": "5 * x * * 3 / 3 + 5 * x",
    "transformer_prediction": "5 * x * * 3 / 3 + 5 * x"
  },
  {
    "function": "-x**2 + x - 2 + 4/(1 - x)",
    "true_expansion": "4*x**4 + 4*x**3 + 3*x**2 + 5*x + 2",
    "lstm_prediction": "4 * x * * 4 + 8 * x * * 3 + 7 * x * * 2 + 6 * x + 2",
    "improved_lstm_prediction": "4 * x * * 4 + 4 * x * * 3 + 3 * x * * 2 + 3 * x + 2",
    "transformer_prediction": "4 * x * * 4 + 4 * x * * 3 + 4 * x * * 2 + 5 * x + 3"
  },
  {
    "function": "4*(-3*x**2 + 2*x + 2)*sinh(x)",
    "true_expansion": "4*x**4/3 - 32*x**3/3 + 8*x**2 + 8*x",
    "lstm_prediction": "- 8 * x * * 4 / 3 - 32 * x * * 3 / 3 + 8 * x * * 2 + 8 * x",
    "improved_lstm_prediction": "- 8 * x * * 4 / 3 - 10 * x * * 3 / 3 + 8 * x * * 2 + 8 * x",
    "transformer_prediction": "- 8 * x * * 4 / 3 + 10 * x * * 3 / 3 + 8 * x * * 2 + 8 * x"
  },
  {
    "function": "(2*x**3 - x**2 + 2*x - 1)*atan(x)",
    "true_expansion": "4*x**4/3 - 2*x**3/3 + 2*x**2 - x",
    "lstm_prediction": "4 * x * * 4 / 3 - 4 * x * * 3 / 3 + 2 * x * * 2 - x",
    "improved_lstm_prediction": "5 * x * * 4 / 3 - x * * 3 / 3 + 2 * x * * 2 - x",
    "transformer_prediction": "- 2 * x * * 4 / 3 + 10 * x * * 3 / 3 + 2 * x * * 2 + 2 * x"
  },
  {
    "function": "exp(x)",
    "true_expansion": "x**4/24 + x**3/6 + x**2/2 + x + 1",
    "lstm_prediction": "x * * 4 / 24 + x * * 2 / 2 + x + 1",
    "improved_lstm_prediction": "x * * 4 / 24 + x * * 3 / 6 + x * * 2 + x + 1",
    "transformer_prediction": "x * * 4 / 24 + x * * 3 / 6 + x * * 2 / 2 + x + 1"
  },
  {
    "function": "5*x",
    "true_expansion": "5*x",
    "lstm_prediction": "5 * x",
    "improved_lstm_prediction": "5 * x * * 3 / 2 + 5 * x",
    "transformer_prediction": "5 * x"
  },
  {
    "function": "exp(x)",
    "true_expansion": "x**4/24 + x**3/6 + x**2/2 + x + 1",
    "lstm_prediction": "x * * 4 / 24 + x * * 2 / 2 + x + 1",
    "improved_lstm_prediction": "x * * 4 / 24 + x * * 3 / 6 + x * * 2 + x + 1",
    "transformer_prediction": "x * * 4 / 24 + x * * 3 / 6 + x * * 2 / 2 + x + 1"
  },
  {
    "function": "-x + 4*exp(x) - 2",
    "true_expansion": "x**4/6 + 2*x**3/3 + 2*x**2 + 3*x + 2",
    "lstm_prediction": "x * * 4 / 6 + 2 * x * * 3 / 3 + 2 * x * * 2 + x + 1",
    "improved_lstm_prediction": "x * * 4 / 6 + 2 * x * * 3 / 3 + 2 * x * * 2 + 3 * x + 4",
    "transformer_prediction": "x * * 4 / 6 + 2 * x * * 3 / 3 + 2 * x * * 2 + 2 * x + 3"
  },
  {
    "function": "-3*x**2 + 3*x + tan(x) - 1",
    "true_expansion": "x**3/3 - 3*x**2 + 4*x - 1",
    "lstm_prediction": "x * * 3 / 3 - 3 * x * * 2 + 4 * x - 1",
    "improved_lstm_prediction": "x * * 3 / 3 - 3 * x * * 2 + 4 * x - 1",
    "transformer_prediction": "- 2 * x * * 3 / 3 + 3 * x * * 2 + 2 * x - 1"
  },
  {
    "function": "5*sqrt(x + 1)",
    "true_expansion": "-25*x**4/128 + 5*x**3/16 - 5*x**2/8 + 5*x/2 + 5",
    "lstm_prediction": "- 25 * x * * 4 / 128 + 5 * x * * 3 / 16 - 5 * x * * 2 / 8 + 5 * x / 2 + 5",
    "improved_lstm_prediction": "- 25 * x * * 4 / 128 + 5 * x * * 3 / 16 - 5 * x * * 2 / 8 + 5 * x / 2 + 3",
    "transformer_prediction": "- 25 * x * * 4 / 128 + 5 * x * * 3 / 16 - 5 * x * * 2 / 8 + 5 * x / 2 + 5"
  },
  {
    "function": "sin(2*x)",
    "true_expansion": "-4*x**3/3 + 2*x",
    "lstm_prediction": "* x * * 3 / 2 + 3 * x",
    "improved_lstm_prediction": "- 4 * x * * 3 / 3 + 2 * x",
    "transformer_prediction": "- 4 * x * * 3 / 3 + 2 * x"
  },
  {
    "function": "(x**3 + 2*x**2 - 1)*log(5*x + 1)",
    "true_expansion": "545*x**4/4 - 95*x**3/3 + 25*x**2/2 - 5*x",
    "lstm_prediction": "545 * x * * 4 / 4 + 95 * x * * 3 / 3 + 5 * x * * 2 / 2 - 5 * x",
    "improved_lstm_prediction": "665 * x * * 4 / 4 - 25 * x * * 3 / 3 + 5 * x * * 2 / 2 - 5 * x",
    "transformer_prediction": "- 25 * x * * 4 / 12 + 25 * x * * 3 / 3 - 15 * x * * 2 / 2 + 5 * x"
  },
  {
    "function": "2*sqrt(x + 1)",
    "true_expansion": "-5*x**4/64 + x**3/8 - x**2/4 + x + 2",
    "lstm_prediction": "- 5 * x * * 4 / 64 + x * * 3 / 8 - x * * 2 / 4 + x + 2",
    "improved_lstm_prediction": "- 5 * x * * 4 / 64 + x * * 3 / 8 - x * * 2 / 4 + x + 2",
    "transformer_prediction": "- 5 * x * * 4 / 64 + x * * 3 / 8 - x * * 2 / 4 + x + 2"
  },
  {
    "function": "-3*x**3 - 2*x**2 + atan(2*x) + 3",
    "true_expansion": "-17*x**3/3 - 2*x**2 + 2*x + 3",
    "lstm_prediction": "- 13 * x * * 3 / 3 - 2 * x * * 2 + 3 * x + 3",
    "improved_lstm_prediction": "- 10 * x * * 3 / 3 - 2 * x * * 2 + 2 * x + 3",
    "transformer_prediction": "- 2 * x * * 3 / 3 + 3 * x * * 2 + 5 * x - 3"
  },
  {
    "function": "atan(x)",
    "true_expansion": "-x**3/3 + x",
    "lstm_prediction": "* x * * 3 / 3 + x",
    "improved_lstm_prediction": "- x * * 3 / 3 + x",
    "transformer_prediction": "- x * * 3 / 3 + x"
  },
  {
    "function": "1/(1 - x)",
    "true_expansion": "x**4 + x**3 + x**2 + x + 1",
    "lstm_prediction": "x * * 4 + x * * 3 + x * * 2 + x + 1",
    "improved_lstm_prediction": "x * * 4 + x * * 3 + x * * 2 + x + 1",
    "transformer_prediction": "x * * 4 + x * * 3 + x * * 2 + x + 1"
  },
  {
    "function": "2*sqrt(x + 1)",
    "true_expansion": "-5*x**4/64 + x**3/8 - x**2/4 + x + 2",
    "lstm_prediction": "- 5 * x * * 4 / 64 + x * * 3 / 8 - x * * 2 / 4 + x + 2",
    "improved_lstm_prediction": "- 5 * x * * 4 / 64 + x * * 3 / 8 - x * * 2 / 4 + x + 2",
    "transformer_prediction": "- 5 * x * * 4 / 64 + x * * 3 / 8 - x * * 2 / 4 + x + 2"
  },
  {
    "function": "cosh(3*x)",
    "true_expansion": "27*x**4/8 + 9*x**2/2 + 1",
    "lstm_prediction": "63 * x * * 2 / 2 + 1",
    "improved_lstm_prediction": "27 * x * * 4 / 8 + 9 * x * * 2 / 2 + 1",
    "transformer_prediction": "x * * 4 / 8 + 3 * x * * 2 / 2 + 3"
  },
  {
    "function": "-2 + 1/(1 - 2*x)",
    "true_expansion": "16*x**4 + 8*x**3 + 4*x**2 + 2*x - 1",
    "lstm_prediction": "16 * x * * 4 + 8 * x * * 3 + 4 * x * * 2 + x",
    "improved_lstm_prediction": "16 * x * * 4 + 8 * x * * 3 + 4 * x * * 2 + 2 * x - 1",
    "transformer_prediction": "2 * x * * 4 + 2 * x * * 3 + 2 * x * * 2 + 2 * x + 1"
  },
  {
    "function": "x*(-x**2 - 3*x - 2)",
    "true_expansion": "-x**3 - 3*x**2 - 2*x",
    "lstm_prediction": "- x * * 4 - 2 * x * * 3 - 2 * x * * 2 - 2 * x",
    "improved_lstm_prediction": "- x * * 3 - 3 * x * * 2 - 2 * x",
    "transformer_prediction": "- 3 * x * * 3 - 6 * x * * 2 - 2 * x"
  },
  {
    "function": "-2*x + atan(4*x) + 1",
    "true_expansion": "-64*x**3/3 + 2*x + 1",
    "lstm_prediction": "- 64 * x * * 3 / 3 + 3 * x + 1",
    "improved_lstm_prediction": "- 64 * x * * 3 / 3 + 2 * x + 1",
    "transformer_prediction": "- 4 * x * * 3 / 3 + 5 * x + 1"
  },
  {
    "function": "sqrt(4*x + 1)",
    "true_expansion": "-10*x**4 + 4*x**3 - 2*x**2 + 2*x + 1",
    "lstm_prediction": "- 10 * x * * 4 + 4 * x * * 2 + 2 * x + 1",
    "improved_lstm_prediction": "- 10 * x * * 4 + 4 * x * * 3 - 2 * x * * 2 + 2 * x + 1",
    "transformer_prediction": "- 5 * x * * 4 / 32 + x * * 3 / 4 - x * * 2 / 2 + 2 * x + 4"
  },
  {
    "function": "-x**3 + 3*x**2 + 2*x + cos(x) + 3",
    "true_expansion": "x**4/24 - x**3 + 5*x**2/2 + 2*x + 4",
    "lstm_prediction": "x * * 4 / 24 - x * * 3 + 5 * x * * 2 / 2 + 3",
    "improved_lstm_prediction": "x * * 4 / 24 - x * * 3 + 5 * x * * 2 / 2 + 2 * x + 4",
    "transformer_prediction": "x * * 4 / 24 + 3 * x * * 3 + 5 * x * * 2 / 2 + 3 * x + 4"
  },
  {
    "function": "5*x",
    "true_expansion": "5*x",
    "lstm_prediction": "5 * x",
    "improved_lstm_prediction": "5 * x * * 3 / 2 + 5 * x",
    "transformer_prediction": "5 * x"
  },
  {
    "function": "-x**3 + 3*x - 2 + 1/(1 - x)",
    "true_expansion": "x**4 + x**2 + 4*x - 1",
    "lstm_prediction": "x * * 4 - x * * 3 + 2 * x * * 2 - x + 4",
    "improved_lstm_prediction": "x * * 4 - 2 * x * * 3 + 4 * x",
    "transformer_prediction": "81 * x * * 4 + 27 * x * * 3 + 9 * x * * 2 + 2 * x + 2"
  },
  {
    "function": "log(x + 1)",
    "true_expansion": "-x**4/4 + x**3/3 - x**2/2 + x",
    "lstm_prediction": "- x * * 4 / 4 + x * * 3 / 3 - x * * 2 / 2 + x",
    "improved_lstm_prediction": "- x * * 4 / 4 + x * * 3 / 3 - x * * 2 / 2 + x",
    "transformer_prediction": "- x * * 4 / 4 + x * * 3 / 3 - x * * 2 / 2 + x"
  },
  {
    "function": "exp(x)",
    "true_expansion": "x**4/24 + x**3/6 + x**2/2 + x + 1",
    "lstm_prediction": "x * * 4 / 24 + x * * 2 / 2 + x + 1",
    "improved_lstm_prediction": "x * * 4 / 24 + x * * 3 / 6 + x * * 2 + x + 1",
    "transformer_prediction": "x * * 4 / 24 + x * * 3 / 6 + x * * 2 / 2 + x + 1"
  },
  {
    "function": "cos(5*x)",
    "true_expansion": "625*x**4/24 - 25*x**2/2 + 1",
    "lstm_prediction": "* x * * 2 / 2 + 1",
    "improved_lstm_prediction": "625 * x * * 4 / 24 - 25 * x * * 2 / 2 + 1",
    "transformer_prediction": "5 * x * * 4 / 24 - 5 * x * * 2 / 2 + 5"
  },
  {
    "function": "-3*x**2 - 2*x + 5*cos(x) - 3",
    "true_expansion": "5*x**4/24 - 11*x**2/2 - 2*x + 2",
    "lstm_prediction": "5 * x * * 4 / 24 - x * * 2 / 2 - 3 * x + 8",
    "improved_lstm_prediction": "5 * x * * 4 / 24 - 11 * x * * 2 / 2 - 2 * x + 2",
    "transformer_prediction": "625 * x * * 4 / 24 - 27 * x * * 2 / 2 - 3 * x + 2"
  },
  {
    "function": "-3*x + log(x + 1) - 2",
    "true_expansion": "-x**4/4 + x**3/3 - x**2/2 - 2*x - 2",
    "lstm_prediction": "- x * * 4 / 4 + x * * 3 / 3 - 5 * x * * 2 / 2 - x + 2",
    "improved_lstm_prediction": "- x * * 4 / 4 + x * * 3 / 3 - x * * 2 / 2 - 2 * x - 2",
    "transformer_prediction": "- 3 * x * * 4 / 4 + x * * 3 - 3 * x * * 2 / 2 + 4 * x - 3"
  },
  {
    "function": "5*exp(x)",
    "true_expansion": "5*x**4/24 + 5*x**3/6 + 5*x**2/2 + 5*x + 5",
    "lstm_prediction": "5 * x * * 4 / 24 + 5 * x * * 3 / 6 + 5 * x * * 2 / 2 + 5 * x + 5",
    "improved_lstm_prediction": "5 * x * * 4 / 24 + 5 * x * * 3 / 6 + 5 * x * * 2 / 2 + 5 * x + 5",
    "transformer_prediction": "625 * x * * 4 / 24 + 125 * x * * 3 / 6 + 25 * x * * 2 / 2 + 5 * x + 1"
  },
  {
    "function": "2*cos(3*x)",
    "true_expansion": "27*x**4/4 - 9*x**2 + 2",
    "lstm_prediction": "27 * x * * 4 / 2 + 18 * x * * 2 + 3",
    "improved_lstm_prediction": "9 * x * * 4 / 4 - 9 * x * * 2 + 2",
    "transformer_prediction": "x * * 4 / 12 - 3 * x * * 2 + 6"
  },
  {
    "function": "3*cosh(x)",
    "true_expansion": "x**4/8 + 3*x**2/2 + 3",
    "lstm_prediction": "x * * 2 / 2 + 3",
    "improved_lstm_prediction": "x * * 4 / 8 + 3 * x * * 2 / 2 + 3",
    "transformer_prediction": "x * * 4 / 8 + 3 * x * * 2 / 2 + 3"
  },
  {
    "function": "5*sqrt(x + 1)",
    "true_expansion": "-25*x**4/128 + 5*x**3/16 - 5*x**2/8 + 5*x/2 + 5",
    "lstm_prediction": "- 25 * x * * 4 / 128 + 5 * x * * 3 / 16 - 5 * x * * 2 / 8 + 5 * x / 2 + 5",
    "improved_lstm_prediction": "- 25 * x * * 4 / 128 + 5 * x * * 3 / 16 - 5 * x * * 2 / 8 + 5 * x / 2 + 3",
    "transformer_prediction": "- 25 * x * * 4 / 128 + 5 * x * * 3 / 16 - 5 * x * * 2 / 8 + 5 * x / 2 + 5"
  },
  {
    "function": "2*x**3 - x**2 + 3*x + sin(x) - 1",
    "true_expansion": "11*x**3/6 - x**2 + 4*x - 1",
    "lstm_prediction": "13 * x * * 3 / 6 - 2 * x * * 2 + 4 * x - 1",
    "improved_lstm_prediction": "11 * x * * 3 / 6 - x * * 2 + 4 * x - 1",
    "transformer_prediction": "- 17 * x * * 3 / 6 + 2 * x * * 2 + 2 * x - 1"
  },
  {
    "function": "cos(x)",
    "true_expansion": "x**4/24 - x**2/2 + 1",
    "lstm_prediction": "x * * 2 / 2 + 1",
    "improved_lstm_prediction": "x * * 4 / 24 - x * * 2 / 2 + 1",
    "transformer_prediction": "x * * 4 / 24 - x * * 2 / 2 + 1"
  },
  {
    "function": "4*sin(x)",
    "true_expansion": "-2*x**3/3 + 4*x",
    "lstm_prediction": "* x * * 3 / 3 + 4 * x",
    "improved_lstm_prediction": "- 2 * x * * 3 / 3 + 4 * x",
    "transformer_prediction": "- 32 * x * * 3 / 3 + 4 * x"
  },
  {
    "function": "cos(5*x) - 2",
    "true_expansion": "625*x**4/24 - 25*x**2/2 - 1",
    "lstm_prediction": "625 * x * * 4 / 8 - 25 * x * * 2 / 2 - 1",
    "improved_lstm_prediction": "- 625 * x * * 4 / 24 - 25 * x * * 2 / 2 - 1",
    "transformer_prediction": "625 * x * * 4 / 24 - 25 * x * * 2 / 2 - 1"
  },
  {
    "function": "3*tan(x)",
    "true_expansion": "x**3 + 3*x",
    "lstm_prediction": "x * * 3 + 3 * x",
    "improved_lstm_prediction": "x * * 3 + 3 * x",
    "transformer_prediction": "9 * x * * 3 + 3 * x"
  },
  {
    "function": "3*x + exp(x) + 3",
    "true_expansion": "x**4/24 + x**3/6 + x**2/2 + 4*x + 4",
    "lstm_prediction": "x * * 4 / 24 + x * * 3 / 6 + x * * 2 / 2 + 4 * x + 4",
    "improved_lstm_prediction": "x * * 4 / 24 + x * * 3 / 6 + x * * 2 / 2 + 4 * x + 4",
    "transformer_prediction": "x * * 4 / 24 + x * * 3 / 6 + x * * 2 / 2 + 4 * x + 4"
  },
  {
    "function": "-2*x + sinh(x) - 1",
    "true_expansion": "x**3/6 - x - 1",
    "lstm_prediction": "x * * 3 / 6 - x - 1",
    "improved_lstm_prediction": "x * * 3 / 6 - x - 1",
    "transformer_prediction": "x * * 3 / 6 - x - 1"
  },
  {
    "function": "sqrt(4*x + 1)",
    "true_expansion": "-10*x**4 + 4*x**3 - 2*x**2 + 2*x + 1",
    "lstm_prediction": "- 10 * x * * 4 + 4 * x * * 2 + 2 * x + 1",
    "improved_lstm_prediction": "- 10 * x * * 4 + 4 * x * * 3 - 2 * x * * 2 + 2 * x + 1",
    "transformer_prediction": "- 5 * x * * 4 / 32 + x * * 3 / 4 - x * * 2 / 2 + 2 * x + 4"
  },
  {
    "function": "3*sinh(x)",
    "true_expansion": "x**3/2 + 3*x",
    "lstm_prediction": "x * * 3 / 2 + 3 * x",
    "improved_lstm_prediction": "x * * 3 / 2 + 3 * x",
    "transformer_prediction": "9 * x * * 3 / 2 + 3 * x"
  },
  {
    "function": "log(x + 1)",
    "true_expansion": "-x**4/4 + x**3/3 - x**2/2 + x",
    "lstm_prediction": "- x * * 4 / 4 + x * * 3 / 3 - x * * 2 / 2 + x",
    "improved_lstm_prediction": "- x * * 4 / 4 + x * * 3 / 3 - x * * 2 / 2 + x",
    "transformer_prediction": "- x * * 4 / 4 + x * * 3 / 3 - x * * 2 / 2 + x"
  },
  {
    "function": "4*sinh(x)",
    "true_expansion": "2*x**3/3 + 4*x",
    "lstm_prediction": "2 * x * * 3 / 3 + 4 * x",
    "improved_lstm_prediction": "2 * x * * 3 / 3 + 4 * x",
    "transformer_prediction": "32 * x * * 3 / 3 + 4 * x"
  },
  {
    "function": "5*log(x + 1)",
    "true_expansion": "-5*x**4/4 + 5*x**3/3 - 5*x**2/2 + 5*x",
    "lstm_prediction": "- 5 * x * * 4 / 4 + 5 * x * * 3 / 3 - 5 * x * * 2 / 2 + 5 * x",
    "improved_lstm_prediction": "- 5 * x * * 4 / 4 + 5 * x * * 3 / 3 - 5 * x * * 2 / 2 + 5 * x",
    "transformer_prediction": "- 625 * x * * 4 / 4 + 125 * x * * 3 / 3 - 25 * x * * 2 / 2 + 5 * x"
  },
  {
    "function": "x - 2",
    "true_expansion": "x - 2",
    "lstm_prediction": "x / 2 - 2",
    "improved_lstm_prediction": "x * * 2 + x - 2",
    "transformer_prediction": "x - 2"
  },
  {
    "function": "sin(x)",
    "true_expansion": "-x**3/6 + x",
    "lstm_prediction": "* x * * 3 / 2 + 5 * x",
    "improved_lstm_prediction": "- x * * 3 / 6 + x",
    "transformer_prediction": "- x * * 3 / 6 + x"
  },
  {
    "function": "4*cos(x)",
    "true_expansion": "x**4/6 - 2*x**2 + 4",
    "lstm_prediction": "x * * 2 / 2 + 4",
    "improved_lstm_prediction": "x * * 4 / 6 - 2 * x * * 2 + 4",
    "transformer_prediction": "x * * 4 / 6 - 2 * x * * 2 + 4"
  },
  {
    "function": "-3*x**3 + 2*x**2 + cosh(x)",
    "true_expansion": "x**4/24 - 3*x**3 + 5*x**2/2 + 1",
    "lstm_prediction": "x * * 4 / 24 - 3 * x * * 3 + x * * 2 / 2 + 2 * x",
    "improved_lstm_prediction": "x * * 4 / 24 - 3 * x * * 3 + 5 * x * * 2 / 2 + 1",
    "transformer_prediction": "x * * 4 / 24 + 3 * x * * 3 + 3 * x * * 2 / 2 + 3 * x + 3"
  },
  {
    "function": "cosh(2*x)",
    "true_expansion": "2*x**4/3 + 2*x**2 + 1",
    "lstm_prediction": "x * * 2 / 2 + 1",
    "improved_lstm_prediction": "2 * x * * 4 / 3 + 2 * x * * 2 + 1",
    "transformer_prediction": "2 * x * * 4 / 3 + 2 * x * * 2 + 1"
  },
  {
    "function": "-2*x**2 + cos(x) + 3",
    "true_expansion": "x**4/24 - 5*x**2/2 + 4",
    "lstm_prediction": "x * * 4 / 24 - 2 * x * * 2 - x + 4",
    "improved_lstm_prediction": "x * * 4 / 24 - 5 * x * * 2 / 2 + 4",
    "transformer_prediction": "x * * 4 / 24 + x * * 2 / 2 + 3 * x + 4"
  },
  {
    "function": "(x**3 + x**2 + 3*x + 2)*atan(x)",
    "true_expansion": "x**3/3 + 3*x**2 + 2*x",
    "lstm_prediction": "5 * x * * 4 / 3 + 2 * x * * 3 / 3 + 2 * x * * 2 + 2 * x",
    "improved_lstm_prediction": "x * * 4 / 3 + x * * 3 + 3 * x * * 2 + 2 * x",
    "transformer_prediction": "- 2 * x * * 4 / 3 + 2 * x * * 3 + 2 * x * * 2 + 6 * x"
  },
  {
    "function": "atan(x)",
    "true_expansion": "-x**3/3 + x",
    "lstm_prediction": "* x * * 3 / 3 + x",
    "improved_lstm_prediction": "- x * * 3 / 3 + x",
    "transformer_prediction": "- x * * 3 / 3 + x"
  },
  {
    "function": "sqrt(x + 1)",
    "true_expansion": "-5*x**4/128 + x**3/16 - x**2/8 + x/2 + 1",
    "lstm_prediction": "- 5 * x * * 4 / 128 + x * * 3 / 16 - x * * 2 / 8 + x / 2 + 1",
    "improved_lstm_prediction": "- 5 * x * * 4 / 128 + x * * 3 / 16 - x * * 2 / 8 + x / 2 + 1",
    "transformer_prediction": "- 5 * x * * 4 / 128 + x * * 3 / 16 - x * * 2 / 8 + x / 2 + 1"
  },
  {
    "function": "1/(1 - x)",
    "true_expansion": "x**4 + x**3 + x**2 + x + 1",
    "lstm_prediction": "x * * 4 + x * * 3 + x * * 2 + x + 1",
    "improved_lstm_prediction": "x * * 4 + x * * 3 + x * * 2 + x + 1",
    "transformer_prediction": "x * * 4 + x * * 3 + x * * 2 + x + 1"
  },
  {
    "function": "4*x",
    "true_expansion": "4*x",
    "lstm_prediction": "4 * x + 1",
    "improved_lstm_prediction": "4 * x",
    "transformer_prediction": "4 * x"
  },
  {
    "function": "5*atan(x)",
    "true_expansion": "-5*x**3/3 + 5*x",
    "lstm_prediction": "5 * x * * 3 / 3 + 5 * x",
    "improved_lstm_prediction": "5 * x * * 3 / 3 + 5 * x",
    "transformer_prediction": "- 125 * x * * 3 / 3 + 5 * x"
  },
  {
    "function": "(-3*x**2 + x - 2)/(1 - 3*x)",
    "true_expansion": "-162*x**4 - 54*x**3 - 18*x**2 - 5*x - 2",
    "lstm_prediction": "- 162 * x * * 4 - 54 * x * * 3 - 18 * x * * 2 - 6 * x - 1",
    "improved_lstm_prediction": "- 1310 * x * * 4 - 262 * x * * 3 - 19 * x * * 2 - 9 * x - 2",
    "transformer_prediction": "- 3 * x * * 4 - 5 * x * * 3 - 3 * x * * 2 - 2 * x + 6"
  },
  {
    "function": "1/(1 - 5*x)",
    "true_expansion": "625*x**4 + 125*x**3 + 25*x**2 + 5*x + 1",
    "lstm_prediction": "625 * x * * 4 + 125 * x * * 3 + 25 * x * * 2 + 5 * x + 1",
    "improved_lstm_prediction": "625 * x * * 4 + 125 * x * * 3 + 25 * x * * 2 + 5 * x + 1",
    "transformer_prediction": "625 * x * * 4 + 125 * x * * 3 + 25 * x * * 2 + 5 * x + 1"
  },
  {
    "function": "4*(3*x**2 + 2*x)*cosh(x)",
    "true_expansion": "6*x**4 + 4*x**3 + 12*x**2 + 8*x",
    "lstm_prediction": "14 * x * * 4 / 3 + 8 * x * * 2 + 8",
    "improved_lstm_prediction": "32 * x * * 4 / 3 + 8 * x * * 3 + 8 * x * * 2 + 8 * x",
    "transformer_prediction": "x * * 4 / 6 + 3 * x * * 3 + 2 * x * * 2 + 8"
  },
  {
    "function": "exp(x)",
    "true_expansion": "x**4/24 + x**3/6 + x**2/2 + x + 1",
    "lstm_prediction": "x * * 4 / 24 + x * * 2 / 2 + x + 1",
    "improved_lstm_prediction": "x * * 4 / 24 + x * * 3 / 6 + x * * 2 + x + 1",
    "transformer_prediction": "x * * 4 / 24 + x * * 3 / 6 + x * * 2 / 2 + x + 1"
  },
  {
    "function": "2*atan(x)",
    "true_expansion": "-2*x**3/3 + 2*x",
    "lstm_prediction": "- x * * 3 / 3 + 2 * x",
    "improved_lstm_prediction": "- 2 * x * * 3 / 3 + 2 * x",
    "transformer_prediction": "- 2 * x * * 3 / 3 + 2 * x"
  },
  {
    "function": "1/(1 - x)",
    "true_expansion": "x**4 + x**3 + x**2 + x + 1",
    "lstm_prediction": "x * * 4 + x * * 3 + x * * 2 + x + 1",
    "improved_lstm_prediction": "x * * 4 + x * * 3 + x * * 2 + x + 1",
    "transformer_prediction": "x * * 4 + x * * 3 + x * * 2 + x + 1"
  },
  {
    "function": "1/(1 - x)",
    "true_expansion": "x**4 + x**3 + x**2 + x + 1",
    "lstm_prediction": "x * * 4 + x * * 3 + x * * 2 + x + 1",
    "improved_lstm_prediction": "x * * 4 + x * * 3 + x * * 2 + x + 1",
    "transformer_prediction": "x * * 4 + x * * 3 + x * * 2 + x + 1"
  },
  {
    "function": "cosh(x)",
    "true_expansion": "x**4/24 + x**2/2 + 1",
    "lstm_prediction": "x * * 2 / 2 + 1",
    "improved_lstm_prediction": "x * * 4 / 24 + x * * 2 / 2 + 1",
    "transformer_prediction": "x * * 4 / 24 + x * * 2 / 2 + 1"
  },
  {
    "function": "sqrt(5*x + 1)",
    "true_expansion": "-3125*x**4/128 + 125*x**3/16 - 25*x**2/8 + 5*x/2 + 1",
    "lstm_prediction": "* x * * 4 / 128 + x * * 3 / 16 - x * * 2 / 8 + x / 2 + 1",
    "improved_lstm_prediction": "- 3125 * x * * 4 / 128 + 125 * x * * 3 / 16 - 25 * x * * 2 / 8 + 5 * x / 2 + 1",
    "transformer_prediction": "- 25 * x * * 4 / 128 + 5 * x * * 3 / 16 - 5 * x * * 2 / 8 + 5 * x / 2 + 5"
  },
  {
    "function": "(-x**3 + 2*x**2 + 3*x + 1)*exp(x)",
    "true_expansion": "13*x**4/24 + 8*x**3/3 + 11*x**2/2 + 4*x + 1",
    "lstm_prediction": "x * * 4 / 8 + 2 * x * * 3 / 3 + 3 * x * * 2 / 2 + 4 * x + 1",
    "improved_lstm_prediction": "- 11 * x * * 4 / 24 + 13 * x * * 3 / 6 + 8 * x * * 2 / 2 + 4 * x + 1",
    "transformer_prediction": "- 17 * x * * 4 / 24 + 13 * x * * 3 / 6 + 3 * x * * 2 / 2 + 3 * x + 1"
  },
  {
    "function": "sinh(x)",
    "true_expansion": "x**3/6 + x",
    "lstm_prediction": "x * * 3 / 2 + x",
    "improved_lstm_prediction": "x * * 3 / 6 + x",
    "transformer_prediction": "x * * 3 / 6 + x"
  },
  {
    "function": "4*exp(x)",
    "true_expansion": "x**4/6 + 2*x**3/3 + 2*x**2 + 4*x + 4",
    "lstm_prediction": "x * * 4 / 6 + 2 * x * * 3 / 3 + 2 * x * * 2 + 4 * x + 4",
    "improved_lstm_prediction": "x * * 4 / 6 + 2 * x * * 3 / 3 + 2 * x * * 2 + 4 * x + 4",
    "transformer_prediction": "32 * x * * 4 / 3 + 32 * x * * 3 / 3 + 8 * x * * 2 + 4 * x + 1"
  },
  {
    "function": "exp(x)",
    "true_expansion": "x**4/24 + x**3/6 + x**2/2 + x + 1",
    "lstm_prediction": "x * * 4 / 24 + x * * 2 / 2 + x + 1",
    "improved_lstm_prediction": "x * * 4 / 24 + x * * 3 / 6 + x * * 2 + x + 1",
    "transformer_prediction": "x * * 4 / 24 + x * * 3 / 6 + x * * 2 / 2 + x + 1"
  },
  {
    "function": "log(2*x + 1)",
    "true_expansion": "-4*x**4 + 8*x**3/3 - 2*x**2 + 2*x",
    "lstm_prediction": "- 4 * x * * 4 + 8 * x * * 3 / 3 - 2 * x * * 2 + 2 * x",
    "improved_lstm_prediction": "- 4 * x * * 4 + 8 * x * * 3 / 3 - 2 * x * * 2 + 2 * x",
    "transformer_prediction": "- 4 * x * * 4 + 8 * x * * 3 / 3 - 2 * x * * 2 + 2 * x"
  },
  {
    "function": "sin(x)",
    "true_expansion": "-x**3/6 + x",
    "lstm_prediction": "* x * * 3 / 2 + 5 * x",
    "improved_lstm_prediction": "- x * * 3 / 6 + x",
    "transformer_prediction": "- x * * 3 / 6 + x"
  },
  {
    "function": "-x**2 - 3*x + 2*atan(x) + 1",
    "true_expansion": "-2*x**3/3 - x**2 - x + 1",
    "lstm_prediction": "- 2 * x * * 3 / 3 - x * * 2 + 3 * x - 1",
    "improved_lstm_prediction": "- 2 * x * * 3 / 3 - x * * 2 - x + 1",
    "transformer_prediction": "- 2 * x * * 3 / 3 + 2 * x * * 2 + 4 * x - 1"
  },
  {
    "function": "x**3 + 2*x + cos(2*x) + 3",
    "true_expansion": "2*x**4/3 + x**3 - 2*x**2 + 2*x + 4",
    "lstm_prediction": "x * * 4 / 12 + x * * 3 + x * * 2 + 3 * x + 3",
    "improved_lstm_prediction": "2 * x * * 4 / 3 + x * * 3 - x * * 2 + 2 * x + 4",
    "transformer_prediction": "x * * 4 / 24 + 3 * x * * 3 + 3 * x * * 2 / 2 + 3 * x + 4"
  },
  {
    "function": "exp(x)",
    "true_expansion": "x**4/24 + x**3/6 + x**2/2 + x + 1",
    "lstm_prediction": "x * * 4 / 24 + x * * 2 / 2 + x + 1",
    "improved_lstm_prediction": "x * * 4 / 24 + x * * 3 / 6 + x * * 2 + x + 1",
    "transformer_prediction": "x * * 4 / 24 + x * * 3 / 6 + x * * 2 / 2 + x + 1"
  },
  {
    "function": "3*cos(x)",
    "true_expansion": "x**4/8 - 3*x**2/2 + 3",
    "lstm_prediction": "x * * 2 / 2 + 3",
    "improved_lstm_prediction": "x * * 4 / 8 + 3 * x * * 2 / 2 + 3",
    "transformer_prediction": "x * * 4 / 8 - 3 * x * * 2 / 2 + 3"
  },
  {
    "function": "3*x**2 - x + log(5*x + 1) + 1",
    "true_expansion": "-625*x**4/4 + 125*x**3/3 - 19*x**2/2 + 4*x + 1",
    "lstm_prediction": "- 625 * x * * 4 / 4 + 125 * x * * 3 / 3 - 25 * x * * 2 / 2 + 6 * x + 1",
    "improved_lstm_prediction": "- 625 * x * * 4 / 4 + 125 * x * * 3 / 3 - 19 * x * * 2 / 2 + 4 * x + 1",
    "transformer_prediction": "- 625 * x * * 4 / 4 + 125 * x * * 3 / 3 - 19 * x * * 2 / 2 + 2 * x + 1"
  },
  {
    "function": "2*sqrt(x + 1)",
    "true_expansion": "-5*x**4/64 + x**3/8 - x**2/4 + x + 2",
    "lstm_prediction": "- 5 * x * * 4 / 64 + x * * 3 / 8 - x * * 2 / 4 + x + 2",
    "improved_lstm_prediction": "- 5 * x * * 4 / 64 + x * * 3 / 8 - x * * 2 / 4 + x + 2",
    "transformer_prediction": "- 5 * x * * 4 / 64 + x * * 3 / 8 - x * * 2 / 4 + x + 2"
  },
  {
    "function": "sin(x) + 2",
    "true_expansion": "-x**3/6 + x + 2",
    "lstm_prediction": "* x * * 3 / 6 + 3 * x + 2",
    "improved_lstm_prediction": "- x * * 3 / 6 + x + 2",
    "transformer_prediction": "- x * * 3 / 6 + x + 2"
  },
  {
    "function": "3*sinh(x)",
    "true_expansion": "x**3/2 + 3*x",
    "lstm_prediction": "x * * 3 / 2 + 3 * x",
    "improved_lstm_prediction": "x * * 3 / 2 + 3 * x",
    "transformer_prediction": "9 * x * * 3 / 2 + 3 * x"
  },
  {
    "function": "-2*x**2 + 5*cosh(x)",
    "true_expansion": "5*x**4/24 + x**2/2 + 5",
    "lstm_prediction": "5 * x * * 4 / 24 - x * * 2 + 6",
    "improved_lstm_prediction": "5 * x * * 4 / 24 - 3 * x * * 2 / 2 + 5",
    "transformer_prediction": "625 * x * * 4 / 24 + 25 * x * * 2 / 2 - x + 1"
  },
  {
    "function": "sqrt(x + 1)",
    "true_expansion": "-5*x**4/128 + x**3/16 - x**2/8 + x/2 + 1",
    "lstm_prediction": "- 5 * x * * 4 / 128 + x * * 3 / 16 - x * * 2 / 8 + x / 2 + 1",
    "improved_lstm_prediction": "- 5 * x * * 4 / 128 + x * * 3 / 16 - x * * 2 / 8 + x / 2 + 1",
    "transformer_prediction": "- 5 * x * * 4 / 128 + x * * 3 / 16 - x * * 2 / 8 + x / 2 + 1"
  },
  {
    "function": "tan(x) - 2",
    "true_expansion": "x**3/3 + x - 2",
    "lstm_prediction": "x * * 3 / 3 + x - 2",
    "improved_lstm_prediction": "x * * 3 / 3 + x - 2",
    "transformer_prediction": "x * * 3 / 3 + x - 2"
  },
  {
    "function": "2*sqrt(x + 1)",
    "true_expansion": "-5*x**4/64 + x**3/8 - x**2/4 + x + 2",
    "lstm_prediction": "- 5 * x * * 4 / 64 + x * * 3 / 8 - x * * 2 / 4 + x + 2",
    "improved_lstm_prediction": "- 5 * x * * 4 / 64 + x * * 3 / 8 - x * * 2 / 4 + x + 2",
    "transformer_prediction": "- 5 * x * * 4 / 64 + x * * 3 / 8 - x * * 2 / 4 + x + 2"
  },
  {
    "function": "sin(4*x)",
    "true_expansion": "-32*x**3/3 + 4*x",
    "lstm_prediction": "* * x * * 3 / 3 + 4 * x",
    "improved_lstm_prediction": "32 * 32 * x * * 3 / 3 + 4 * x",
    "transformer_prediction": "- 32 * x * * 3 / 3 + 4 * x"
  },
  {
    "function": "3*cosh(x)",
    "true_expansion": "x**4/8 + 3*x**2/2 + 3",
    "lstm_prediction": "x * * 2 / 2 + 3",
    "improved_lstm_prediction": "x * * 4 / 8 + 3 * x * * 2 / 2 + 3",
    "transformer_prediction": "x * * 4 / 8 + 3 * x * * 2 / 2 + 3"
  },
  {
    "function": "1/(1 - x)",
    "true_expansion": "x**4 + x**3 + x**2 + x + 1",
    "lstm_prediction": "x * * 4 + x * * 3 + x * * 2 + x + 1",
    "improved_lstm_prediction": "x * * 4 + x * * 3 + x * * 2 + x + 1",
    "transformer_prediction": "x * * 4 + x * * 3 + x * * 2 + x + 1"
  },
  {
    "function": "3*x + 3*tan(x) - 3",
    "true_expansion": "x**3 + 6*x - 3",
    "lstm_prediction": "x * * 3 + 6 * x - 3",
    "improved_lstm_prediction": "6 * x * * 3 + 6 * x - 3",
    "transformer_prediction": "9 * x * * 3 + 3 * x - 3"
  },
  {
    "function": "(x + 3)*sinh(x)",
    "true_expansion": "x**4/6 + x**3/2 + x**2 + 3*x",
    "lstm_prediction": "x * * 4 / 6 + x * * 3 / 2 - x * * 2 + 3 * x",
    "improved_lstm_prediction": "x * * 4 / 6 + x * * 3 / 2 + x * * 2 + 3 * x",
    "transformer_prediction": "x * * 4 / 2 + x * * 3 / 2 + 3 * x * * 2 + 3 * x"
  },
  {
    "function": "log(x + 1)",
    "true_expansion": "-x**4/4 + x**3/3 - x**2/2 + x",
    "lstm_prediction": "- x * * 4 / 4 + x * * 3 / 3 - x * * 2 / 2 + x",
    "improved_lstm_prediction": "- x * * 4 / 4 + x * * 3 / 3 - x * * 2 / 2 + x",
    "transformer_prediction": "- x * * 4 / 4 + x * * 3 / 3 - x * * 2 / 2 + x"
  },
  {
    "function": "cos(3*x)",
    "true_expansion": "27*x**4/8 - 9*x**2/2 + 1",
    "lstm_prediction": "* x * * 2 / 2 + 1",
    "improved_lstm_prediction": "27 * x * * 4 / 8 + 9 * x * * 2 / 2 + 1",
    "transformer_prediction": "x * * 4 / 8 - 3 * x * * 2 / 2 + 3"
  },
  {
    "function": "2*(2*x**2 - 2*x - 2)*log(x + 1)",
    "true_expansion": "-7*x**4/3 + 14*x**3/3 - 2*x**2 - 4*x",
    "lstm_prediction": "- 2 * x * * 4 / 3 + 4 * x * * 3 / 3 - 4 * x * * 2 - 4 * x",
    "improved_lstm_prediction": "- 2 * x * * 4 / 3 + 4 * x * * 3 / 3 - 4 * x * * 2 - 4 * x",
    "transformer_prediction": "- 5 * x * * 4 / 12 + 5 * x * * 3 / 3 - 5 * x * * 2 / 2 + 2 * x"
  },
  {
    "function": "x",
    "true_expansion": "x",
    "lstm_prediction": "x * * 2 / 2 + 1",
    "improved_lstm_prediction": "x * * 3 + x",
    "transformer_prediction": "x"
  },
  {
    "function": "x",
    "true_expansion": "x",
    "lstm_prediction": "x * * 2 / 2 + 1",
    "improved_lstm_prediction": "x * * 3 + x",
    "transformer_prediction": "x"
  },
  {
    "function": "1/(1 - 5*x)",
    "true_expansion": "625*x**4 + 125*x**3 + 25*x**2 + 5*x + 1",
    "lstm_prediction": "625 * x * * 4 + 125 * x * * 3 + 25 * x * * 2 + 5 * x + 1",
    "improved_lstm_prediction": "625 * x * * 4 + 125 * x * * 3 + 25 * x * * 2 + 5 * x + 1",
    "transformer_prediction": "625 * x * * 4 + 125 * x * * 3 + 25 * x * * 2 + 5 * x + 1"
  },
  {
    "function": "2*x**2 + 3*x + sinh(x) + 2",
    "true_expansion": "x**3/6 + 2*x**2 + 4*x + 2",
    "lstm_prediction": "x * * 3 / 6 + 2 * x * * 2 + 4 * x + 2",
    "improved_lstm_prediction": "x * * 3 / 6 + 2 * x * * 2 + 4 * x + 2",
    "transformer_prediction": "x * * 3 / 3 + 2 * x * * 2 + 3 * x + 2"
  },
  {
    "function": "tan(x)",
    "true_expansion": "x**3/3 + x",
    "lstm_prediction": "x * * 3 / 3 + x",
    "improved_lstm_prediction": "x * * 3 / 3 + x",
    "transformer_prediction": "x * * 3 / 3 + x"
  },
  {
    "function": "4*sin(x)",
    "true_expansion": "-2*x**3/3 + 4*x",
    "lstm_prediction": "* x * * 3 / 3 + 4 * x",
    "improved_lstm_prediction": "- 2 * x * * 3 / 3 + 4 * x",
    "transformer_prediction": "- 32 * x * * 3 / 3 + 4 * x"
  },
  {
    "function": "exp(5*x)",
    "true_expansion": "625*x**4/24 + 125*x**3/6 + 25*x**2/2 + 5*x + 1",
    "lstm_prediction": "625 * x * * 4 / 24 + 125 * x * * 2 / 2 + 5 * x + 1",
    "improved_lstm_prediction": "625 * x * * 4 / 24 + 125 * x * * 3 / 6 + 25 * x * * 2 + 5 * x + 1",
    "transformer_prediction": "625 * x * * 4 / 24 + 125 * x * * 3 / 6 + 25 * x * * 2 / 2 + 5 * x + 1"
  },
  {
    "function": "4*atan(x)",
    "true_expansion": "-4*x**3/3 + 4*x",
    "lstm_prediction": "- 4 * x * * 3 / 3 + 4 * x",
    "improved_lstm_prediction": "- 4 * x * * 3 / 3 + 4 * x",
    "transformer_prediction": "- 4 * x * * 3 / 3 + 4 * x"
  },
  {
    "function": "(-2*x**2 - 2*x)*sin(x)",
    "true_expansion": "x**4/3 - 2*x**3 - 2*x**2",
    "lstm_prediction": "x * * 4 / 3 - x * * 3 / 3 - 2 * x * * 2",
    "improved_lstm_prediction": "- 2 * x * * 4 / 3 - 2 * x * * 3 - 2 * x * * 2",
    "transformer_prediction": "- 4 * x * * 4 / 3 + 4 * x * * 3 / 3 - 4 * x * * 2 - 4 * x"
  },
  {
    "function": "cos(3*x)",
    "true_expansion": "27*x**4/8 - 9*x**2/2 + 1",
    "lstm_prediction": "* x * * 2 / 2 + 1",
    "improved_lstm_prediction": "27 * x * * 4 / 8 + 9 * x * * 2 / 2 + 1",
    "transformer_prediction": "x * * 4 / 8 - 3 * x * * 2 / 2 + 3"
  },
  {
    "function": "cos(x)",
    "true_expansion": "x**4/24 - x**2/2 + 1",
    "lstm_prediction": "x * * 2 / 2 + 1",
    "improved_lstm_prediction": "x * * 4 / 24 - x * * 2 / 2 + 1",
    "transformer_prediction": "x * * 4 / 24 - x * * 2 / 2 + 1"
  },
  {
    "function": "1/(1 - x)",
    "true_expansion": "x**4 + x**3 + x**2 + x + 1",
    "lstm_prediction": "x * * 4 + x * * 3 + x * * 2 + x + 1",
    "improved_lstm_prediction": "x * * 4 + x * * 3 + x * * 2 + x + 1",
    "transformer_prediction": "x * * 4 + x * * 3 + x * * 2 + x + 1"
  },
  {
    "function": "2*x**3 + 3*x**2 + 5*x + 1",
    "true_expansion": "2*x**3 + 3*x**2 + 5*x + 1",
    "lstm_prediction": "3 * x * * 3 + 5 * x * * 2 + 7 * x + 1",
    "improved_lstm_prediction": "5 * x * * 3 + 3 * x * * 2 + 5 * x + 1",
    "transformer_prediction": "3 * x * * 3 + 3 * x * * 2 + 5 * x + 1"
  },
  {
    "function": "sinh(x)",
    "true_expansion": "x**3/6 + x",
    "lstm_prediction": "x * * 3 / 2 + x",
    "improved_lstm_prediction": "x * * 3 / 6 + x",
    "transformer_prediction": "x * * 3 / 6 + x"
  },
  {
    "function": "(x**3 - 3*x**2 + x + 4)*cos(4*x)",
    "true_expansion": "200*x**4/3 - 7*x**3 - 35*x**2 + x + 4",
    "lstm_prediction": "200 * x * * 4 / 3 - 6 * x * * 3 + 8 * x * * 2 + 6 * x + 4",
    "improved_lstm_prediction": "200 * x * * 4 / 3 + 5 * x * * 3 - 19 * x * * 2 + x + 4",
    "transformer_prediction": "x * * 4 / 6 + x * * 3 / 2 + 2 * x * * 2 + 4 * x + 4"
  },
  {
    "function": "exp(5*x)",
    "true_expansion": "625*x**4/24 + 125*x**3/6 + 25*x**2/2 + 5*x + 1",
    "lstm_prediction": "625 * x * * 4 / 24 + 125 * x * * 2 / 2 + 5 * x + 1",
    "improved_lstm_prediction": "625 * x * * 4 / 24 + 125 * x * * 3 / 6 + 25 * x * * 2 + 5 * x + 1",
    "transformer_prediction": "625 * x * * 4 / 24 + 125 * x * * 3 / 6 + 25 * x * * 2 / 2 + 5 * x + 1"
  },
  {
    "function": "tan(2*x)",
    "true_expansion": "8*x**3/3 + 2*x",
    "lstm_prediction": "8 * x * * 3 / 3 + 2 * x",
    "improved_lstm_prediction": "8 * x * * 3 / 3 + 2 * x",
    "transformer_prediction": "2 * x * * 3 / 3 + 2 * x"
  },
  {
    "function": "(2*x - 2)*log(x + 1)",
    "true_expansion": "7*x**4/6 - 5*x**3/3 + 3*x**2 - 2*x",
    "lstm_prediction": "- x * * 4 / 3 + x * * 3 / 3 - 2 * x * * 2 + 2 * x",
    "improved_lstm_prediction": "x * * 4 / 3 + 4 * x * * 3 / 3 + 4 * x",
    "transformer_prediction": "- 4 * x * * 4 / 3 + 14 * x * * 3 / 3 - 4 * x * * 2 + 2 * x"
  },
  {
    "function": "2*log(x + 1) - 3",
    "true_expansion": "-x**4/2 + 2*x**3/3 - x**2 + 2*x - 3",
    "lstm_prediction": "- x * * 4 / 2 + 2 * x * * 3 / 3 - x * * 2 + x - 2",
    "improved_lstm_prediction": "- x * * 4 / 2 + 2 * x * * 3 / 3 - x * * 2 + 2 * x - 3",
    "transformer_prediction": "- 3 * x * * 4 / 4 + x * * 3 - 3 * x * * 2 / 2 + 3 * x - 3"
  },
  {
    "function": "2*sqrt(x + 1)",
    "true_expansion": "-5*x**4/64 + x**3/8 - x**2/4 + x + 2",
    "lstm_prediction": "- 5 * x * * 4 / 64 + x * * 3 / 8 - x * * 2 / 4 + x + 2",
    "improved_lstm_prediction": "- 5 * x * * 4 / 64 + x * * 3 / 8 - x * * 2 / 4 + x + 2",
    "transformer_prediction": "- 5 * x * * 4 / 64 + x * * 3 / 8 - x * * 2 / 4 + x + 2"
  },
  {
    "function": "cos(x)",
    "true_expansion": "x**4/24 - x**2/2 + 1",
    "lstm_prediction": "x * * 2 / 2 + 1",
    "improved_lstm_prediction": "x * * 4 / 24 - x * * 2 / 2 + 1",
    "transformer_prediction": "x * * 4 / 24 - x * * 2 / 2 + 1"
  },
  {
    "function": "(2*x**3 - 2*x**2 + x + 2)*exp(2*x)",
    "true_expansion": "8*x**4/3 + 8*x**3/3 + 4*x**2 + 5*x + 2",
    "lstm_prediction": "2 * x * * 4 / 3 - 4 * x * * 3 / 3 + 2 * x * * 2 + 2 * x + 2",
    "improved_lstm_prediction": "- 10 * x * * 4 / 3 + 10 * x * * 3 / 3 + 4 * x * * 2 + 5 * x + 2",
    "transformer_prediction": "- 5 * x * * 4 / 12 + 13 * x * * 3 / 3 + 3 * x * * 2 + 2 * x + 2"
  },
  {
    "function": "(3 - x)*log(4*x + 1)",
    "true_expansion": "-640*x**4/3 + 72*x**3 - 28*x**2 + 12*x",
    "lstm_prediction": "- 56 * x * * 4 / 3 + 4 * x * * 3 / 3 - 4 * x * * 2 + 4 * x",
    "improved_lstm_prediction": "- 56 * x * * 4 + 88 * x * * 3 / 3 - 12 * x * * 2 + 12 * x",
    "transformer_prediction": "- x * * 4 + 4 * x * * 3 / 3 - 8 * x * * 2 + 4 * x"
  },
  {
    "function": "2*x**2 + 5*sin(x) - 2",
    "true_expansion": "-5*x**3/6 + 2*x**2 + 5*x - 2",
    "lstm_prediction": "5 * x * * 3 / 6 + 2 * x * * 2 + 5 * x - 2",
    "improved_lstm_prediction": "- 5 * x * * 3 / 6 + 2 * x * * 2 + 5 * x - 2",
    "transformer_prediction": "- 5 * x * * 3 / 6 + 2 * x * * 2 + 5 * x - 2"
  },
  {
    "function": "2*x + sqrt(x + 1) - 3",
    "true_expansion": "-5*x**4/128 + x**3/16 - x**2/8 + 5*x/2 - 2",
    "lstm_prediction": "- 5 * x * * 4 / 128 + x * * 3 / 16 - x * * 2 / 8 + 7 * x / 2 - 2",
    "improved_lstm_prediction": "- 5 * x * * 4 / 128 + x * * 3 / 16 - x * * 2 / 8 + 5 * x / 2 - 2",
    "transformer_prediction": "- 15 * x * * 4 / 128 + 3 * x * * 3 / 16 - 3 * x * * 2 / 8 + 3 * x / 2 + 3"
  },
  {
    "function": "atan(5*x)",
    "true_expansion": "-125*x**3/3 + 5*x",
    "lstm_prediction": "* x * * 3 / 3 + 5 * x",
    "improved_lstm_prediction": "- 125 * x * * 3 / 3 + 5 * x",
    "transformer_prediction": "- 125 * x * * 3 / 3 + 5 * x"
  },
  {
    "function": "log(4*x + 1)",
    "true_expansion": "-64*x**4 + 64*x**3/3 - 8*x**2 + 4*x",
    "lstm_prediction": "- 64 * x * * 4 + 64 * x * * 3 / 3 - 8 * x * * 2 + 4 * x",
    "improved_lstm_prediction": "- 64 * x * * 4 + 64 * x * * 3 / 3 + 8 * x * * 2 + 4 * x",
    "transformer_prediction": "- 64 * x * * 4 + 64 * x * * 3 / 3 - 8 * x * * 2 + 4 * x"
  },
  {
    "function": "tan(2*x)",
    "true_expansion": "8*x**3/3 + 2*x",
    "lstm_prediction": "8 * x * * 3 / 3 + 2 * x",
    "improved_lstm_prediction": "8 * x * * 3 / 3 + 2 * x",
    "transformer_prediction": "2 * x * * 3 / 3 + 2 * x"
  },
  {
    "function": "x",
    "true_expansion": "x",
    "lstm_prediction": "x * * 2 / 2 + 1",
    "improved_lstm_prediction": "x * * 3 + x",
    "transformer_prediction": "x"
  },
  {
    "function": "5*sqrt(x + 1)",
    "true_expansion": "-25*x**4/128 + 5*x**3/16 - 5*x**2/8 + 5*x/2 + 5",
    "lstm_prediction": "- 25 * x * * 4 / 128 + 5 * x * * 3 / 16 - 5 * x * * 2 / 8 + 5 * x / 2 + 5",
    "improved_lstm_prediction": "- 25 * x * * 4 / 128 + 5 * x * * 3 / 16 - 5 * x * * 2 / 8 + 5 * x / 2 + 3",
    "transformer_prediction": "- 25 * x * * 4 / 128 + 5 * x * * 3 / 16 - 5 * x * * 2 / 8 + 5 * x / 2 + 5"
  },
  {
    "function": "x**2 - x + 5*cos(x) - 2",
    "true_expansion": "5*x**4/24 - 3*x**2/2 - x + 3",
    "lstm_prediction": "5 * x * * 4 / 24 + x * * 2 / 2 - 2 * x + 5",
    "improved_lstm_prediction": "5 * x * * 4 / 24 + x * * 2 / 2 - x + 3",
    "transformer_prediction": "625 * x * * 4 / 24 - 25 * x * * 2 / 2 - 2 * x + 3"
  },
  {
    "function": "5*x",
    "true_expansion": "5*x",
    "lstm_prediction": "5 * x",
    "improved_lstm_prediction": "5 * x * * 3 / 2 + 5 * x",
    "transformer_prediction": "5 * x"
  },
  {
    "function": "tan(3*x)",
    "true_expansion": "9*x**3 + 3*x",
    "lstm_prediction": "9 * x * * 3 + 3 * x",
    "improved_lstm_prediction": "9 * x * * 3 + 3 * x",
    "transformer_prediction": "9 * x * * 3 + 3 * x"
  },
  {
    "function": "(3*x**2 - x + 3)*tan(x)",
    "true_expansion": "-x**4/3 + 4*x**3 - x**2 + 3*x",
    "lstm_prediction": "x * * 4 + 2 * x * * 3 - 3 * x * * 2 + 3 * x",
    "improved_lstm_prediction": "x * * 3 / 3 + x * * 2 + 3 * x",
    "transformer_prediction": "- 2 * x * * 4 + 2 * x * * 3 + 6 * x * * 2 + 6 * x"
  },
  {
    "function": "sin(x)",
    "true_expansion": "-x**3/6 + x",
    "lstm_prediction": "* x * * 3 / 2 + 5 * x",
    "improved_lstm_prediction": "- x * * 3 / 6 + x",
    "transformer_prediction": "- x * * 3 / 6 + x"
  },
  {
    "function": "cos(2*x) - 3",
    "true_expansion": "2*x**4/3 - 2*x**2 - 2",
    "lstm_prediction": "2 * x * * 3 / 2 - 3 * x + 1",
    "improved_lstm_prediction": "2 * x * * 4 / 3 - 2 * x * * 2 - 2",
    "transformer_prediction": "x * * 4 / 12 - x * * 2 - 2"
  },
  {
    "function": "2*sinh(x)",
    "true_expansion": "x**3/3 + 2*x",
    "lstm_prediction": "x * * 3 / 3 + 2 * x",
    "improved_lstm_prediction": "x * * 3 / 3 + 2 * x",
    "transformer_prediction": "4 * x * * 3 / 3 + 2 * x"
  },
  {
    "function": "cos(x)",
    "true_expansion": "x**4/24 - x**2/2 + 1",
    "lstm_prediction": "x * * 2 / 2 + 1",
    "improved_lstm_prediction": "x * * 4 / 24 - x * * 2 / 2 + 1",
    "transformer_prediction": "x * * 4 / 24 - x * * 2 / 2 + 1"
  },
  {
    "function": "cosh(x)",
    "true_expansion": "x**4/24 + x**2/2 + 1",
    "lstm_prediction": "x * * 2 / 2 + 1",
    "improved_lstm_prediction": "x * * 4 / 24 + x * * 2 / 2 + 1",
    "transformer_prediction": "x * * 4 / 24 + x * * 2 / 2 + 1"
  },
  {
    "function": "exp(4*x) - 2",
    "true_expansion": "32*x**4/3 + 32*x**3/3 + 8*x**2 + 4*x - 1",
    "lstm_prediction": "32 * x * * 4 / 3 + 32 * x * * 3 / 3 + 8 * x * * 2 + 4 * x + 1",
    "improved_lstm_prediction": "32 * x * * 4 / 3 + 32 * x * * 3 / 3 + 8 * x * * 2 + 4 * x - 1",
    "transformer_prediction": "32 * x * * 4 / 3 + 32 * x * * 3 / 3 + 8 * x * * 2 + 4 * x - 1"
  },
  {
    "function": "4*sqrt(x + 1)*(-x**2 - x)",
    "true_expansion": "x**4/4 - 3*x**3/2 - 6*x**2 - 4*x",
    "lstm_prediction": "x * * 4 / 4 - 3 * x * * 3 / 2 - 6 * x * * 2 - 4 * x",
    "improved_lstm_prediction": "- 23 * x * * 4 / 16 - 5 * x * * 3 / 2 - 8 * x * * 2 - 4 * x",
    "transformer_prediction": "- 11 * x * * 4 / 32 + 5 * x * * 3 / 8 - x * * 2 / 2 - 2 * x + 4"
  },
  {
    "function": "cos(2*x)",
    "true_expansion": "2*x**4/3 - 2*x**2 + 1",
    "lstm_prediction": "x * * 2 + 4",
    "improved_lstm_prediction": "2 * x * * 4 / 3 + 2 * x * * 2 + 1",
    "transformer_prediction": "2 * x * * 4 / 3 - 2 * x * * 2 + 1"
  },
  {
    "function": "-x**2 - 3*x + 3*exp(x) + 1",
    "true_expansion": "x**4/8 + x**3/2 + x**2/2 + 4",
    "lstm_prediction": "x * * 4 / 8 + x * * 3 / 2 + x * * 2 / 2 + 6",
    "improved_lstm_prediction": "x * * 4 / 8 + x * * 3 / 2 - x * * 2 / 2 + 2",
    "transformer_prediction": "x * * 4 / 24 + x * * 3 / 6 + 5 * x * * 2 / 2 + 4 * x + 2"
  },
  {
    "function": "log(x + 1)",
    "true_expansion": "-x**4/4 + x**3/3 - x**2/2 + x",
    "lstm_prediction": "- x * * 4 / 4 + x * * 3 / 3 - x * * 2 / 2 + x",
    "improved_lstm_prediction": "- x * * 4 / 4 + x * * 3 / 3 - x * * 2 / 2 + x",
    "transformer_prediction": "- x * * 4 / 4 + x * * 3 / 3 - x * * 2 / 2 + x"
  },
  {
    "function": "4*x - 3",
    "true_expansion": "4*x - 3",
    "lstm_prediction": "4 * x - 2",
    "improved_lstm_prediction": "4 * x - 3",
    "transformer_prediction": "4 * x - 3"
  },
  {
    "function": "log(x + 1)",
    "true_expansion": "-x**4/4 + x**3/3 - x**2/2 + x",
    "lstm_prediction": "- x * * 4 / 4 + x * * 3 / 3 - x * * 2 / 2 + x",
    "improved_lstm_prediction": "- x * * 4 / 4 + x * * 3 / 3 - x * * 2 / 2 + x",
    "transformer_prediction": "- x * * 4 / 4 + x * * 3 / 3 - x * * 2 / 2 + x"
  },
  {
    "function": "2*(-x**3 - x**2 - x + 1)*cos(x)",
    "true_expansion": "13*x**4/12 - x**3 - 3*x**2 - 2*x + 2",
    "lstm_prediction": "23 * x * * 4 / 12 + 3 * x * * 3 / 2 - 6 * x * * 2 - 4 * x",
    "improved_lstm_prediction": "- 13 * x * * 4 / 24 - x * * 3 - 2 * x * * 2 - 2 * x + 2",
    "transformer_prediction": "- 3 * x * * 4 / 12 + 3 * x * * 3 / 2 + 3 * x * * 2 - 3 * x - 1"
  },
  {
    "function": "sinh(x)",
    "true_expansion": "x**3/6 + x",
    "lstm_prediction": "x * * 3 / 2 + x",
    "improved_lstm_prediction": "x * * 3 / 6 + x",
    "transformer_prediction": "x * * 3 / 6 + x"
  },
  {
    "function": "x",
    "true_expansion": "x",
    "lstm_prediction": "x * * 2 / 2 + 1",
    "improved_lstm_prediction": "x * * 3 + x",
    "transformer_prediction": "x"
  },
  {
    "function": "sqrt(3*x + 1)*(-3*x**2 - 3*x + 2)",
    "true_expansion": "-513*x**4/64 + 9*x**3/4 - 39*x**2/4 + 2",
    "lstm_prediction": "- 711 * x * * 4 / 128 - 63 * x * * 3 / 16 + 33 * x * * 2 / 8 - 15 * x / 2 + 5",
    "improved_lstm_prediction": "- 119 * x * * 4 / 64 + 9 * x * * 3 / 8 - 9 * x * * 2 / 4 - 3 * x + 2",
    "transformer_prediction": "- 15 * x * * 4 / 128 + 3 * x * * 3 / 16 - 3 * x * * 2 / 8 + 3 * x / 2 + 3"
  },
  {
    "function": "-5*cos(x)",
    "true_expansion": "-5*x**4/24 + 5*x**2/2 - 5",
    "lstm_prediction": "5 * x * * 4 / 8 + 5 * x * * 2 / 2 - 5",
    "improved_lstm_prediction": "5 * x * * 4 / 24 - 5 * x * * 2 / 2 - 5",
    "transformer_prediction": "- 5 * x * * 4 / 24 + 5 * x * * 2 / 2 - 5"
  },
  {
    "function": "exp(2*x)",
    "true_expansion": "2*x**4/3 + 4*x**3/3 + 2*x**2 + 2*x + 1",
    "lstm_prediction": "2 * x * * 4 / 3 + 4 * x * * 3 / 2 + 2 * x * * 2 + 2 * x + 1",
    "improved_lstm_prediction": "2 * x * * 4 / 3 + 4 * x * * 3 / 3 + 2 * x * * 2 + 2 * x + 1",
    "transformer_prediction": "2 * x * * 4 / 3 + 4 * x * * 3 / 3 + 2 * x * * 2 + 2 * x + 1"
  },
  {
    "function": "cosh(x)",
    "true_expansion": "x**4/24 + x**2/2 + 1",
    "lstm_prediction": "x * * 2 / 2 + 1",
    "improved_lstm_prediction": "x * * 4 / 24 + x * * 2 / 2 + 1",
    "transformer_prediction": "x * * 4 / 24 + x * * 2 / 2 + 1"
  },
  {
    "function": "-2*x**3 + 2*x**2 - x - 1 + 1/(1 - x)",
    "true_expansion": "x**4 - x**3 + 3*x**2",
    "lstm_prediction": "x * * 4 - 2 * x * * 3 + 2 * x * * 2 - x",
    "improved_lstm_prediction": "x * * 4 - 2 * x * * 3 + 3 * x * * 2",
    "transformer_prediction": "81 * x * * 4 + 27 * x * * 3 + 11 * x * * 2 + 3 * x + 1"
  },
  {
    "function": "5*sinh(x)",
    "true_expansion": "5*x**3/6 + 5*x",
    "lstm_prediction": "5 * x * * 3 / 6 + 5 * x",
    "improved_lstm_prediction": "5 * x * * 3 / 6 + 5 * x",
    "transformer_prediction": "125 * x * * 3 / 6 + 5 * x"
  },
  {
    "function": "-3 + 3/(1 - x)",
    "true_expansion": "3*x**4 + 3*x**3 + 3*x**2 + 3*x",
    "lstm_prediction": "3 * x * * 4 + 3 * x * * 3 + 3 * x * * 2 + x + 3",
    "improved_lstm_prediction": "3 * x * * 4 + 3 * x * * 3 + 3 * x * * 2 + 3 * x",
    "transformer_prediction": "3 * x * * 4 + 3 * x * * 3 + 3 * x * * 2 + 3 * x + 3"
  },
  {
    "function": "cos(x)",
    "true_expansion": "x**4/24 - x**2/2 + 1",
    "lstm_prediction": "x * * 2 / 2 + 1",
    "improved_lstm_prediction": "x * * 4 / 24 - x * * 2 / 2 + 1",
    "transformer_prediction": "x * * 4 / 24 - x * * 2 / 2 + 1"
  },
  {
    "function": "tan(x) + 2",
    "true_expansion": "x**3/3 + x + 2",
    "lstm_prediction": "x * * 3 / 3 + x + 2",
    "improved_lstm_prediction": "x * * 3 / 3 + x + 2",
    "transformer_prediction": "x * * 3 / 3 + x + 2"
  },
  {
    "function": "5*sqrt(x + 1)*(2*x + 1)",
    "true_expansion": "55*x**4/128 - 15*x**3/16 + 35*x**2/8 + 25*x/2 + 5",
    "lstm_prediction": "- 25 * x * * 4 / 128 + 5 * x * * 3 / 16 - 25 * x * * 2 / 8 + 5 * x / 2 + 5",
    "improved_lstm_prediction": "105 * x * * 4 / 128 - 25 * x * * 3 / 16 + 45 * x * * 2 / 8 + 15 * x / 2 + 5",
    "transformer_prediction": "- 25 * x * * 4 / 64 + 5 * x * * 3 / 8 - 5 * x * * 2 / 4 + 5 * x + 5"
  },
  {
    "function": "(x + 2)*log(x + 1)",
    "true_expansion": "-x**4/6 + x**3/6 + 2*x",
    "lstm_prediction": "- x * * 4 / 6 + 2 * x * * 3 / 3 - x * * 2 + 2 * x",
    "improved_lstm_prediction": "- x * * 4 / 3 + x * * 3 / 3 - x * * 2 + 2 * x",
    "transformer_prediction": "- 4 * x * * 4 + 8 * x * * 3 / 3 - 2 * x * * 2 + 2 * x"
  },
  {
    "function": "cosh(5*x)",
    "true_expansion": "625*x**4/24 + 25*x**2/2 + 1",
    "lstm_prediction": "2525 * x * * 2 / 2 + 5",
    "improved_lstm_prediction": "625 * x * * 4 / 24 + 25 * x * * 2 / 2 + 1",
    "transformer_prediction": "625 * x * * 4 / 24 + 25 * x * * 2 / 2 + 1"
  },
  {
    "function": "-3*x + sinh(x) - 2",
    "true_expansion": "x**3/6 - 2*x - 2",
    "lstm_prediction": "x * * 3 / 6 - 2 * x - 2",
    "improved_lstm_prediction": "x * * 3 / 6 - 2 * x - 2",
    "transformer_prediction": "x * * 3 / 6 - 2 * x - 3"
  },
  {
    "function": "tan(x)",
    "true_expansion": "x**3/3 + x",
    "lstm_prediction": "x * * 3 / 3 + x",
    "improved_lstm_prediction": "x * * 3 / 3 + x",
    "transformer_prediction": "x * * 3 / 3 + x"
  },
  {
    "function": "-3*x**3 + 3*x**2 + cosh(x) - 2",
    "true_expansion": "x**4/24 - 3*x**3 + 7*x**2/2 - 1",
    "lstm_prediction": "x * * 4 / 24 - 3 * x * * 3 + x * * 2 / 2 + 3",
    "improved_lstm_prediction": "x * * 4 / 24 - 3 * x * * 3 + 7 * x * * 2 / 2 - 1",
    "transformer_prediction": "x * * 4 / 24 + 3 * x * * 3 + 5 * x * * 2 / 2 + 3 * x + 3"
  },
  {
    "function": "2*x**3 + 2*x**2 - 2*x + 2 + 3/(1 - x)",
    "true_expansion": "3*x**4 + 5*x**3 + 5*x**2 + x + 5",
    "lstm_prediction": "3 * x * * 4 + 2 * x * * 3 + 2 * x * * 2 + 2 * x + 4",
    "improved_lstm_prediction": "5 * x * * 4 + 5 * x * * 3 + 5 * x * * 2 + x + 5",
    "transformer_prediction": "81 * x * * 4 + 26 * x * * 3 + 11 * x * * 2 + 5 * x + 3"
  },
  {
    "function": "-3*x**2 - 2*x + 4*sqrt(x + 1)",
    "true_expansion": "-5*x**4/32 + x**3/4 - 7*x**2/2 + 4",
    "lstm_prediction": "- 5 * x * * 4 / 32 + x * * 3 / 4 - 7 * x * * 2 / 2 + 2 * x",
    "improved_lstm_prediction": "- 5 * x * * 4 / 32 + x * * 3 / 4 - 5 * x * * 2 / 2 + 2",
    "transformer_prediction": "- 5 * x * * 4 / 32 + x * * 3 / 4 - 3 * x * * 2 / 2 + 2 * x + 4"
  },
  {
    "function": "4*exp(x)",
    "true_expansion": "x**4/6 + 2*x**3/3 + 2*x**2 + 4*x + 4",
    "lstm_prediction": "x * * 4 / 6 + 2 * x * * 3 / 3 + 2 * x * * 2 + 4 * x + 4",
    "improved_lstm_prediction": "x * * 4 / 6 + 2 * x * * 3 / 3 + 2 * x * * 2 + 4 * x + 4",
    "transformer_prediction": "32 * x * * 4 / 3 + 32 * x * * 3 / 3 + 8 * x * * 2 + 4 * x + 1"
  },
  {
    "function": "sqrt(x + 1)",
    "true_expansion": "-5*x**4/128 + x**3/16 - x**2/8 + x/2 + 1",
    "lstm_prediction": "- 5 * x * * 4 / 128 + x * * 3 / 16 - x * * 2 / 8 + x / 2 + 1",
    "improved_lstm_prediction": "- 5 * x * * 4 / 128 + x * * 3 / 16 - x * * 2 / 8 + x / 2 + 1",
    "transformer_prediction": "- 5 * x * * 4 / 128 + x * * 3 / 16 - x * * 2 / 8 + x / 2 + 1"
  },
  {
    "function": "5/(1 - x)",
    "true_expansion": "5*x**4 + 5*x**3 + 5*x**2 + 5*x + 5",
    "lstm_prediction": "5 * x * * 4 + 5 * x * * 3 + 5 * x * * 2 + 5 * x + 5",
    "improved_lstm_prediction": "5 * x * * 4 + 5 * x * * 3 + 5 * x * * 2 + 5 * x + 5",
    "transformer_prediction": "5 * x * * 4 + 5 * x * * 3 + 5 * x * * 2 + 5 * x + 5"
  },
  {
    "function": "tan(x)",
    "true_expansion": "x**3/3 + x",
    "lstm_prediction": "x * * 3 / 3 + x",
    "improved_lstm_prediction": "x * * 3 / 3 + x",
    "transformer_prediction": "x * * 3 / 3 + x"
  },
  {
    "function": "-2/(1 - x)",
    "true_expansion": "-2*x**4 - 2*x**3 - 2*x**2 - 2*x - 2",
    "lstm_prediction": "- 2 * x * * 4 - 2 * x * * 2 - 2 * x - 2",
    "improved_lstm_prediction": "- 2 * x * * 4 - 2 * x * * 3 - 2 * x * * 2 - 2 * x - 2",
    "transformer_prediction": "- 3 * x * * 4 - 2 * x * * 3 - 2 * x * * 2 - 2 * x - 2"
  },
  {
    "function": "3*log(2*x + 1)",
    "true_expansion": "-12*x**4 + 8*x**3 - 6*x**2 + 6*x",
    "lstm_prediction": "- 12 * x * * 4 + 8 * x * * 3 - 6 * x * * 2 + 6 * x",
    "improved_lstm_prediction": "- 4 * x * * 4 + 8 * x * * 3 - 6 * x * * 2 + 6 * x",
    "transformer_prediction": "- 3 * x * * 4 / 4 + x * * 3 - 3 * x * * 2 / 2 + 6 * x"
  },
  {
    "function": "2*x + tan(4*x)",
    "true_expansion": "64*x**3/3 + 6*x",
    "lstm_prediction": "64 * x * * 3 / 3 + 5 * x",
    "improved_lstm_prediction": "64 * x * * 3 / 3 + 6 * x",
    "transformer_prediction": "64 * x * * 3 / 3 + 6 * x"
  },
  {
    "function": "log(5*x + 1)",
    "true_expansion": "-625*x**4/4 + 125*x**3/3 - 25*x**2/2 + 5*x",
    "lstm_prediction": "- 625 * x * * 4 / 4 + 125 * x * * 3 / 3 - 25 * x * * 2 / 2 + 5 * x",
    "improved_lstm_prediction": "- 625 * x * * 4 / 4 + 125 * x * * 3 / 3 - 25 * x * * 2 / 2 + 5 * x",
    "transformer_prediction": "- 625 * x * * 4 / 4 + 125 * x * * 3 / 3 - 25 * x * * 2 / 2 + 5 * x"
  },
  {
    "function": "-2*x**3 + 3*x**2 - 2*x + log(2*x + 1) + 1",
    "true_expansion": "-4*x**4 + 2*x**3/3 + x**2 + 1",
    "lstm_prediction": "- 4 * x * * 4 - x * * 3 / 3 + x * * 2 + 2 * x - 1",
    "improved_lstm_prediction": "- 4 * x * * 4 / 3 - 5 * x * * 3 / 3 + 5 * x * * 2 + 1",
    "transformer_prediction": "- x * * 4 / 4 + 2 * x * * 3 / 3 + 5 * x * * 2 / 2 + 4 * x + 1"
  },
  {
    "function": "sinh(x)",
    "true_expansion": "x**3/6 + x",
    "lstm_prediction": "x * * 3 / 2 + x",
    "improved_lstm_prediction": "x * * 3 / 6 + x",
    "transformer_prediction": "x * * 3 / 6 + x"
  },
  {
    "function": "cosh(x)",
    "true_expansion": "x**4/24 + x**2/2 + 1",
    "lstm_prediction": "x * * 2 / 2 + 1",
    "improved_lstm_prediction": "x * * 4 / 24 + x * * 2 / 2 + 1",
    "transformer_prediction": "x * * 4 / 24 + x * * 2 / 2 + 1"
  },
  {
    "function": "(2*x**2 + 2*x + 1)*tan(3*x)",
    "true_expansion": "18*x**4 + 15*x**3 + 6*x**2 + 3*x",
    "lstm_prediction": "- 27 * x * * 4 / 3 + 8 * x * * 3 + 8 * x * * 2 + 12 * x",
    "improved_lstm_prediction": "9 * x * * 4 + 9 * x * * 3 + 12 * x * * 2 + 3 * x",
    "transformer_prediction": "2 * x * * 4 + 10 * x * * 3 / 3 + 6 * x * * 2 + 2 * x"
  },
  {
    "function": "sqrt(3*x + 1)",
    "true_expansion": "-405*x**4/128 + 27*x**3/16 - 9*x**2/8 + 3*x/2 + 1",
    "lstm_prediction": "- 405 * x * * 4 / 128 + 27 * x * * 3 / 16 - 9 * x * * 2 / 8 + 3 * x / 2 + 1",
    "improved_lstm_prediction": "- 405 * x * * 4 / 128 + 27 * x * * 3 / 16 - 9 * x * * 2 / 8 + 3 * x / 2 + 1",
    "transformer_prediction": "- 15 * x * * 4 / 128 + 3 * x * * 3 / 16 - 3 * x * * 2 / 8 + 3 * x / 2 + 3"
  },
  {
    "function": "x**2 + x + exp(x) - 3",
    "true_expansion": "x**4/24 + x**3/6 + 3*x**2/2 + 2*x - 2",
    "lstm_prediction": "x * * 4 / 24 + x * * 3 / 6 + 7 * x * * 2 / 2 + 2",
    "improved_lstm_prediction": "x * * 4 / 24 + x * * 3 / 6 + 3 * x * * 2 / 2 + 2 * x - 2",
    "transformer_prediction": "x * * 4 / 24 + x * * 3 / 6 + x * * 2 / 2 + 4 * x + 4"
  },
  {
    "function": "cos(3*x)",
    "true_expansion": "27*x**4/8 - 9*x**2/2 + 1",
    "lstm_prediction": "* x * * 2 / 2 + 1",
    "improved_lstm_prediction": "27 * x * * 4 / 8 + 9 * x * * 2 / 2 + 1",
    "transformer_prediction": "x * * 4 / 8 - 3 * x * * 2 / 2 + 3"
  },
  {
    "function": "2*x*(x**3 + x**2 + 3*x)",
    "true_expansion": "2*x**4 + 2*x**3 + 6*x**2",
    "lstm_prediction": "2 * x * * 4 + 2 * x * * 3 + 2 * x * * 2",
    "improved_lstm_prediction": "6 * x * * 4 + 8 * x * * 3 + 6 * x * * 2 + 6 * x",
    "transformer_prediction": "3 * x * * 4 + 3 * x * * 3 + 3 * x * * 2 + 3 * x"
  },
  {
    "function": "0",
    "true_expansion": "0",
    "lstm_prediction": "* x + 1",
    "improved_lstm_prediction": "0",
    "transformer_prediction": "0"
  },
  {
    "function": "4*sinh(x)",
    "true_expansion": "2*x**3/3 + 4*x",
    "lstm_prediction": "2 * x * * 3 / 3 + 4 * x",
    "improved_lstm_prediction": "2 * x * * 3 / 3 + 4 * x",
    "transformer_prediction": "32 * x * * 3 / 3 + 4 * x"
  },
  {
    "function": "4*sin(x)",
    "true_expansion": "-2*x**3/3 + 4*x",
    "lstm_prediction": "* x * * 3 / 3 + 4 * x",
    "improved_lstm_prediction": "- 2 * x * * 3 / 3 + 4 * x",
    "transformer_prediction": "- 32 * x * * 3 / 3 + 4 * x"
  },
  {
    "function": "tan(5*x)",
    "true_expansion": "125*x**3/3 + 5*x",
    "lstm_prediction": "125 * x * * 3 / 3 + 5 * x",
    "improved_lstm_prediction": "125 * x * * 3 / 3 + 5 * x",
    "transformer_prediction": "5 * x * * 3 / 3 + 5 * x"
  },
  {
    "function": "5*exp(x) - 2",
    "true_expansion": "5*x**4/24 + 5*x**3/6 + 5*x**2/2 + 5*x + 3",
    "lstm_prediction": "5 * x * * 4 / 24 + 5 * x * * 3 / 6 + 5 * x * * 2 / 2 + 5 * x + 5",
    "improved_lstm_prediction": "5 * x * * 4 / 24 + 5 * x * * 3 / 6 + 5 * x * * 2 / 2 + 5 * x + 3",
    "transformer_prediction": "625 * x * * 4 / 24 + 125 * x * * 3 / 6 + 25 * x * * 2 / 2 + 5 * x - 1"
  },
  {
    "function": "atan(2*x)",
    "true_expansion": "-8*x**3/3 + 2*x",
    "lstm_prediction": "- 8 * x * * 3 / 3 + 2 * x",
    "improved_lstm_prediction": "- 8 * x * * 3 / 3 + 2 * x",
    "transformer_prediction": "- 2 * x * * 3 / 3 + 2 * x"
  },
  {
    "function": "cosh(x)",
    "true_expansion": "x**4/24 + x**2/2 + 1",
    "lstm_prediction": "x * * 2 / 2 + 1",
    "improved_lstm_prediction": "x * * 4 / 24 + x * * 2 / 2 + 1",
    "transformer_prediction": "x * * 4 / 24 + x * * 2 / 2 + 1"
  },
  {
    "function": "tan(x)",
    "true_expansion": "x**3/3 + x",
    "lstm_prediction": "x * * 3 / 3 + x",
    "improved_lstm_prediction": "x * * 3 / 3 + x",
    "transformer_prediction": "x * * 3 / 3 + x"
  },
  {
    "function": "2*log(x + 1)",
    "true_expansion": "-x**4/2 + 2*x**3/3 - x**2 + 2*x",
    "lstm_prediction": "- x * * 4 / 2 + 2 * x * * 3 / 3 - x * * 2 / 2 + x",
    "improved_lstm_prediction": "- x * * 4 / 2 + 2 * x * * 3 / 3 - x * * 2 + 2 * x",
    "transformer_prediction": "- 4 * x * * 4 + 8 * x * * 3 / 3 - 2 * x * * 2 + 2 * x"
  },
  {
    "function": "exp(x)",
    "true_expansion": "x**4/24 + x**3/6 + x**2/2 + x + 1",
    "lstm_prediction": "x * * 4 / 24 + x * * 2 / 2 + x + 1",
    "improved_lstm_prediction": "x * * 4 / 24 + x * * 3 / 6 + x * * 2 + x + 1",
    "transformer_prediction": "x * * 4 / 24 + x * * 3 / 6 + x * * 2 / 2 + x + 1"
  },
  {
    "function": "2*atan(x)",
    "true_expansion": "-2*x**3/3 + 2*x",
    "lstm_prediction": "- x * * 3 / 3 + 2 * x",
    "improved_lstm_prediction": "- 2 * x * * 3 / 3 + 2 * x",
    "transformer_prediction": "- 2 * x * * 3 / 3 + 2 * x"
  },
  {
    "function": "-x**3 + x**2 + 2*cos(x) - 2",
    "true_expansion": "x**4/12 - x**3",
    "lstm_prediction": "x * * 4 / 12 - x * * 3 + x * * 2 - x + 1",
    "improved_lstm_prediction": "x * * 4 / 12 - x * * 3 - x",
    "transformer_prediction": "x * * 4 / 24 + 3 * x * * 3 + 5 * x * * 2 / 2 + 3 * x + 3"
  },
  {
    "function": "(3*x + 2)*atan(3*x)",
    "true_expansion": "-27*x**4 - 18*x**3 + 9*x**2 + 6*x",
    "lstm_prediction": "- 27 * x * * 4 / 3 - 18 * x * * 3 + 8 * x * * 2 + 12 * x",
    "improved_lstm_prediction": "- 9 * x * * 4 - 18 * x * * 3 + 18 * x * * 2 + 6 * x",
    "transformer_prediction": "- 2 * x * * 4 + 6 * x * * 3 + 6 * x * * 2 + 6 * x"
  },
  {
    "function": "log(x + 1)",
    "true_expansion": "-x**4/4 + x**3/3 - x**2/2 + x",
    "lstm_prediction": "- x * * 4 / 4 + x * * 3 / 3 - x * * 2 / 2 + x",
    "improved_lstm_prediction": "- x * * 4 / 4 + x * * 3 / 3 - x * * 2 / 2 + x",
    "transformer_prediction": "- x * * 4 / 4 + x * * 3 / 3 - x * * 2 / 2 + x"
  },
  {
    "function": "1/(1 - 3*x)",
    "true_expansion": "81*x**4 + 27*x**3 + 9*x**2 + 3*x + 1",
    "lstm_prediction": "81 * x * * 4 + 27 * x * * 3 + 9 * x * * 2 + 3 * x + 1",
    "improved_lstm_prediction": "81 * x * * 4 + 27 * x * * 3 + 9 * x * * 2 + 3 * x + 1",
    "transformer_prediction": "81 * x * * 4 + 27 * x * * 3 + 9 * x * * 2 + 3 * x + 1"
  },
  {
    "function": "cos(x)",
    "true_expansion": "x**4/24 - x**2/2 + 1",
    "lstm_prediction": "x * * 2 / 2 + 1",
    "improved_lstm_prediction": "x * * 4 / 24 - x * * 2 / 2 + 1",
    "transformer_prediction": "x * * 4 / 24 - x * * 2 / 2 + 1"
  },
  {
    "function": "atan(3*x)",
    "true_expansion": "-9*x**3 + 3*x",
    "lstm_prediction": "- x * * 3 + 3 * x",
    "improved_lstm_prediction": "- 9 * x * * 3 + 3 * x",
    "transformer_prediction": "- 9 * x * * 3 + 3 * x"
  },
  {
    "function": "2*cosh(x)",
    "true_expansion": "x**4/12 + x**2 + 2",
    "lstm_prediction": "x * * 4 / 8 + 3 * x * * 2 / 2 + 3",
    "improved_lstm_prediction": "x * * 4 / 12 + x * * 2 + 2",
    "transformer_prediction": "2 * x * * 4 / 3 + 2 * x * * 2 + 1"
  },
  {
    "function": "(-2*x**3 + 3*x**2)/(1 - 3*x)",
    "true_expansion": "21*x**4 + 7*x**3 + 3*x**2",
    "lstm_prediction": "- 30 * x * * 4 - 15 * x * * 3 - 15 * x * * 2 + 12 * x",
    "improved_lstm_prediction": "99 * x * * 4 + 99 * x * * 3 + 45 * x * * 2 + 6 * x",
    "transformer_prediction": "3 * x * * 4 + 3 * x * * 3 + 3 * x * * 2 + 9 * x + 3"
  },
  {
    "function": "-x**2 - 2*x + cos(x)",
    "true_expansion": "x**4/24 - 3*x**2/2 - 2*x + 1",
    "lstm_prediction": "x * * 4 / 24 - x * * 2 / 2 - 2 * x + 1",
    "improved_lstm_prediction": "x * * 4 / 24 - x * * 2 / 2 - 2 * x + 1",
    "transformer_prediction": "x * * 4 / 24 - 3 * x * * 2 / 2 - 2 * x + 1"
  },
  {
    "function": "tan(2*x)",
    "true_expansion": "8*x**3/3 + 2*x",
    "lstm_prediction": "8 * x * * 3 / 3 + 2 * x",
    "improved_lstm_prediction": "8 * x * * 3 / 3 + 2 * x",
    "transformer_prediction": "2 * x * * 3 / 3 + 2 * x"
  },
  {
    "function": "4/(1 - x)",
    "true_expansion": "4*x**4 + 4*x**3 + 4*x**2 + 4*x + 4",
    "lstm_prediction": "4 * x * * 4 + 4 * x * * 3 + 4 * x * * 2 + 4 * x + 4",
    "improved_lstm_prediction": "4 * x * * 4 + 4 * x * * 3 + 4 * x * * 2 + 4 * x + 4",
    "transformer_prediction": "4 * x * * 4 + 4 * x * * 3 + 4 * x * * 2 + 4 * x + 4"
  },
  {
    "function": "5*sqrt(x + 1)",
    "true_expansion": "-25*x**4/128 + 5*x**3/16 - 5*x**2/8 + 5*x/2 + 5",
    "lstm_prediction": "- 25 * x * * 4 / 128 + 5 * x * * 3 / 16 - 5 * x * * 2 / 8 + 5 * x / 2 + 5",
    "improved_lstm_prediction": "- 25 * x * * 4 / 128 + 5 * x * * 3 / 16 - 5 * x * * 2 / 8 + 5 * x / 2 + 3",
    "transformer_prediction": "- 25 * x * * 4 / 128 + 5 * x * * 3 / 16 - 5 * x * * 2 / 8 + 5 * x / 2 + 5"
  },
  {
    "function": "3*atan(x)",
    "true_expansion": "-x**3 + 3*x",
    "lstm_prediction": "x * * 3 + 3 * x",
    "improved_lstm_prediction": "- x * * 3 + 3 * x",
    "transformer_prediction": "- 9 * x * * 3 + 3 * x"
  },
  {
    "function": "0",
    "true_expansion": "0",
    "lstm_prediction": "* x + 1",
    "improved_lstm_prediction": "0",
    "transformer_prediction": "0"
  },
  {
    "function": "-x**2 + 2*x + sqrt(x + 1) + 2",
    "true_expansion": "-5*x**4/128 + x**3/16 - 9*x**2/8 + 5*x/2 + 3",
    "lstm_prediction": "- 5 * x * * 4 / 128 + x * * 3 / 16 - 17 * x * * 2 / 8 + 5 * x / 2 + 3",
    "improved_lstm_prediction": "- 5 * x * * 4 / 128 + x * * 3 / 16 - 15 * x * * 2 / 8 + 5 * x / 2 + 3",
    "transformer_prediction": "- 5 * x * * 4 / 128 + x * * 3 / 16 - x * * 2 / 8 + 3 * x / 2 + 3"
  },
  {
    "function": "-x + tan(2*x) + 2",
    "true_expansion": "8*x**3/3 + x + 2",
    "lstm_prediction": "8 * x * * 3 / 3 + x + 2",
    "improved_lstm_prediction": "8 * x * * 3 / 3 + x + 2",
    "transformer_prediction": "x * * 3 / 3 + 3 * x - 2"
  },
  {
    "function": "-2*x**3 + x**2 + cos(x) + 2",
    "true_expansion": "x**4/24 - 2*x**3 + x**2/2 + 3",
    "lstm_prediction": "x * * 4 / 24 - 2 * x * * 3 + x * * 2 / 2 + 3",
    "improved_lstm_prediction": "x * * 4 / 24 - 2 * x * * 3 + x * * 2 / 2 + 3",
    "transformer_prediction": "x * * 4 / 24 + 3 * x * * 3 + 5 * x * * 2 / 2 + 3 * x + 3"
  },
  {
    "function": "3*x**2 + cos(5*x)",
    "true_expansion": "625*x**4/24 - 19*x**2/2 + 1",
    "lstm_prediction": "625 * x * * 4 / 24 + 19 * x * * 2 / 2 + 3 * x",
    "improved_lstm_prediction": "625 * x * * 4 / 24 - 31 * x * * 2 / 2 + 1",
    "transformer_prediction": "5 * x * * 4 / 24 + 15 * x * * 3 + 15 * x * * 2 / 2 + 15 * x + 15"
  },
  {
    "function": "5*log(x + 1)",
    "true_expansion": "-5*x**4/4 + 5*x**3/3 - 5*x**2/2 + 5*x",
    "lstm_prediction": "- 5 * x * * 4 / 4 + 5 * x * * 3 / 3 - 5 * x * * 2 / 2 + 5 * x",
    "improved_lstm_prediction": "- 5 * x * * 4 / 4 + 5 * x * * 3 / 3 - 5 * x * * 2 / 2 + 5 * x",
    "transformer_prediction": "- 625 * x * * 4 / 4 + 125 * x * * 3 / 3 - 25 * x * * 2 / 2 + 5 * x"
  },
  {
    "function": "sinh(3*x) + 1",
    "true_expansion": "9*x**3/2 + 3*x + 1",
    "lstm_prediction": "9 * x * * 3 / 2 + 3 * x + 1",
    "improved_lstm_prediction": "9 * x * * 3 + 3 * x + 1",
    "transformer_prediction": "9 * x * * 3 / 2 + 3 * x + 1"
  },
  {
    "function": "3*atan(x)",
    "true_expansion": "-x**3 + 3*x",
    "lstm_prediction": "x * * 3 + 3 * x",
    "improved_lstm_prediction": "- x * * 3 + 3 * x",
    "transformer_prediction": "- 9 * x * * 3 + 3 * x"
  },
  {
    "function": "2*x + tan(5*x) + 3",
    "true_expansion": "125*x**3/3 + 7*x + 3",
    "lstm_prediction": "125 * x * * 3 / 3 + 6 * x + 3",
    "improved_lstm_prediction": "125 * x * * 3 / 3 + 7 * x + 3",
    "transformer_prediction": "5 * x * * 3 / 3 + 8 * x + 3"
  },
  {
    "function": "3*(-3*x**2 + 2*x + 2)*cos(x)",
    "true_expansion": "19*x**4/4 - 3*x**3 - 12*x**2 + 6*x + 6",
    "lstm_prediction": "- 15 * x * * 4 / 4 + 3 * x * * 3 - 6 * x * * 2 + 6 * x + 6",
    "improved_lstm_prediction": "- 13 * x * * 4 / 4 - x * * 3 - 3 * x * * 2 + 3 * x + 6",
    "transformer_prediction": "- 3 * x * * 4 / 4 + 3 * x * * 3 / 2 + 3 * x * * 2 / 2 + 3 * x + 3"
  },
  {
    "function": "3*x",
    "true_expansion": "3*x",
    "lstm_prediction": "3 * x",
    "improved_lstm_prediction": "3 * x * * 2 + 3 * x",
    "transformer_prediction": "3 * x"
  },
  {
    "function": "atan(x)",
    "true_expansion": "-x**3/3 + x",
    "lstm_prediction": "* x * * 3 / 3 + x",
    "improved_lstm_prediction": "- x * * 3 / 3 + x",
    "transformer_prediction": "- x * * 3 / 3 + x"
  },
  {
    "function": "-2*x + 2*tan(x) + 2",
    "true_expansion": "2*x**3/3 + 2",
    "lstm_prediction": "2 * x * * 3 / 3 - 2 * x + 2",
    "improved_lstm_prediction": "2 * x * * 3 / 3 + 1",
    "transformer_prediction": "x * * 3 / 3 + 3 * x - 2"
  },
  {
    "function": "4*sinh(x) - 3",
    "true_expansion": "2*x**3/3 + 4*x - 3",
    "lstm_prediction": "2 * x * * 3 / 3 + 4 * x - 3",
    "improved_lstm_prediction": "2 * x * * 3 / 3 + 4 * x - 3",
    "transformer_prediction": "32 * x * * 3 / 3 + 4 * x - 3"
  },
  {
    "function": "1/(1 - x)",
    "true_expansion": "x**4 + x**3 + x**2 + x + 1",
    "lstm_prediction": "x * * 4 + x * * 3 + x * * 2 + x + 1",
    "improved_lstm_prediction": "x * * 4 + x * * 3 + x * * 2 + x + 1",
    "transformer_prediction": "x * * 4 + x * * 3 + x * * 2 + x + 1"
  },
  {
    "function": "tan(4*x)",
    "true_expansion": "64*x**3/3 + 4*x",
    "lstm_prediction": "64 * x * * 3 / 3 + 4 * x",
    "improved_lstm_prediction": "64 * x * * 3 / 3 + 4 * x",
    "transformer_prediction": "4 * x * * 3 / 3 + 4 * x"
  },
  {
    "function": "3*x**3 - x**2 - 2*x + sqrt(x + 1)",
    "true_expansion": "-5*x**4/128 + 49*x**3/16 - 9*x**2/8 - 3*x/2 + 1",
    "lstm_prediction": "- 5 * x * * 4 / 128 + 33 * x * * 3 / 16 - 17 * x * * 2 / 8 - x / 2 + 1",
    "improved_lstm_prediction": "- 5 * x * * 4 / 128 + 49 * x * * 3 / 16 - 7 * x * * 2 / 8 - 3 * x / 2 + 1",
    "transformer_prediction": "- 5 * x * * 4 / 128 + 17 * x * * 3 / 16 + 3 * x * * 2 / 8 + 3 * x / 2 - 1"
  },
  {
    "function": "tan(x)",
    "true_expansion": "x**3/3 + x",
    "lstm_prediction": "x * * 3 / 3 + x",
    "improved_lstm_prediction": "x * * 3 / 3 + x",
    "transformer_prediction": "x * * 3 / 3 + x"
  },
  {
    "function": "sinh(3*x)",
    "true_expansion": "9*x**3/2 + 3*x",
    "lstm_prediction": "9 * x * * 2 / 2 + 1",
    "improved_lstm_prediction": "9 * x * * 3 / 2 + 3 * x",
    "transformer_prediction": "9 * x * * 3 / 2 + 3 * x"
  },
  {
    "function": "3*sqrt(x + 1)*(-2*x**3 - 2*x**2 - 2*x + 4)",
    "true_expansion": "-99*x**4/32 - 15*x**3/2 - 21*x**2/2 + 12",
    "lstm_prediction": "- 147 * x * * 4 / 32 - 15 * x * * 3 / 4 - 3 * x * * 2 / 2 + 6 * x + 6",
    "improved_lstm_prediction": "- 147 * x * * 4 / 16 - 39 * x * * 3 - 19 * x * * 2 + 9 * x + 9",
    "transformer_prediction": "- 11 * x * * 4 / 16 + 5 * x * * 3 / 8 - 3 * x * * 2 + 8 * x + 8"
  },
  {
    "function": "4*cosh(x)",
    "true_expansion": "x**4/6 + 2*x**2 + 4",
    "lstm_prediction": "x * * 4 / 6 + 2 * x * * 2 + 4",
    "improved_lstm_prediction": "x * * 4 / 6 + 2 * x * * 2 + 4",
    "transformer_prediction": "x * * 4 / 6 + 2 * x * * 2 + 4"
  },
  {
    "function": "2*cos(x)",
    "true_expansion": "x**4/12 - x**2 + 2",
    "lstm_prediction": "x * * 2 / 2 + 2",
    "improved_lstm_prediction": "x * * 4 / 12 - x * * 2 + 2",
    "transformer_prediction": "2 * x * * 4 / 3 - 2 * x * * 2 + 1"
  },
  {
    "function": "log(5*x + 1)",
    "true_expansion": "-625*x**4/4 + 125*x**3/3 - 25*x**2/2 + 5*x",
    "lstm_prediction": "- 625 * x * * 4 / 4 + 125 * x * * 3 / 3 - 25 * x * * 2 / 2 + 5 * x",
    "improved_lstm_prediction": "- 625 * x * * 4 / 4 + 125 * x * * 3 / 3 - 25 * x * * 2 / 2 + 5 * x",
    "transformer_prediction": "- 625 * x * * 4 / 4 + 125 * x * * 3 / 3 - 25 * x * * 2 / 2 + 5 * x"
  },
  {
    "function": "log(4*x + 1)",
    "true_expansion": "-64*x**4 + 64*x**3/3 - 8*x**2 + 4*x",
    "lstm_prediction": "- 64 * x * * 4 + 64 * x * * 3 / 3 - 8 * x * * 2 + 4 * x",
    "improved_lstm_prediction": "- 64 * x * * 4 + 64 * x * * 3 / 3 + 8 * x * * 2 + 4 * x",
    "transformer_prediction": "- 64 * x * * 4 + 64 * x * * 3 / 3 - 8 * x * * 2 + 4 * x"
  },
  {
    "function": "4*cos(x)",
    "true_expansion": "x**4/6 - 2*x**2 + 4",
    "lstm_prediction": "x * * 2 / 2 + 4",
    "improved_lstm_prediction": "x * * 4 / 6 - 2 * x * * 2 + 4",
    "transformer_prediction": "x * * 4 / 6 - 2 * x * * 2 + 4"
  },
  {
    "function": "sqrt(5*x + 1)",
    "true_expansion": "-3125*x**4/128 + 125*x**3/16 - 25*x**2/8 + 5*x/2 + 1",
    "lstm_prediction": "* x * * 4 / 128 + x * * 3 / 16 - x * * 2 / 8 + x / 2 + 1",
    "improved_lstm_prediction": "- 3125 * x * * 4 / 128 + 125 * x * * 3 / 16 - 25 * x * * 2 / 8 + 5 * x / 2 + 1",
    "transformer_prediction": "- 25 * x * * 4 / 128 + 5 * x * * 3 / 16 - 5 * x * * 2 / 8 + 5 * x / 2 + 5"
  },
  {
    "function": "-2*exp(x)",
    "true_expansion": "-x**4/12 - x**3/3 - x**2 - 2*x - 2",
    "lstm_prediction": "x * * 4 / 12 - x * * 3 / 2 - x * * 2 - 2 * x - 2",
    "improved_lstm_prediction": "- x * * 4 / 12 - x * * 3 / 3 - x * * 2 - 2 * x - 2",
    "transformer_prediction": "- 4 * x * * 4 / 3 - 4 * x * * 3 / 3 - 2 * x * * 2 - 2 * x - 2"
  },
  {
    "function": "log(x + 1)",
    "true_expansion": "-x**4/4 + x**3/3 - x**2/2 + x",
    "lstm_prediction": "- x * * 4 / 4 + x * * 3 / 3 - x * * 2 / 2 + x",
    "improved_lstm_prediction": "- x * * 4 / 4 + x * * 3 / 3 - x * * 2 / 2 + x",
    "transformer_prediction": "- x * * 4 / 4 + x * * 3 / 3 - x * * 2 / 2 + x"
  },
  {
    "function": "2*x + 3*sqrt(x + 1) - 3",
    "true_expansion": "-15*x**4/128 + 3*x**3/16 - 3*x**2/8 + 7*x/2",
    "lstm_prediction": "- 15 * x * * 4 / 128 + 3 * x * * 3 / 16 - 9 * x * * 2 / 8 + 7 * x / 2 - 1",
    "improved_lstm_prediction": "- 15 * x * * 4 / 128 + 3 * x * * 3 / 16 - 3 * x * * 2 / 8 + 5 * x / 2 + 1",
    "transformer_prediction": "- 15 * x * * 4 / 128 + 3 * x * * 3 / 16 - 3 * x * * 2 / 8 + 3 * x / 2 + 3"
  },
  {
    "function": "cos(x) - 2",
    "true_expansion": "x**4/24 - x**2/2 - 1",
    "lstm_prediction": "x * * 3 / 8 - x / 2",
    "improved_lstm_prediction": "x * * 4 / 24 - x * * 2 / 2 - 1",
    "transformer_prediction": "x * * 4 / 24 - x * * 2 / 2 - 1"
  },
  {
    "function": "tan(x)",
    "true_expansion": "x**3/3 + x",
    "lstm_prediction": "x * * 3 / 3 + x",
    "improved_lstm_prediction": "x * * 3 / 3 + x",
    "transformer_prediction": "x * * 3 / 3 + x"
  },
  {
    "function": "cosh(x)",
    "true_expansion": "x**4/24 + x**2/2 + 1",
    "lstm_prediction": "x * * 2 / 2 + 1",
    "improved_lstm_prediction": "x * * 4 / 24 + x * * 2 / 2 + 1",
    "transformer_prediction": "x * * 4 / 24 + x * * 2 / 2 + 1"
  },
  {
    "function": "(x**2 + 1)*tan(4*x)",
    "true_expansion": "76*x**3/3 + 4*x",
    "lstm_prediction": "64 * x * * 4 / 3 + 32 * x * * 3 / 3 + 4 * x * * 2 + 4 * x",
    "improved_lstm_prediction": "- 88 * x * * 3 / 3 + 4 * x",
    "transformer_prediction": "128 * x * * 4 / 3 + 64 * x * * 3 / 3 + 8 * x * * 2 + 4 * x"
  },
  {
    "function": "exp(x)",
    "true_expansion": "x**4/24 + x**3/6 + x**2/2 + x + 1",
    "lstm_prediction": "x * * 4 / 24 + x * * 2 / 2 + x + 1",
    "improved_lstm_prediction": "x * * 4 / 24 + x * * 3 / 6 + x * * 2 + x + 1",
    "transformer_prediction": "x * * 4 / 24 + x * * 3 / 6 + x * * 2 / 2 + x + 1"
  },
  {
    "function": "3*x**3 + 2*x + tan(x) - 2",
    "true_expansion": "10*x**3/3 + 3*x - 2",
    "lstm_prediction": "10 * x * * 3 / 3 + 4 * x - 2",
    "improved_lstm_prediction": "10 * x * * 3 / 3 + 3 * x - 2",
    "transformer_prediction": "x * * 3 / 3 + 3 * x * * 2 + 4 * x + 3"
  },
  {
    "function": "cosh(2*x)",
    "true_expansion": "2*x**4/3 + 2*x**2 + 1",
    "lstm_prediction": "x * * 2 / 2 + 1",
    "improved_lstm_prediction": "2 * x * * 4 / 3 + 2 * x * * 2 + 1",
    "transformer_prediction": "2 * x * * 4 / 3 + 2 * x * * 2 + 1"
  },
  {
    "function": "tan(4*x) - 1",
    "true_expansion": "64*x**3/3 + 4*x - 1",
    "lstm_prediction": "64 * x * * 3 / 3 + 4 * x - 1",
    "improved_lstm_prediction": "64 * x * * 3 / 3 + 4 * x - 1",
    "transformer_prediction": "4 * x * * 3 / 3 + 4 * x - 1"
  },
  {
    "function": "atan(5*x)",
    "true_expansion": "-125*x**3/3 + 5*x",
    "lstm_prediction": "* x * * 3 / 3 + 5 * x",
    "improved_lstm_prediction": "- 125 * x * * 3 / 3 + 5 * x",
    "transformer_prediction": "- 125 * x * * 3 / 3 + 5 * x"
  },
  {
    "function": "-2*cosh(x)",
    "true_expansion": "-x**4/12 - x**2 - 2",
    "lstm_prediction": "x * * 4 / 2 - 2 * x * * 2 - 2",
    "improved_lstm_prediction": "- x * * 4 / 12 - x * * 2 - 2",
    "transformer_prediction": "- x * * 4 / 12 - x * * 2 - 2"
  },
  {
    "function": "tan(5*x)",
    "true_expansion": "125*x**3/3 + 5*x",
    "lstm_prediction": "125 * x * * 3 / 3 + 5 * x",
    "improved_lstm_prediction": "125 * x * * 3 / 3 + 5 * x",
    "transformer_prediction": "5 * x * * 3 / 3 + 5 * x"
  },
  {
    "function": "exp(x)",
    "true_expansion": "x**4/24 + x**3/6 + x**2/2 + x + 1",
    "lstm_prediction": "x * * 4 / 24 + x * * 2 / 2 + x + 1",
    "improved_lstm_prediction": "x * * 4 / 24 + x * * 3 / 6 + x * * 2 + x + 1",
    "transformer_prediction": "x * * 4 / 24 + x * * 3 / 6 + x * * 2 / 2 + x + 1"
  },
  {
    "function": "2*exp(x)",
    "true_expansion": "x**4/12 + x**3/3 + x**2 + 2*x + 2",
    "lstm_prediction": "x * * 4 / 12 + x * * 3 / 2 + 2 * x * * 2 + x + 4",
    "improved_lstm_prediction": "x * * 4 / 12 + x * * 3 / 3 + x * * 2 + 2 * x + 2",
    "transformer_prediction": "2 * x * * 4 / 3 + 4 * x * * 3 / 3 + 2 * x * * 2 + 2 * x + 1"
  },
  {
    "function": "-3*x**2 + 2*x + sqrt(x + 1) + 1",
    "true_expansion": "-5*x**4/128 + x**3/16 - 25*x**2/8 + 5*x/2 + 2",
    "lstm_prediction": "- 5 * x * * 4 / 128 + x * * 3 / 16 - 17 * x * * 2 / 8 + 5 * x / 2 + 2",
    "improved_lstm_prediction": "- 5 * x * * 4 / 128 + x * * 3 / 16 - 25 * x * * 2 / 8 + 5 * x / 2 + 2",
    "transformer_prediction": "- 5 * x * * 4 / 128 + x * * 3 / 16 + 17 * x * * 2 / 8 + 3 * x / 2 + 3"
  },
  {
    "function": "3*x**2 + atan(x) - 2",
    "true_expansion": "-x**3/3 + 3*x**2 + x - 2",
    "lstm_prediction": "- x * * 3 / 3 + 3 * x * * 2 - x + 2",
    "improved_lstm_prediction": "- x * * 3 / 3 + 3 * x * * 2 + x - 2",
    "transformer_prediction": "- 2 * x * * 3 / 3 + 2 * x - 2"
  },
  {
    "function": "3*x**3 - 3*x**2 - x + atan(x) + 2",
    "true_expansion": "8*x**3/3 - 3*x**2 + 2",
    "lstm_prediction": "10 * x * * 3 / 3 - 3 * x * * 2 - x + 2",
    "improved_lstm_prediction": "10 * x * * 3 / 3 - 3 * x * * 2 + 2",
    "transformer_prediction": "- 2 * x * * 3 / 3 + 3 * x * * 2 + 4 * x - 3"
  },
  {
    "function": "4*cos(x)",
    "true_expansion": "x**4/6 - 2*x**2 + 4",
    "lstm_prediction": "x * * 2 / 2 + 4",
    "improved_lstm_prediction": "x * * 4 / 6 - 2 * x * * 2 + 4",
    "transformer_prediction": "x * * 4 / 6 - 2 * x * * 2 + 4"
  },
  {
    "function": "sqrt(2*x + 1)",
    "true_expansion": "-5*x**4/8 + x**3/2 - x**2/2 + x + 1",
    "lstm_prediction": "- 5 * x * * 4 / 8 + x * * 2 / 2 + x + 1",
    "improved_lstm_prediction": "- 5 * x * * 4 / 8 + x * * 3 / 2 - x * * 2 / 2 + x + 1",
    "transformer_prediction": "- 5 * x * * 4 / 64 + x * * 3 / 8 - x * * 2 / 4 + x + 2"
  },
  {
    "function": "x**2 - 3*x + sin(x) + 3",
    "true_expansion": "-x**3/6 + x**2 - 2*x + 3",
    "lstm_prediction": "- x * * 3 / 6 + x * * 2 - 2 * x + 3",
    "improved_lstm_prediction": "- x * * 3 / 6 + x * * 2 - 2 * x + 3",
    "transformer_prediction": "- x * * 3 / 6 + 3 * x * * 2 + 4 * x + 3"
  },
  {
    "function": "cos(x)",
    "true_expansion": "x**4/24 - x**2/2 + 1",
    "lstm_prediction": "x * * 2 / 2 + 1",
    "improved_lstm_prediction": "x * * 4 / 24 - x * * 2 / 2 + 1",
    "transformer_prediction": "x * * 4 / 24 - x * * 2 / 2 + 1"
  },
  {
    "function": "3*x**3 - 3*x**2 - 2*x + 4*cosh(x) - 1",
    "true_expansion": "x**4/6 + 3*x**3 - x**2 - 2*x + 3",
    "lstm_prediction": "x * * 4 / 6 + 3 * x * * 3 + x * * 2 - 2 * x + 6",
    "improved_lstm_prediction": "x * * 4 / 6 + 3 * x * * 3 - x * * 2 - 2 * x + 4",
    "transformer_prediction": "x * * 4 / 6 + x * * 3 + x * * 2 - x + 4"
  },
  {
    "function": "4*log(x + 1)",
    "true_expansion": "-x**4 + 4*x**3/3 - 2*x**2 + 4*x",
    "lstm_prediction": "- x * * 4 + 4 * x * * 3 / 3 - 2 * x * * 2 + 4 * x",
    "improved_lstm_prediction": "- x * * 4 + 4 * x * * 3 / 3 + 2 * x * * 2 + 4 * x",
    "transformer_prediction": "- 64 * x * * 4 + 64 * x * * 3 / 3 - 8 * x * * 2 + 4 * x"
  },
  {
    "function": "cos(x)",
    "true_expansion": "x**4/24 - x**2/2 + 1",
    "lstm_prediction": "x * * 2 / 2 + 1",
    "improved_lstm_prediction": "x * * 4 / 24 - x * * 2 / 2 + 1",
    "transformer_prediction": "x * * 4 / 24 - x * * 2 / 2 + 1"
  },
  {
    "function": "exp(4*x)",
    "true_expansion": "32*x**4/3 + 32*x**3/3 + 8*x**2 + 4*x + 1",
    "lstm_prediction": "32 * x * * 4 / 3 + 32 * x * * 3 / 3 + 8 * x * * 2 / 2 + 4 * x + 1",
    "improved_lstm_prediction": "32 * x * * 4 + 3 * x * * 3 + 3 * x * * 2 + 4 * x + 1",
    "transformer_prediction": "32 * x * * 4 / 3 + 32 * x * * 3 / 3 + 8 * x * * 2 + 4 * x + 1"
  },
  {
    "function": "sin(x)",
    "true_expansion": "-x**3/6 + x",
    "lstm_prediction": "* x * * 3 / 2 + 5 * x",
    "improved_lstm_prediction": "- x * * 3 / 6 + x",
    "transformer_prediction": "- x * * 3 / 6 + x"
  },
  {
    "function": "sin(x)",
    "true_expansion": "-x**3/6 + x",
    "lstm_prediction": "* x * * 3 / 2 + 5 * x",
    "improved_lstm_prediction": "- x * * 3 / 6 + x",
    "transformer_prediction": "- x * * 3 / 6 + x"
  },
  {
    "function": "2*exp(x)",
    "true_expansion": "x**4/12 + x**3/3 + x**2 + 2*x + 2",
    "lstm_prediction": "x * * 4 / 12 + x * * 3 / 2 + 2 * x * * 2 + x + 4",
    "improved_lstm_prediction": "x * * 4 / 12 + x * * 3 / 3 + x * * 2 + 2 * x + 2",
    "transformer_prediction": "2 * x * * 4 / 3 + 4 * x * * 3 / 3 + 2 * x * * 2 + 2 * x + 1"
  },
  {
    "function": "3*x**2 - 3*x + cosh(x) - 3",
    "true_expansion": "x**4/24 + 7*x**2/2 - 3*x - 2",
    "lstm_prediction": "x * * 4 / 24 + 5 * x * * 2 / 2 - 3 * x - 2",
    "improved_lstm_prediction": "x * * 4 / 24 + 5 * x * * 2 / 2 - 3 * x - 2",
    "transformer_prediction": "x * * 4 / 24 + 3 * x * * 3 + 3 * x * * 2 / 2 - 3 * x + 3"
  },
  {
    "function": "exp(x)",
    "true_expansion": "x**4/24 + x**3/6 + x**2/2 + x + 1",
    "lstm_prediction": "x * * 4 / 24 + x * * 2 / 2 + x + 1",
    "improved_lstm_prediction": "x * * 4 / 24 + x * * 3 / 6 + x * * 2 + x + 1",
    "transformer_prediction": "x * * 4 / 24 + x * * 3 / 6 + x * * 2 / 2 + x + 1"
  },
  {
    "function": "5*(-2*x**3 - 2*x**2 + 3*x - 1)*exp(x)",
    "true_expansion": "-305*x**4/24 - 40*x**3/3 + 5*x**2/2 + 10*x - 5",
    "lstm_prediction": "- 205 * x * * 4 / 24 - 35 * x * * 3 / 6 - 15 * x * * 2 / 2 - 5 * x + 5",
    "improved_lstm_prediction": "- 25 * x * * 4 / 24 - 205 * x * * 3 / 6 + 25 * x * * 2 / 2 + 20 * x - 5",
    "transformer_prediction": "- 25 * x * * 4 / 24 - 25 * x * * 3 / 6 - 15 * x * * 2 / 2 - 15 * x - 5"
  },
  {
    "function": "log(x + 1)",
    "true_expansion": "-x**4/4 + x**3/3 - x**2/2 + x",
    "lstm_prediction": "- x * * 4 / 4 + x * * 3 / 3 - x * * 2 / 2 + x",
    "improved_lstm_prediction": "- x * * 4 / 4 + x * * 3 / 3 - x * * 2 / 2 + x",
    "transformer_prediction": "- x * * 4 / 4 + x * * 3 / 3 - x * * 2 / 2 + x"
  },
  {
    "function": "cos(x)",
    "true_expansion": "x**4/24 - x**2/2 + 1",
    "lstm_prediction": "x * * 2 / 2 + 1",
    "improved_lstm_prediction": "x * * 4 / 24 - x * * 2 / 2 + 1",
    "transformer_prediction": "x * * 4 / 24 - x * * 2 / 2 + 1"
  },
  {
    "function": "x**2 - x - 1",
    "true_expansion": "x**2 - x - 1",
    "lstm_prediction": "x * * 2 + 2 * x - 1",
    "improved_lstm_prediction": "x * * 3 - x * * 2 - x - 1",
    "transformer_prediction": "- 2 * x * * 2 - 2 * x - 1"
  },
  {
    "function": "2*x**2 + x + cosh(x) - 3",
    "true_expansion": "x**4/24 + 5*x**2/2 + x - 2",
    "lstm_prediction": "x * * 4 / 24 + x * * 2 / 2 - 2 * x + 2",
    "improved_lstm_prediction": "x * * 4 / 24 + 5 * x * * 2 / 2 + x - 2",
    "transformer_prediction": "x * * 4 / 24 + 3 * x * * 3 + 5 * x * * 2 / 2 + 3 * x + 3"
  },
  {
    "function": "4*atan(x)",
    "true_expansion": "-4*x**3/3 + 4*x",
    "lstm_prediction": "- 4 * x * * 3 / 3 + 4 * x",
    "improved_lstm_prediction": "- 4 * x * * 3 / 3 + 4 * x",
    "transformer_prediction": "- 4 * x * * 3 / 3 + 4 * x"
  },
  {
    "function": "-x + tan(x) + 1",
    "true_expansion": "x**3/3 + 1",
    "lstm_prediction": "x * * 3 / 3 + x - 1",
    "improved_lstm_prediction": "1 * * 3 / 3 + 1",
    "transformer_prediction": "x * * 3 / 3 + 2 * x - 1"
  },
  {
    "function": "sin(3*x)",
    "true_expansion": "-9*x**3/2 + 3*x",
    "lstm_prediction": "* x * * 3 / 2 + 3 * x",
    "improved_lstm_prediction": "9 * x * * 3 + 3 * x",
    "transformer_prediction": "- 9 * x * * 3 / 2 + 3 * x"
  },
  {
    "function": "tan(3*x)",
    "true_expansion": "9*x**3 + 3*x",
    "lstm_prediction": "9 * x * * 3 + 3 * x",
    "improved_lstm_prediction": "9 * x * * 3 + 3 * x",
    "transformer_prediction": "9 * x * * 3 + 3 * x"
  },
  {
    "function": "5*cos(x)",
    "true_expansion": "5*x**4/24 - 5*x**2/2 + 5",
    "lstm_prediction": "5 * x * * 3 / 8 + 5 * x / 2 + 5",
    "improved_lstm_prediction": "5 * x * * 4 / 24 + 5 * x * * 2 / 2 + 5",
    "transformer_prediction": "5 * x * * 4 / 24 - 5 * x * * 2 / 2 + 5"
  },
  {
    "function": "2*x + cosh(x) - 1",
    "true_expansion": "x**4/24 + x**2/2 + 2*x",
    "lstm_prediction": "x * * 4 / 24 + x * * 2 / 2 + 2 * x",
    "improved_lstm_prediction": "x * * 4 / 24 + x * * 2 / 2 + 2 * x",
    "transformer_prediction": "x * * 4 / 24 + x * * 2 / 2 - 2 * x + 2"
  },
  {
    "function": "-3*x**2 + 2*x + cosh(x) - 2",
    "true_expansion": "x**4/24 - 5*x**2/2 + 2*x - 1",
    "lstm_prediction": "x * * 4 / 24 - 5 * x * * 2 / 2 + 3 * x - 1",
    "improved_lstm_prediction": "x * * 4 / 24 - 7 * x * * 2 / 2 + 2 * x - 1",
    "transformer_prediction": "x * * 4 / 24 + 3 * x * * 3 + 5 * x * * 2 / 2 - 2 * x + 3"
  },
  {
    "function": "sqrt(x + 1)",
    "true_expansion": "-5*x**4/128 + x**3/16 - x**2/8 + x/2 + 1",
    "lstm_prediction": "- 5 * x * * 4 / 128 + x * * 3 / 16 - x * * 2 / 8 + x / 2 + 1",
    "improved_lstm_prediction": "- 5 * x * * 4 / 128 + x * * 3 / 16 - x * * 2 / 8 + x / 2 + 1",
    "transformer_prediction": "- 5 * x * * 4 / 128 + x * * 3 / 16 - x * * 2 / 8 + x / 2 + 1"
  },
  {
    "function": "tan(x)",
    "true_expansion": "x**3/3 + x",
    "lstm_prediction": "x * * 3 / 3 + x",
    "improved_lstm_prediction": "x * * 3 / 3 + x",
    "transformer_prediction": "x * * 3 / 3 + x"
  },
  {
    "function": "sqrt(4*x + 1)*(3*x**3 + x**2 - x + 1)",
    "true_expansion": "-10*x**4 + 11*x**3 - 3*x**2 + x + 1",
    "lstm_prediction": "- 10 * x * * 4 + 4 * x * * 3 + 4 * x * * 2 - 4 * x",
    "improved_lstm_prediction": "- 52 * x * * 4 + 24 * x * * 3 + 10 * x * * 2 + 2 * x + 4",
    "transformer_prediction": "- 5 * x * * 4 / 32 + 5 * x * * 3 / 8 - 3 * x * * 2 / 2 + 9 * x + 4"
  },
  {
    "function": "exp(x)",
    "true_expansion": "x**4/24 + x**3/6 + x**2/2 + x + 1",
    "lstm_prediction": "x * * 4 / 24 + x * * 2 / 2 + x + 1",
    "improved_lstm_prediction": "x * * 4 / 24 + x * * 3 / 6 + x * * 2 + x + 1",
    "transformer_prediction": "x * * 4 / 24 + x * * 3 / 6 + x * * 2 / 2 + x + 1"
  },
  {
    "function": "atan(x)",
    "true_expansion": "-x**3/3 + x",
    "lstm_prediction": "* x * * 3 / 3 + x",
    "improved_lstm_prediction": "- x * * 3 / 3 + x",
    "transformer_prediction": "- x * * 3 / 3 + x"
  },
  {
    "function": "exp(x)",
    "true_expansion": "x**4/24 + x**3/6 + x**2/2 + x + 1",
    "lstm_prediction": "x * * 4 / 24 + x * * 2 / 2 + x + 1",
    "improved_lstm_prediction": "x * * 4 / 24 + x * * 3 / 6 + x * * 2 + x + 1",
    "transformer_prediction": "x * * 4 / 24 + x * * 3 / 6 + x * * 2 / 2 + x + 1"
  },
  {
    "function": "4*sqrt(x + 1)",
    "true_expansion": "-5*x**4/32 + x**3/4 - x**2/2 + 2*x + 4",
    "lstm_prediction": "- 5 * x * * 4 / 8 + x * * 3 / 2 - x * * 2 / 2 + 3 * x + 1",
    "improved_lstm_prediction": "- 5 * x * * 4 / 32 + x * * 3 / 4 - x * * 2 / 2 + 2 * x + 6",
    "transformer_prediction": "- 5 * x * * 4 / 32 + x * * 3 / 4 - x * * 2 / 2 + 2 * x + 4"
  },
  {
    "function": "x",
    "true_expansion": "x",
    "lstm_prediction": "x * * 2 / 2 + 1",
    "improved_lstm_prediction": "x * * 3 + x",
    "transformer_prediction": "x"
  },
  {
    "function": "3*exp(x)",
    "true_expansion": "x**4/8 + x**3/2 + 3*x**2/2 + 3*x + 3",
    "lstm_prediction": "x * * 3 / 8 + x * * 2 / 2 + 3 * x + 3",
    "improved_lstm_prediction": "x * * 4 / 8 + x * * 3 / 2 + 3 * x * * 2 / 2 + 3 * x + 3",
    "transformer_prediction": "27 * x * * 4 / 8 + 9 * x * * 3 / 2 + 9 * x * * 2 / 2 + 3 * x + 1"
  },
  {
    "function": "atan(2*x)",
    "true_expansion": "-8*x**3/3 + 2*x",
    "lstm_prediction": "- 8 * x * * 3 / 3 + 2 * x",
    "improved_lstm_prediction": "- 8 * x * * 3 / 3 + 2 * x",
    "transformer_prediction": "- 2 * x * * 3 / 3 + 2 * x"
  },
  {
    "function": "2*x**3 - 2*x + exp(x)",
    "true_expansion": "x**4/24 + 13*x**3/6 + x**2/2 - x + 1",
    "lstm_prediction": "x * * 4 / 24 + 2 * x * * 3 / 3 + 5 * x * * 2 / 2 - x + 1",
    "improved_lstm_prediction": "x * * 4 / 24 + 7 * x * * 3 / 6 - x * * 2 / 2 - x + 1",
    "transformer_prediction": "x * * 4 / 12 + x * * 3 / 3 + x * * 2 + 2 * x + 2"
  },
  {
    "function": "exp(x)",
    "true_expansion": "x**4/24 + x**3/6 + x**2/2 + x + 1",
    "lstm_prediction": "x * * 4 / 24 + x * * 2 / 2 + x + 1",
    "improved_lstm_prediction": "x * * 4 / 24 + x * * 3 / 6 + x * * 2 + x + 1",
    "transformer_prediction": "x * * 4 / 24 + x * * 3 / 6 + x * * 2 / 2 + x + 1"
  },
  {
    "function": "-x**2 + sqrt(x + 1) + 2",
    "true_expansion": "-5*x**4/128 + x**3/16 - 9*x**2/8 + x/2 + 3",
    "lstm_prediction": "- 5 * x * * 4 / 128 + x * * 3 / 16 - 17 * x * * 2 / 8 + 5 * x / 2 + 3",
    "improved_lstm_prediction": "- 5 * x * * 4 / 128 + x * * 3 / 16 - 7 * x * * 2 / 8 + 3 * x / 2 + 3",
    "transformer_prediction": "- 5 * x * * 4 / 128 + x * * 3 / 16 - x * * 2 / 8 + 3 * x / 2 + 1"
  },
  {
    "function": "atan(x)",
    "true_expansion": "-x**3/3 + x",
    "lstm_prediction": "* x * * 3 / 3 + x",
    "improved_lstm_prediction": "- x * * 3 / 3 + x",
    "transformer_prediction": "- x * * 3 / 3 + x"
  },
  {
    "function": "4*cos(x)",
    "true_expansion": "x**4/6 - 2*x**2 + 4",
    "lstm_prediction": "x * * 2 / 2 + 4",
    "improved_lstm_prediction": "x * * 4 / 6 - 2 * x * * 2 + 4",
    "transformer_prediction": "x * * 4 / 6 - 2 * x * * 2 + 4"
  },
  {
    "function": "1/(1 - x)",
    "true_expansion": "x**4 + x**3 + x**2 + x + 1",
    "lstm_prediction": "x * * 4 + x * * 3 + x * * 2 + x + 1",
    "improved_lstm_prediction": "x * * 4 + x * * 3 + x * * 2 + x + 1",
    "transformer_prediction": "x * * 4 + x * * 3 + x * * 2 + x + 1"
  },
  {
    "function": "sinh(x)",
    "true_expansion": "x**3/6 + x",
    "lstm_prediction": "x * * 3 / 2 + x",
    "improved_lstm_prediction": "x * * 3 / 6 + x",
    "transformer_prediction": "x * * 3 / 6 + x"
  },
  {
    "function": "-3*x**2 - 3*x + log(x + 1) - 2",
    "true_expansion": "-x**4/4 + x**3/3 - 7*x**2/2 - 2*x - 2",
    "lstm_prediction": "- x * * 4 / 4 + x * * 3 / 3 - 5 * x * * 2 / 2 - x + 2",
    "improved_lstm_prediction": "- x * * 4 / 4 + x * * 3 / 3 - 7 * x * * 2 / 2 - 2 * x - 2",
    "transformer_prediction": "- 3 * x * * 4 / 4 + x * * 3 - 5 * x * * 2 / 2 + 2 * x - 3"
  },
  {
    "function": "x**2 + 3*x + 3",
    "true_expansion": "x**2 + 3*x + 3",
    "lstm_prediction": "3 * x * * 2 + x + 3",
    "improved_lstm_prediction": "x * * 2 + 3 * x + 3",
    "transformer_prediction": "3 * x * * 3 + 3 * x * * 2 + 3 * x + 3"
  },
  {
    "function": "3*x**2 + x + sin(x) - 1",
    "true_expansion": "-x**3/6 + 3*x**2 + 2*x - 1",
    "lstm_prediction": "- x * * 3 / 6 + 3 * x * * 2 + 2 * x - 1",
    "improved_lstm_prediction": "- x * * 3 / 6 + 3 * x * * 2 + 2 * x - 1",
    "transformer_prediction": "- x * * 3 / 6 + 2 * x * * 2 + 4 * x + 1"
  },
  {
    "function": "cosh(x) - 3",
    "true_expansion": "x**4/24 + x**2/2 - 2",
    "lstm_prediction": "x * * 3 / 8 + 3",
    "improved_lstm_prediction": "x * * 4 / 24 + x * * 2 / 2 - 2",
    "transformer_prediction": "x * * 4 / 24 + x * * 2 / 2 - 2"
  },
  {
    "function": "sqrt(x + 1) + 2",
    "true_expansion": "-5*x**4/128 + x**3/16 - x**2/8 + x/2 + 3",
    "lstm_prediction": "- 5 * x * * 4 / 128 + x * * 3 / 16 - x * * 2 / 8 + x / 2 + 4",
    "improved_lstm_prediction": "- 5 * x * * 4 / 128 + x * * 3 / 16 - x * * 2 / 8 + 3 * x / 2 + 3",
    "transformer_prediction": "- 5 * x * * 4 / 128 + x * * 3 / 16 - x * * 2 / 8 + x / 2 + 3"
  },
  {
    "function": "atan(x)",
    "true_expansion": "-x**3/3 + x",
    "lstm_prediction": "* x * * 3 / 3 + x",
    "improved_lstm_prediction": "- x * * 3 / 3 + x",
    "transformer_prediction": "- x * * 3 / 3 + x"
  },
  {
    "function": "log(3*x + 1) - 1",
    "true_expansion": "-81*x**4/4 + 9*x**3 - 9*x**2/2 + 3*x - 1",
    "lstm_prediction": "- 81 * x * * 4 / 4 + 9 * x * * 3 - 9 * x * * 2 / 2 + 3 * x - 1",
    "improved_lstm_prediction": "- 81 * x * * 4 / 4 + 9 * x * * 3 - 9 * x * * 2 / 2 + 3 * x - 1",
    "transformer_prediction": "- 3 * x * * 4 / 4 + x * * 3 - 3 * x * * 2 / 2 + 3 * x - 1"
  },
  {
    "function": "2*cosh(x)",
    "true_expansion": "x**4/12 + x**2 + 2",
    "lstm_prediction": "x * * 4 / 8 + 3 * x * * 2 / 2 + 3",
    "improved_lstm_prediction": "x * * 4 / 12 + x * * 2 + 2",
    "transformer_prediction": "2 * x * * 4 / 3 + 2 * x * * 2 + 1"
  },
  {
    "function": "(2*x**2 + 3)*cos(3*x)",
    "true_expansion": "9*x**4/8 - 23*x**2/2 + 3",
    "lstm_prediction": "99 * x * * 4 / 8 + 27 * x * * 3 + 19 * x * * 2 / 2 + 3",
    "improved_lstm_prediction": "9 * x * * 4 / 8 + 3 * x * * 3 + 13 * x * * 2 / 2 + 3",
    "transformer_prediction": "9 * x * * 4 / 4 - 9 * x * * 3 / 2 + 9 * x * * 2 + 9 * x + 3"
  },
  {
    "function": "cos(x) - 3",
    "true_expansion": "x**4/24 - x**2/2 - 2",
    "lstm_prediction": "x * * 3 / 8 - x / 2 - 2",
    "improved_lstm_prediction": "x * * 4 / 24 - x * * 2 / 2 - 2",
    "transformer_prediction": "x * * 4 / 24 - x * * 2 / 2 - 2"
  },
  {
    "function": "-2*x**3 - 3*x**2 + 2*x + exp(x)",
    "true_expansion": "x**4/24 - 11*x**3/6 - 5*x**2/2 + 3*x + 1",
    "lstm_prediction": "x * * 4 / 24 - 2 * x * * 3 / 3 - 5 * x * * 2 / 2 + 4 * x + 1",
    "improved_lstm_prediction": "x * * 4 / 24 - 11 * x * * 3 / 6 - 7 * x * * 2 / 2 + 3 * x + 1",
    "transformer_prediction": "x * * 4 / 24 + x * * 3 / 6 + 5 * x * * 2 / 2 + 3 * x + 1"
  },
  {
    "function": "sqrt(x + 1)",
    "true_expansion": "-5*x**4/128 + x**3/16 - x**2/8 + x/2 + 1",
    "lstm_prediction": "- 5 * x * * 4 / 128 + x * * 3 / 16 - x * * 2 / 8 + x / 2 + 1",
    "improved_lstm_prediction": "- 5 * x * * 4 / 128 + x * * 3 / 16 - x * * 2 / 8 + x / 2 + 1",
    "transformer_prediction": "- 5 * x * * 4 / 128 + x * * 3 / 16 - x * * 2 / 8 + x / 2 + 1"
  },
  {
    "function": "5*x",
    "true_expansion": "5*x",
    "lstm_prediction": "5 * x",
    "improved_lstm_prediction": "5 * x * * 3 / 2 + 5 * x",
    "transformer_prediction": "5 * x"
  },
  {
    "function": "sqrt(2*x + 1)",
    "true_expansion": "-5*x**4/8 + x**3/2 - x**2/2 + x + 1",
    "lstm_prediction": "- 5 * x * * 4 / 8 + x * * 2 / 2 + x + 1",
    "improved_lstm_prediction": "- 5 * x * * 4 / 8 + x * * 3 / 2 - x * * 2 / 2 + x + 1",
    "transformer_prediction": "- 5 * x * * 4 / 64 + x * * 3 / 8 - x * * 2 / 4 + x + 2"
  },
  {
    "function": "5*(1 - 3*x**2)*cosh(x)",
    "true_expansion": "-175*x**4/24 - 25*x**2/2 + 5",
    "lstm_prediction": "- 35 * x * * 4 / 8 - 25 * x * * 3 / 2 + 15 * x * * 2 / 2 + 15 * x",
    "improved_lstm_prediction": "- 5 * x * * 4 / 24 - 15 * x * * 3 / 2 + 5 * x * * 2 / 2 + 5 * x + 5",
    "transformer_prediction": "- 25 * x * * 4 / 24 + 15 * x * * 3 / 2 + 15 * x * * 2 / 2 - 15 * x - 5"
  },
  {
    "function": "x**2",
    "true_expansion": "x**2",
    "lstm_prediction": "x * * 2 + 6",
    "improved_lstm_prediction": "x * * 3 + x * * 2",
    "transformer_prediction": "2 * x * * 2"
  },
  {
    "function": "sqrt(x + 1) + 3",
    "true_expansion": "-5*x**4/128 + x**3/16 - x**2/8 + x/2 + 4",
    "lstm_prediction": "- 5 * x * * 4 / 128 + x * * 3 / 16 - x * * 2 / 8 + x / 2 + 4",
    "improved_lstm_prediction": "- 5 * x * * 4 / 128 + x * * 3 / 16 - x * * 2 / 8 + 5 * x / 2 + 4",
    "transformer_prediction": "- 5 * x * * 4 / 128 + x * * 3 / 16 - x * * 2 / 8 + x / 2 + 4"
  },
  {
    "function": "atan(4*x)",
    "true_expansion": "-64*x**3/3 + 4*x",
    "lstm_prediction": "- 64 * x * * 3 / 3 + 4 * x",
    "improved_lstm_prediction": "- 64 * x * * 3 / 3 + 4 * x",
    "transformer_prediction": "- 4 * x * * 3 / 3 + 4 * x"
  },
  {
    "function": "-3*x**2 + x + cos(4*x) + 3",
    "true_expansion": "32*x**4/3 - 11*x**2 + x + 4",
    "lstm_prediction": "32 * x * * 4 / 3 - 11 * x * * 2 + x + 4",
    "improved_lstm_prediction": "32 * x * * 4 / 3 - 11 * x * * 2 + x + 4",
    "transformer_prediction": "x * * 4 / 6 + x * * 3 - 2 * x * * 2 + x + 7"
  },
  {
    "function": "atan(x)",
    "true_expansion": "-x**3/3 + x",
    "lstm_prediction": "* x * * 3 / 3 + x",
    "improved_lstm_prediction": "- x * * 3 / 3 + x",
    "transformer_prediction": "- x * * 3 / 3 + x"
  },
  {
    "function": "(4 - 2*x)*sin(4*x)",
    "true_expansion": "64*x**4/3 - 128*x**3/3 - 8*x**2 + 16*x",
    "lstm_prediction": "- 64 * x * * 4 / 3 + 32 * x * * 3 / 3 - 8 * x * * 2 + 4 * x",
    "improved_lstm_prediction": "- 32 * x * * 4 / 3 + 32 * x * * 3 / 3 - 8 * x * * 2 + 8 * x",
    "transformer_prediction": "64 * x * * 4 / 3 + 32 * x * * 3 / 3 + 8 * x * * 2 - 8 * x"
  },
  {
    "function": "exp(x)",
    "true_expansion": "x**4/24 + x**3/6 + x**2/2 + x + 1",
    "lstm_prediction": "x * * 4 / 24 + x * * 2 / 2 + x + 1",
    "improved_lstm_prediction": "x * * 4 / 24 + x * * 3 / 6 + x * * 2 + x + 1",
    "transformer_prediction": "x * * 4 / 24 + x * * 3 / 6 + x * * 2 / 2 + x + 1"
  },
  {
    "function": "atan(4*x)",
    "true_expansion": "-64*x**3/3 + 4*x",
    "lstm_prediction": "- 64 * x * * 3 / 3 + 4 * x",
    "improved_lstm_prediction": "- 64 * x * * 3 / 3 + 4 * x",
    "transformer_prediction": "- 4 * x * * 3 / 3 + 4 * x"
  },
  {
    "function": "(x**2 + 3*x + 2)*sinh(x)",
    "true_expansion": "x**4/2 + 4*x**3/3 + 3*x**2 + 2*x",
    "lstm_prediction": "x * * 4 / 2 + 2 * x * * 3 / 3 + 3 * x * * 2 + 2 * x",
    "improved_lstm_prediction": "x * * 4 / 2 + 5 * x * * 3 / 3 + 3 * x * * 2 + 2 * x",
    "transformer_prediction": "x * * 4 / 3 + x * * 3 + x * * 2"
  },
  {
    "function": "2*sqrt(x + 1)*(-2*x**2 - x - 2)",
    "true_expansion": "17*x**4/32 - 2*x**3 - 9*x**2/2 - 4*x - 4",
    "lstm_prediction": "- 3 * x * * 4 / 64 - 5 * x * * 3 / 8 - 9 * x * * 2 / 4 - 2 * x + 2",
    "improved_lstm_prediction": "- 23 * x * * 4 / 16 - 13 * x * * 3 / 8 - 3 * x * * 2 - 6 * x - 6",
    "transformer_prediction": "- 5 * x * * 4 / 64 + x * * 3 / 8 - x * * 2 / 4 - x - 2"
  },
  {
    "function": "log(x + 1)",
    "true_expansion": "-x**4/4 + x**3/3 - x**2/2 + x",
    "lstm_prediction": "- x * * 4 / 4 + x * * 3 / 3 - x * * 2 / 2 + x",
    "improved_lstm_prediction": "- x * * 4 / 4 + x * * 3 / 3 - x * * 2 / 2 + x",
    "transformer_prediction": "- x * * 4 / 4 + x * * 3 / 3 - x * * 2 / 2 + x"
  },
  {
    "function": "(4 - x)*exp(4*x)",
    "true_expansion": "32*x**4 + 104*x**3/3 + 28*x**2 + 15*x + 4",
    "lstm_prediction": "- 256 * x * * 4 / 3 + 32 * x * * 3 / 3 - 8 * x * * 2 + 4 * x + 4",
    "improved_lstm_prediction": "- 40 * x * * 4 / 3 + 40 * x * * 3 / 3 + 12 * x * * 2 + 12 * x + 4",
    "transformer_prediction": "- 11 * x * * 4 / 6 - 11 * x * * 3 / 3 + 2 * x * * 2 + 4 * x + 4"
  },
  {
    "function": "sin(x)",
    "true_expansion": "-x**3/6 + x",
    "lstm_prediction": "* x * * 3 / 2 + 5 * x",
    "improved_lstm_prediction": "- x * * 3 / 6 + x",
    "transformer_prediction": "- x * * 3 / 6 + x"
  },
  {
    "function": "sin(2*x)",
    "true_expansion": "-4*x**3/3 + 2*x",
    "lstm_prediction": "* x * * 3 / 2 + 3 * x",
    "improved_lstm_prediction": "- 4 * x * * 3 / 3 + 2 * x",
    "transformer_prediction": "- 4 * x * * 3 / 3 + 2 * x"
  },
  {
    "function": "-3*x + 2*cosh(x) - 1",
    "true_expansion": "x**4/12 + x**2 - 3*x + 1",
    "lstm_prediction": "x * * 4 / 12 + x * * 2 - 3 * x + 2",
    "improved_lstm_prediction": "x * * 4 / 12 + x * * 2 - 3 * x",
    "transformer_prediction": "x * * 4 / 12 + x * * 2 - 2 * x + 2"
  },
  {
    "function": "cos(3*x)",
    "true_expansion": "27*x**4/8 - 9*x**2/2 + 1",
    "lstm_prediction": "* x * * 2 / 2 + 1",
    "improved_lstm_prediction": "27 * x * * 4 / 8 + 9 * x * * 2 / 2 + 1",
    "transformer_prediction": "x * * 4 / 8 - 3 * x * * 2 / 2 + 3"
  },
  {
    "function": "4*tan(x)",
    "true_expansion": "4*x**3/3 + 4*x",
    "lstm_prediction": "4 * x * * 3 / 3 + 4 * x",
    "improved_lstm_prediction": "4 * x * * 3 / 3 + 4 * x",
    "transformer_prediction": "4 * x * * 3 / 3 + 4 * x"
  },
  {
    "function": "3/(1 - x)",
    "true_expansion": "3*x**4 + 3*x**3 + 3*x**2 + 3*x + 3",
    "lstm_prediction": "81 * x * * 4 + 27 * x * * 3 + 9 * x * * 2 + 6 * x + 3",
    "improved_lstm_prediction": "3 * x * * 4 + 3 * x * * 3 + 3 * x * * 2 + 3 * x + 3",
    "transformer_prediction": "3 * x * * 4 + 3 * x * * 3 + 3 * x * * 2 + 3 * x + 3"
  },
  {
    "function": "-x + 2*tan(x) - 3",
    "true_expansion": "2*x**3/3 + x - 3",
    "lstm_prediction": "2 * x * * 3 / 3 + x - 3",
    "improved_lstm_prediction": "2 * x * * 3 / 3 + x - 3",
    "transformer_prediction": "x * * 3 / 3 - 2 * x - 3"
  },
  {
    "function": "atan(x)",
    "true_expansion": "-x**3/3 + x",
    "lstm_prediction": "* x * * 3 / 3 + x",
    "improved_lstm_prediction": "- x * * 3 / 3 + x",
    "transformer_prediction": "- x * * 3 / 3 + x"
  },
  {
    "function": "log(4*x + 1)",
    "true_expansion": "-64*x**4 + 64*x**3/3 - 8*x**2 + 4*x",
    "lstm_prediction": "- 64 * x * * 4 + 64 * x * * 3 / 3 - 8 * x * * 2 + 4 * x",
    "improved_lstm_prediction": "- 64 * x * * 4 + 64 * x * * 3 / 3 + 8 * x * * 2 + 4 * x",
    "transformer_prediction": "- 64 * x * * 4 + 64 * x * * 3 / 3 - 8 * x * * 2 + 4 * x"
  },
  {
    "function": "sinh(2*x)",
    "true_expansion": "4*x**3/3 + 2*x",
    "lstm_prediction": "4 * x * * 3 / 2 + 2 * x",
    "improved_lstm_prediction": "4 * x * * 3 / 3 + 2 * x",
    "transformer_prediction": "4 * x * * 3 / 3 + 2 * x"
  },
  {
    "function": "3*tan(3*x)",
    "true_expansion": "27*x**3 + 9*x",
    "lstm_prediction": "9 * x * * 3 + 3 * x",
    "improved_lstm_prediction": "9 * x * * 3 + 9 * x",
    "transformer_prediction": "9 * x * * 3 + 3 * x"
  },
  {
    "function": "(3*x**2 + x + 2)*cosh(x)",
    "true_expansion": "19*x**4/12 + x**3/2 + 4*x**2 + x + 2",
    "lstm_prediction": "17 * x * * 4 / 12 + x * * 2 + 2",
    "improved_lstm_prediction": "7 * x * * 4 / 12 + 5 * x * * 3 / 2 + 4 * x * * 2 + x + 2",
    "transformer_prediction": "x * * 4 / 12 + x * * 3 + 3 * x * * 2 + 3 * x + 2"
  },
  {
    "function": "4*atan(x)",
    "true_expansion": "-4*x**3/3 + 4*x",
    "lstm_prediction": "- 4 * x * * 3 / 3 + 4 * x",
    "improved_lstm_prediction": "- 4 * x * * 3 / 3 + 4 * x",
    "transformer_prediction": "- 4 * x * * 3 / 3 + 4 * x"
  },
  {
    "function": "5*log(x + 1)",
    "true_expansion": "-5*x**4/4 + 5*x**3/3 - 5*x**2/2 + 5*x",
    "lstm_prediction": "- 5 * x * * 4 / 4 + 5 * x * * 3 / 3 - 5 * x * * 2 / 2 + 5 * x",
    "improved_lstm_prediction": "- 5 * x * * 4 / 4 + 5 * x * * 3 / 3 - 5 * x * * 2 / 2 + 5 * x",
    "transformer_prediction": "- 625 * x * * 4 / 4 + 125 * x * * 3 / 3 - 25 * x * * 2 / 2 + 5 * x"
  },
  {
    "function": "(x**3 + 2*x**2 - x - 2)*log(x + 1)",
    "true_expansion": "x**4/6 + 11*x**3/6 - 2*x",
    "lstm_prediction": "x * * 4 / 3 + x * * 3 / 3 + 2 * x * * 2 - 2 * x",
    "improved_lstm_prediction": "5 * x * * 4 / 3 + 13 * x * * 3 / 3 - x * * 2 - 2 * x",
    "transformer_prediction": "- 5 * x * * 4 / 12 + 5 * x * * 3 / 3 - 3 * x * * 2 / 2 + 3 * x"
  },
  {
    "function": "-4*exp(x)",
    "true_expansion": "-x**4/6 - 2*x**3/3 - 2*x**2 - 4*x - 4",
    "lstm_prediction": "x * * 4 / 3 - 2 * x * * 3 / 3 - 4 * x * * 2 - 4 * x - 4",
    "improved_lstm_prediction": "- x * * 4 / 6 - 2 * x * * 3 / 3 - 2 * x * * 2 - 4 * x - 4",
    "transformer_prediction": "- 32 * x * * 4 / 3 - 32 * x * * 3 / 3 - 8 * x * * 2 - 4 * x - 1"
  },
  {
    "function": "tan(5*x)",
    "true_expansion": "125*x**3/3 + 5*x",
    "lstm_prediction": "125 * x * * 3 / 3 + 5 * x",
    "improved_lstm_prediction": "125 * x * * 3 / 3 + 5 * x",
    "transformer_prediction": "5 * x * * 3 / 3 + 5 * x"
  },
  {
    "function": "tan(5*x)",
    "true_expansion": "125*x**3/3 + 5*x",
    "lstm_prediction": "125 * x * * 3 / 3 + 5 * x",
    "improved_lstm_prediction": "125 * x * * 3 / 3 + 5 * x",
    "transformer_prediction": "5 * x * * 3 / 3 + 5 * x"
  },
  {
    "function": "3*sqrt(x + 1)",
    "true_expansion": "-15*x**4/128 + 3*x**3/16 - 3*x**2/8 + 3*x/2 + 3",
    "lstm_prediction": "- 15 * x * * 4 / 128 + 3 * x * * 3 / 16 - 3 * x * * 2 / 8 + 3 * x / 2 + 1",
    "improved_lstm_prediction": "- 15 * x * * 4 / 128 + 3 * x * * 3 / 16 + 3 * x * * 2 / 8 + 3 * x / 2 + 3",
    "transformer_prediction": "- 15 * x * * 4 / 128 + 3 * x * * 3 / 16 - 3 * x * * 2 / 8 + 3 * x / 2 + 3"
  },
  {
    "function": "tan(x)",
    "true_expansion": "x**3/3 + x",
    "lstm_prediction": "x * * 3 / 3 + x",
    "improved_lstm_prediction": "x * * 3 / 3 + x",
    "transformer_prediction": "x * * 3 / 3 + x"
  },
  {
    "function": "atan(x)",
    "true_expansion": "-x**3/3 + x",
    "lstm_prediction": "* x * * 3 / 3 + x",
    "improved_lstm_prediction": "- x * * 3 / 3 + x",
    "transformer_prediction": "- x * * 3 / 3 + x"
  },
  {
    "function": "(2*x + 4)*tan(x)",
    "true_expansion": "2*x**4/3 + 4*x**3/3 + 2*x**2 + 4*x",
    "lstm_prediction": "4 * x * * 4 / 3 + 4 * x * * 3 / 3 + 4 * x * * 2 + 4 * x",
    "improved_lstm_prediction": "2 * x * * 4 / 3 + 2 * x * * 3 / 3 + 2 * x * * 2 + 4 * x",
    "transformer_prediction": "64 * x * * 4 / 3 + 64 * x * * 3 / 3 + 8 * x * * 2 + 4 * x"
  },
  {
    "function": "-x**3 + x**2 + 3*x + 2 + 1/(1 - x)",
    "true_expansion": "x**4 + 2*x**2 + 4*x + 3",
    "lstm_prediction": "x * * 4 + x * * 3 + 3 * x * * 2 + 3 * x + 2",
    "improved_lstm_prediction": "x * * 4 - 2 * x * * 3 + 4 * x + 3",
    "transformer_prediction": "x * * 4 + x * * 3 + 3 * x * * 2 + 4 * x + 4"
  },
  {
    "function": "4/(1 - x)",
    "true_expansion": "4*x**4 + 4*x**3 + 4*x**2 + 4*x + 4",
    "lstm_prediction": "4 * x * * 4 + 4 * x * * 3 + 4 * x * * 2 + 4 * x + 4",
    "improved_lstm_prediction": "4 * x * * 4 + 4 * x * * 3 + 4 * x * * 2 + 4 * x + 4",
    "transformer_prediction": "4 * x * * 4 + 4 * x * * 3 + 4 * x * * 2 + 4 * x + 4"
  },
  {
    "function": "x",
    "true_expansion": "x",
    "lstm_prediction": "x * * 2 / 2 + 1",
    "improved_lstm_prediction": "x * * 3 + x",
    "transformer_prediction": "x"
  },
  {
    "function": "2*sqrt(x + 1)",
    "true_expansion": "-5*x**4/64 + x**3/8 - x**2/4 + x + 2",
    "lstm_prediction": "- 5 * x * * 4 / 64 + x * * 3 / 8 - x * * 2 / 4 + x + 2",
    "improved_lstm_prediction": "- 5 * x * * 4 / 64 + x * * 3 / 8 - x * * 2 / 4 + x + 2",
    "transformer_prediction": "- 5 * x * * 4 / 64 + x * * 3 / 8 - x * * 2 / 4 + x + 2"
  },
  {
    "function": "2*(4 - 3*x)*sin(x)",
    "true_expansion": "x**4 - 4*x**3/3 - 6*x**2 + 8*x",
    "lstm_prediction": "- 2 * x * * 4 / 3 - 8 * x * * 3 + 8 * x * * 2 + 12 * x",
    "improved_lstm_prediction": "- x * * 4 - 8 * x * * 3 / 3 - 8 * x * * 2 + 8 * x",
    "transformer_prediction": "- 8 * x * * 4 / 3 + 8 * x * * 3 - 8 * x * * 2 + 12 * x"
  },
  {
    "function": "2*x + cos(5*x) - 2",
    "true_expansion": "625*x**4/24 - 25*x**2/2 + 2*x - 1",
    "lstm_prediction": "625 * x * * 4 / 24 - 9 * x * * 2 / 2 + 3 * x - 1",
    "improved_lstm_prediction": "625 * x * * 4 / 24 - 25 * x * * 2 / 2 + 2 * x - 1",
    "transformer_prediction": "625 * x * * 4 / 24 - 25 * x * * 2 / 2 - 2 * x + 3"
  },
  {
    "function": "2*x + 2",
    "true_expansion": "2*x + 2",
    "lstm_prediction": "2 * x + 2",
    "improved_lstm_prediction": "2 * x + 2",
    "transformer_prediction": "2 * x + 2"
  },
  {
    "function": "2*log(x + 1)",
    "true_expansion": "-x**4/2 + 2*x**3/3 - x**2 + 2*x",
    "lstm_prediction": "- x * * 4 / 2 + 2 * x * * 3 / 3 - x * * 2 / 2 + x",
    "improved_lstm_prediction": "- x * * 4 / 2 + 2 * x * * 3 / 3 - x * * 2 + 2 * x",
    "transformer_prediction": "- 4 * x * * 4 + 8 * x * * 3 / 3 - 2 * x * * 2 + 2 * x"
  },
  {
    "function": "5*sqrt(x + 1)*(-3*x**3 + 3*x**2 - x - 2)",
    "true_expansion": "-595*x**4/64 - 15*x**3/2 + 55*x**2/4 - 10*x - 10",
    "lstm_prediction": "- 145 * x * * 4 / 128 - 95 * x * * 3 / 16 + 175 * x * * 2 / 8 - 15 * x / 2",
    "improved_lstm_prediction": "1505 * x * * 4 / 16 - 15 * x * * 3 / 8 - 25 * x * * 2 / 4 - 15 * x - 10",
    "transformer_prediction": "- 25 * x * * 4 / 128 + 25 * x * * 3 / 16 - 15 * x * * 2 / 8 - 15 * x / 2 - 15"
  },
  {
    "function": "sinh(5*x)",
    "true_expansion": "125*x**3/6 + 5*x",
    "lstm_prediction": "125 * x * * 3 / 6 + 5 * x",
    "improved_lstm_prediction": "125 * x * * 3 / 6 + 5 * x",
    "transformer_prediction": "125 * x * * 3 / 6 + 5 * x"
  },
  {
    "function": "atan(3*x)",
    "true_expansion": "-9*x**3 + 3*x",
    "lstm_prediction": "- x * * 3 + 3 * x",
    "improved_lstm_prediction": "- 9 * x * * 3 + 3 * x",
    "transformer_prediction": "- 9 * x * * 3 + 3 * x"
  },
  {
    "function": "atan(x)",
    "true_expansion": "-x**3/3 + x",
    "lstm_prediction": "* x * * 3 / 3 + x",
    "improved_lstm_prediction": "- x * * 3 / 3 + x",
    "transformer_prediction": "- x * * 3 / 3 + x"
  },
  {
    "function": "-2 + 3/(1 - x)",
    "true_expansion": "3*x**4 + 3*x**3 + 3*x**2 + 3*x + 1",
    "lstm_prediction": "3 * x * * 4 + 3 * x * * 2 + 3",
    "improved_lstm_prediction": "3 * x * * 4 + 3 * x * * 3 + 3 * x * * 2 + 3 * x + 1",
    "transformer_prediction": "3 * x * * 4 + 3 * x * * 3 + 3 * x * * 2 + 2 * x + 3"
  },
  {
    "function": "log(x + 1)",
    "true_expansion": "-x**4/4 + x**3/3 - x**2/2 + x",
    "lstm_prediction": "- x * * 4 / 4 + x * * 3 / 3 - x * * 2 / 2 + x",
    "improved_lstm_prediction": "- x * * 4 / 4 + x * * 3 / 3 - x * * 2 / 2 + x",
    "transformer_prediction": "- x * * 4 / 4 + x * * 3 / 3 - x * * 2 / 2 + x"
  },
  {
    "function": "tan(x)",
    "true_expansion": "x**3/3 + x",
    "lstm_prediction": "x * * 3 / 3 + x",
    "improved_lstm_prediction": "x * * 3 / 3 + x",
    "transformer_prediction": "x * * 3 / 3 + x"
  },
  {
    "function": "4*x",
    "true_expansion": "4*x",
    "lstm_prediction": "4 * x + 1",
    "improved_lstm_prediction": "4 * x",
    "transformer_prediction": "4 * x"
  },
  {
    "function": "-10*x*sin(x)",
    "true_expansion": "5*x**4/3 - 10*x**2",
    "lstm_prediction": "5 * x * * 3 / 2 - 6 * x",
    "improved_lstm_prediction": "- 10 * x * * 3 / 3 - 10 * x * * 2",
    "transformer_prediction": "- 5 * x * * 4 / 3 - 5 * x * * 3 / 3 + 5 * x * * 2"
  },
  {
    "function": "sqrt(5*x + 1)",
    "true_expansion": "-3125*x**4/128 + 125*x**3/16 - 25*x**2/8 + 5*x/2 + 1",
    "lstm_prediction": "* x * * 4 / 128 + x * * 3 / 16 - x * * 2 / 8 + x / 2 + 1",
    "improved_lstm_prediction": "- 3125 * x * * 4 / 128 + 125 * x * * 3 / 16 - 25 * x * * 2 / 8 + 5 * x / 2 + 1",
    "transformer_prediction": "- 25 * x * * 4 / 128 + 5 * x * * 3 / 16 - 5 * x * * 2 / 8 + 5 * x / 2 + 5"
  },
  {
    "function": "3*(-3*x**2 - 3*x + 1)*atan(x)",
    "true_expansion": "3*x**4 - 10*x**3 - 9*x**2 + 3*x",
    "lstm_prediction": "- 5 * x * * 4 - 15 * x * * 3 / 2 + 9 * x",
    "improved_lstm_prediction": "- 3 * x * * 4 - 4 * x * * 3 - 9 * x * * 2 + 3 * x",
    "transformer_prediction": "- 2 * x * * 4 - 2 * x * * 3 - 6 * x * * 2 + 3 * x"
  },
  {
    "function": "x - 2 + 1/(1 - 3*x)",
    "true_expansion": "81*x**4 + 27*x**3 + 9*x**2 + 4*x - 1",
    "lstm_prediction": "81 * x * * 4 + 27 * x * * 3 + 9 * x * * 2 + 3 * x",
    "improved_lstm_prediction": "81 * x * * 4 + 27 * x * * 3 + 9 * x * * 2 + 4 * x - 1",
    "transformer_prediction": "3 * x * * 4 + 3 * x * * 3 + 3 * x * * 2 + 3 * x + 3"
  },
  {
    "function": "2*x + 1",
    "true_expansion": "2*x + 1",
    "lstm_prediction": "x * * 2 + 4",
    "improved_lstm_prediction": "2 * x + 1",
    "transformer_prediction": "2 * x + 1"
  },
  {
    "function": "1/(1 - x)",
    "true_expansion": "x**4 + x**3 + x**2 + x + 1",
    "lstm_prediction": "x * * 4 + x * * 3 + x * * 2 + x + 1",
    "improved_lstm_prediction": "x * * 4 + x * * 3 + x * * 2 + x + 1",
    "transformer_prediction": "x * * 4 + x * * 3 + x * * 2 + x + 1"
  },
  {
    "function": "sin(2*x)",
    "true_expansion": "-4*x**3/3 + 2*x",
    "lstm_prediction": "* x * * 3 / 2 + 3 * x",
    "improved_lstm_prediction": "- 4 * x * * 3 / 3 + 2 * x",
    "transformer_prediction": "- 4 * x * * 3 / 3 + 2 * x"
  },
  {
    "function": "3*x**2 + 6*x",
    "true_expansion": "3*x**2 + 6*x",
    "lstm_prediction": "3 * x * * 2 + 6 * x",
    "improved_lstm_prediction": "3 * x * * 3 + 6 * x * * 2 + 6 * x",
    "transformer_prediction": "6 * x * * 3 + 6 * x * * 2 + 6 * x"
  },
  {
    "function": "2*x**3 + x + exp(x) + 3",
    "true_expansion": "x**4/24 + 13*x**3/6 + x**2/2 + 2*x + 4",
    "lstm_prediction": "x * * 4 / 24 + 7 * x * * 3 / 6 + 7 * x * * 2 / 2 + 4",
    "improved_lstm_prediction": "x * * 4 / 24 + 13 * x * * 3 / 6 + x * * 2 / 2 + 2 * x + 4",
    "transformer_prediction": "x * * 4 / 24 + x * * 3 / 6 + x * * 2 / 2 + 4 * x + 4"
  },
  {
    "function": "5*atan(x)",
    "true_expansion": "-5*x**3/3 + 5*x",
    "lstm_prediction": "5 * x * * 3 / 3 + 5 * x",
    "improved_lstm_prediction": "5 * x * * 3 / 3 + 5 * x",
    "transformer_prediction": "- 125 * x * * 3 / 3 + 5 * x"
  },
  {
    "function": "(3*x + 1)*cos(x)",
    "true_expansion": "x**4/24 - 3*x**3/2 - x**2/2 + 3*x + 1",
    "lstm_prediction": "x * * 4 / 24 + 3 * x * * 3 + x * * 2 / 2 + 3 * x + 1",
    "improved_lstm_prediction": "x * * 4 / 24 - 3 * x * * 3 / 2 + 3 * x * * 2 / 2 + 3 * x + 1",
    "transformer_prediction": "x * * 4 / 8 - 3 * x * * 3 / 2 + 3 * x * * 2 / 2 + 3 * x + 3"
  },
  {
    "function": "sinh(x)",
    "true_expansion": "x**3/6 + x",
    "lstm_prediction": "x * * 3 / 2 + x",
    "improved_lstm_prediction": "x * * 3 / 6 + x",
    "transformer_prediction": "x * * 3 / 6 + x"
  },
  {
    "function": "3*x + 2*exp(x) + 1",
    "true_expansion": "x**4/12 + x**3/3 + x**2 + 5*x + 3",
    "lstm_prediction": "x * * 4 / 12 + x * * 3 / 3 + 5 * x * * 2 / 2 + 4 * x + 2",
    "improved_lstm_prediction": "x * * 4 / 12 + x * * 3 / 3 + x * * 2 + 5 * x + 5",
    "transformer_prediction": "x * * 4 / 12 + x * * 3 / 3 + x * * 2 + 4 * x + 2"
  },
  {
    "function": "2*x",
    "true_expansion": "2*x",
    "lstm_prediction": "2 * x",
    "improved_lstm_prediction": "2 * x * * 2 + 2 * x",
    "transformer_prediction": "2 * x"
  },
  {
    "function": "cos(x)",
    "true_expansion": "x**4/24 - x**2/2 + 1",
    "lstm_prediction": "x * * 2 / 2 + 1",
    "improved_lstm_prediction": "x * * 4 / 24 - x * * 2 / 2 + 1",
    "transformer_prediction": "x * * 4 / 24 - x * * 2 / 2 + 1"
  },
  {
    "function": "sinh(x)",
    "true_expansion": "x**3/6 + x",
    "lstm_prediction": "x * * 3 / 2 + x",
    "improved_lstm_prediction": "x * * 3 / 6 + x",
    "transformer_prediction": "x * * 3 / 6 + x"
  },
  {
    "function": "x + 1/(1 - x)",
    "true_expansion": "x**4 + x**3 + x**2 + 2*x + 1",
    "lstm_prediction": "x * * 4 + x * * 3 + 2 * x * * 2 + 4",
    "improved_lstm_prediction": "x * * 4 + x * * 3 + x * * 2 + 2 * x + 2",
    "transformer_prediction": "x * * 4 + x * * 3 + x * * 2 + 2 * x + 2"
  },
  {
    "function": "sin(x)",
    "true_expansion": "-x**3/6 + x",
    "lstm_prediction": "* x * * 3 / 2 + 5 * x",
    "improved_lstm_prediction": "- x * * 3 / 6 + x",
    "transformer_prediction": "- x * * 3 / 6 + x"
  },
  {
    "function": "atan(3*x) - 1",
    "true_expansion": "-9*x**3 + 3*x - 1",
    "lstm_prediction": "- 9 * x * * 3 + 3 * x - 1",
    "improved_lstm_prediction": "9 * x * * 3 + 3 * x - 1",
    "transformer_prediction": "- x * * 3 + 3 * x - 1"
  },
  {
    "function": "(-x**2 + 3*x + 2)*tan(x)",
    "true_expansion": "x**4 - x**3/3 + 3*x**2 + 2*x",
    "lstm_prediction": "x * * 4 - 2 * x * * 3 / 3 + 2 * x * * 2 + 2 * x",
    "improved_lstm_prediction": "x * * 4 / 3 - x * * 3 + 3 * x * * 2 + 2 * x",
    "transformer_prediction": "- 2 * x * * 4 / 3 + 2 * x * * 3 / 3 + 2 * x * * 2 + 2 * x"
  },
  {
    "function": "(-3*x - 1)*exp(x)",
    "true_expansion": "-13*x**4/24 - 5*x**3/3 - 7*x**2/2 - 4*x - 1",
    "lstm_prediction": "- 23 * x * * 4 / 8 - 11 * x * * 3 / 6 - 5 * x * * 2 / 2 - 5 * x - 1",
    "improved_lstm_prediction": "- 7 * x * * 4 / 24 - 11 * x * * 3 / 6 - 4 * x * * 2 - 2 * x - 1",
    "transformer_prediction": "- 3 * x * * 4 / 8 - x * * 3 / 3 - 3 * x * * 2 / 2 - 3 * x - 1"
  },
  {
    "function": "3*x**2 - 2*x + sqrt(2*x + 1) + 3",
    "true_expansion": "-5*x**4/8 + x**3/2 + 5*x**2/2 - x + 4",
    "lstm_prediction": "- 5 * x * * 4 / 8 + x * * 3 / 2 + x * * 2 / 2 - 3 * x + 5",
    "improved_lstm_prediction": "- 5 * x * * 4 / 8 + x * * 3 / 2 + 5 * x * * 2 / 2 - x + 4",
    "transformer_prediction": "- 5 * x * * 4 / 128 + 33 * x * * 3 / 16 - 9 * x * * 2 / 8 + 3 * x / 2 + 3"
  },
  {
    "function": "-x - 2",
    "true_expansion": "-x - 2",
    "lstm_prediction": "x - 2",
    "improved_lstm_prediction": "- x * * 2 - x - 2",
    "transformer_prediction": "x - 2"
  },
  {
    "function": "2 - x",
    "true_expansion": "2 - x",
    "lstm_prediction": "x * * 2 + 2",
    "improved_lstm_prediction": "x * * 2 - x",
    "transformer_prediction": "x - 2"
  },
  {
    "function": "5*log(x + 1) - 2",
    "true_expansion": "-5*x**4/4 + 5*x**3/3 - 5*x**2/2 + 5*x - 2",
    "lstm_prediction": "- 5 * x * * 4 / 4 + 5 * x * * 3 / 3 - 5 * x * * 2 / 2 + 5 * x + 2",
    "improved_lstm_prediction": "- 5 * x * * 4 / 4 + 5 * x * * 3 / 3 - 5 * x * * 2 / 2 + 5 * x - 2",
    "transformer_prediction": "- 625 * x * * 4 / 4 + 125 * x * * 3 / 3 - 25 * x * * 2 / 2 + 5 * x - 2"
  },
  {
    "function": "exp(3*x)",
    "true_expansion": "27*x**4/8 + 9*x**3/2 + 9*x**2/2 + 3*x + 1",
    "lstm_prediction": "27 * x * * 4 / 8 + 9 * x * * 3 / 2 + 9 * x * * 2 / 2 + 3 * x + 1",
    "improved_lstm_prediction": "81 * x * * 4 / 8 + 9 * x * * 3 + 9 * x * * 2 / 2 + 3 * x + 1",
    "transformer_prediction": "27 * x * * 4 / 8 + 9 * x * * 3 / 2 + 9 * x * * 2 / 2 + 3 * x + 1"
  },
  {
    "function": "sqrt(5*x + 1)",
    "true_expansion": "-3125*x**4/128 + 125*x**3/16 - 25*x**2/8 + 5*x/2 + 1",
    "lstm_prediction": "* x * * 4 / 128 + x * * 3 / 16 - x * * 2 / 8 + x / 2 + 1",
    "improved_lstm_prediction": "- 3125 * x * * 4 / 128 + 125 * x * * 3 / 16 - 25 * x * * 2 / 8 + 5 * x / 2 + 1",
    "transformer_prediction": "- 25 * x * * 4 / 128 + 5 * x * * 3 / 16 - 5 * x * * 2 / 8 + 5 * x / 2 + 5"
  },
  {
    "function": "(2*x**2 + 3*x - 1)*atan(x)",
    "true_expansion": "-x**4 + 7*x**3/3 + 3*x**2 - x",
    "lstm_prediction": "- 2 * x * * 4 / 3 + 2 * x * * 3 / 3 + x * * 2 - x",
    "improved_lstm_prediction": "- x * * 4 + 10 * x * * 3 / 3 + 3 * x * * 2 - x",
    "transformer_prediction": "- 2 * x * * 4 / 3 + 10 * x * * 3 / 3 + 2 * x * * 2 + 2 * x"
  },
  {
    "function": "tan(x)",
    "true_expansion": "x**3/3 + x",
    "lstm_prediction": "x * * 3 / 3 + x",
    "improved_lstm_prediction": "x * * 3 / 3 + x",
    "transformer_prediction": "x * * 3 / 3 + x"
  },
  {
    "function": "3*tan(x)",
    "true_expansion": "x**3 + 3*x",
    "lstm_prediction": "x * * 3 + 3 * x",
    "improved_lstm_prediction": "x * * 3 + 3 * x",
    "transformer_prediction": "9 * x * * 3 + 3 * x"
  },
  {
    "function": "-2*x**2 + 3*x + 2*cos(x) + 3",
    "true_expansion": "x**4/12 - 3*x**2 + 3*x + 5",
    "lstm_prediction": "x * * 4 / 12 - x * * 2 + 7 * x + 2",
    "improved_lstm_prediction": "x * * 4 / 12 - 5 * x * * 2 + 3 * x + 5",
    "transformer_prediction": "x * * 4 / 24 + 3 * x * * 3 + 5 * x * * 2 / 2 + 3 * x + 4"
  },
  {
    "function": "sin(2*x)",
    "true_expansion": "-4*x**3/3 + 2*x",
    "lstm_prediction": "* x * * 3 / 2 + 3 * x",
    "improved_lstm_prediction": "- 4 * x * * 3 / 3 + 2 * x",
    "transformer_prediction": "- 4 * x * * 3 / 3 + 2 * x"
  },
  {
    "function": "-x + 3*cosh(x) + 2",
    "true_expansion": "x**4/8 + 3*x**2/2 - x + 5",
    "lstm_prediction": "x * * 4 / 8 + 3 * x * * 2 / 2 - 3 * x + 4",
    "improved_lstm_prediction": "x * * 4 / 8 + 3 * x * * 2 / 2 - x + 5",
    "transformer_prediction": "x * * 4 / 24 + x * * 2 / 2 - 3 * x + 4"
  },
  {
    "function": "3*x",
    "true_expansion": "3*x",
    "lstm_prediction": "3 * x",
    "improved_lstm_prediction": "3 * x * * 2 + 3 * x",
    "transformer_prediction": "3 * x"
  },
  {
    "function": "log(x + 1) - 2",
    "true_expansion": "-x**4/4 + x**3/3 - x**2/2 + x - 2",
    "lstm_prediction": "- x * * 4 / 4 + x * * 3 / 3 - x * * 2 / 2 + x - 2",
    "improved_lstm_prediction": "- x * * 4 / 4 + x * * 3 / 3 - x * * 2 / 2 + x - 2",
    "transformer_prediction": "- x * * 4 / 4 + x * * 3 / 3 - x * * 2 / 2 + x - 2"
  },
  {
    "function": "3*atan(x)",
    "true_expansion": "-x**3 + 3*x",
    "lstm_prediction": "x * * 3 + 3 * x",
    "improved_lstm_prediction": "- x * * 3 + 3 * x",
    "transformer_prediction": "- 9 * x * * 3 + 3 * x"
  },
  {
    "function": "4*x",
    "true_expansion": "4*x",
    "lstm_prediction": "4 * x + 1",
    "improved_lstm_prediction": "4 * x",
    "transformer_prediction": "4 * x"
  },
  {
    "function": "3*sinh(x) - 3",
    "true_expansion": "x**3/2 + 3*x - 3",
    "lstm_prediction": "x * * 3 / 2 + 3 * x - 3",
    "improved_lstm_prediction": "x * * 3 / 2 + 3 * x - 3",
    "transformer_prediction": "9 * x * * 3 / 2 + 3 * x - 3"
  },
  {
    "function": "atan(x)",
    "true_expansion": "-x**3/3 + x",
    "lstm_prediction": "* x * * 3 / 3 + x",
    "improved_lstm_prediction": "- x * * 3 / 3 + x",
    "transformer_prediction": "- x * * 3 / 3 + x"
  },
  {
    "function": "-3*x**2 - x + log(3*x + 1) - 1",
    "true_expansion": "-81*x**4/4 + 9*x**3 - 15*x**2/2 + 2*x - 1",
    "lstm_prediction": "- 81 * x * * 4 / 4 + 9 * x * * 3 - 9 * x * * 2 / 2 + 2 * x - 1",
    "improved_lstm_prediction": "- 81 * x * * 4 / 4 + 9 * x * * 3 - 9 * x * * 2 / 2 + 2 * x - 1",
    "transformer_prediction": "- 3 * x * * 4 / 4 + x * * 3 - 5 * x * * 2 / 2 + 4 * x - 1"
  },
  {
    "function": "1/(1 - 4*x)",
    "true_expansion": "256*x**4 + 64*x**3 + 16*x**2 + 4*x + 1",
    "lstm_prediction": "256 * x * * 4 + 64 * x * * 3 + 16 * x * * 2 + 4 * x + 1",
    "improved_lstm_prediction": "256 * x * * 4 + 64 * x * * 3 + 16 * x * * 2 + 4 * x + 1",
    "transformer_prediction": "256 * x * * 4 + 64 * x * * 3 + 16 * x * * 2 + 4 * x + 1"
  },
  {
    "function": "(x**2 - 3*x + 4)*tan(4*x)",
    "true_expansion": "-64*x**4 + 268*x**3/3 - 12*x**2 + 16*x",
    "lstm_prediction": "- 128 * x * * 4 / 3 + 128 * x * * 3 / 3 - 8 * x * * 2 + 16 * x",
    "improved_lstm_prediction": "- 100 * x * * 4 - 88 * x * * 3 / 3 - 12 * x * * 2 + 12 * x",
    "transformer_prediction": "- 40 * x * * 4 / 3 + 40 * x * * 3 / 3 + 8 * x * * 2 + 4 * x"
  },
  {
    "function": "sqrt(x + 1)*(x**2 - 3*x + 3)",
    "true_expansion": "-55*x**4/128 + 17*x**3/16 - 7*x**2/8 - 3*x/2 + 3",
    "lstm_prediction": "- 711 * x * * 4 / 128 + 43 * x * * 3 / 16 - 15 * x * * 2 / 8 + 5 * x / 2 + 3",
    "improved_lstm_prediction": "- 119 * x * * 4 / 128 + 39 * x * * 3 / 16 + 7 * x * * 2 / 8 - 3 * x / 2 + 3",
    "transformer_prediction": "- 15 * x * * 4 / 128 + 3 * x * * 3 / 16 + 3 * x * * 2 / 8 + 3 * x / 2 + 3"
  },
  {
    "function": "exp(5*x)",
    "true_expansion": "625*x**4/24 + 125*x**3/6 + 25*x**2/2 + 5*x + 1",
    "lstm_prediction": "625 * x * * 4 / 24 + 125 * x * * 2 / 2 + 5 * x + 1",
    "improved_lstm_prediction": "625 * x * * 4 / 24 + 125 * x * * 3 / 6 + 25 * x * * 2 + 5 * x + 1",
    "transformer_prediction": "625 * x * * 4 / 24 + 125 * x * * 3 / 6 + 25 * x * * 2 / 2 + 5 * x + 1"
  },
  {
    "function": "1/(1 - 5*x)",
    "true_expansion": "625*x**4 + 125*x**3 + 25*x**2 + 5*x + 1",
    "lstm_prediction": "625 * x * * 4 + 125 * x * * 3 + 25 * x * * 2 + 5 * x + 1",
    "improved_lstm_prediction": "625 * x * * 4 + 125 * x * * 3 + 25 * x * * 2 + 5 * x + 1",
    "transformer_prediction": "625 * x * * 4 + 125 * x * * 3 + 25 * x * * 2 + 5 * x + 1"
  },
  {
    "function": "x",
    "true_expansion": "x",
    "lstm_prediction": "x * * 2 / 2 + 1",
    "improved_lstm_prediction": "x * * 3 + x",
    "transformer_prediction": "x"
  },
  {
    "function": "3*x",
    "true_expansion": "3*x",
    "lstm_prediction": "3 * x",
    "improved_lstm_prediction": "3 * x * * 2 + 3 * x",
    "transformer_prediction": "3 * x"
  },
  {
    "function": "atan(x)",
    "true_expansion": "-x**3/3 + x",
    "lstm_prediction": "* x * * 3 / 3 + x",
    "improved_lstm_prediction": "- x * * 3 / 3 + x",
    "transformer_prediction": "- x * * 3 / 3 + x"
  },
  {
    "function": "-3*x**2 + 2*x + atan(x) + 1",
    "true_expansion": "-x**3/3 - 3*x**2 + 3*x + 1",
    "lstm_prediction": "- x * * 3 / 3 - 3 * x * * 2 + 4 * x + 1",
    "improved_lstm_prediction": "- x * * 3 / 3 - 3 * x * * 2 + 3 * x + 1",
    "transformer_prediction": "- 2 * x * * 3 / 3 + 2 * x * * 2 + 4 * x + 1"
  },
  {
    "function": "sin(x)",
    "true_expansion": "-x**3/6 + x",
    "lstm_prediction": "* x * * 3 / 2 + 5 * x",
    "improved_lstm_prediction": "- x * * 3 / 6 + x",
    "transformer_prediction": "- x * * 3 / 6 + x"
  },
  {
    "function": "sinh(x)",
    "true_expansion": "x**3/6 + x",
    "lstm_prediction": "x * * 3 / 2 + x",
    "improved_lstm_prediction": "x * * 3 / 6 + x",
    "transformer_prediction": "x * * 3 / 6 + x"
  },
  {
    "function": "3*x**2 - x + atan(2*x) + 1",
    "true_expansion": "-8*x**3/3 + 3*x**2 + x + 1",
    "lstm_prediction": "- 8 * x * * 3 / 3 + 3 * x * * 2 + 2 * x - 1",
    "improved_lstm_prediction": "- 8 * x * * 3 / 3 + 3 * x * * 2 + x + 1",
    "transformer_prediction": "- 2 * x * * 3 / 3 + 2 * x * * 2 + 4 * x + 1"
  },
  {
    "function": "cosh(2*x)",
    "true_expansion": "2*x**4/3 + 2*x**2 + 1",
    "lstm_prediction": "x * * 2 / 2 + 1",
    "improved_lstm_prediction": "2 * x * * 4 / 3 + 2 * x * * 2 + 1",
    "transformer_prediction": "2 * x * * 4 / 3 + 2 * x * * 2 + 1"
  },
  {
    "function": "5*x*(-3*x**2 + 2*x)",
    "true_expansion": "-15*x**3 + 10*x**2",
    "lstm_prediction": "- 10 * x * * 4 + 10 * x * * 3 + 10 * x * * 2",
    "improved_lstm_prediction": "- 15 * x * * 3 + 15 * x * * 2",
    "transformer_prediction": "- 15 * x * * 4 + 15 * x * * 3 + 15 * x * * 2 + 10 * x"
  },
  {
    "function": "2*sqrt(4*x + 1)",
    "true_expansion": "-20*x**4 + 8*x**3 - 4*x**2 + 4*x + 2",
    "lstm_prediction": "- 10 * x * * 4 + 8 * x * * 3 - 2 * x * * 2 + 4 * x + 2",
    "improved_lstm_prediction": "- 10 * x * * 4 + 4 * x * * 3 - 10 * x * * 2 + 4 * x + 2",
    "transformer_prediction": "- 5 * x * * 4 / 32 + x * * 3 / 2 - x * * 2 / 2 + 2 * x + 4"
  },
  {
    "function": "5*(-3*x**3 + x + 1)*tan(x)",
    "true_expansion": "-40*x**4/3 + 5*x**3/3 + 5*x**2 + 5*x",
    "lstm_prediction": "5 * x * * 4 - 35 * x * * 3 / 3 + 5 * x * * 2 + 10 * x",
    "improved_lstm_prediction": "5 * x * * 4 / 3 + 10 * x * * 3 / 3 + 5 * x * * 2 + 5 * x",
    "transformer_prediction": "5 * x * * 4 + 5 * x * * 3 / 3 + 15 * x * * 2 + 5 * x"
  },
  {
    "function": "x",
    "true_expansion": "x",
    "lstm_prediction": "x * * 2 / 2 + 1",
    "improved_lstm_prediction": "x * * 3 + x",
    "transformer_prediction": "x"
  },
  {
    "function": "log(2*x + 1)",
    "true_expansion": "-4*x**4 + 8*x**3/3 - 2*x**2 + 2*x",
    "lstm_prediction": "- 4 * x * * 4 + 8 * x * * 3 / 3 - 2 * x * * 2 + 2 * x",
    "improved_lstm_prediction": "- 4 * x * * 4 + 8 * x * * 3 / 3 - 2 * x * * 2 + 2 * x",
    "transformer_prediction": "- 4 * x * * 4 + 8 * x * * 3 / 3 - 2 * x * * 2 + 2 * x"
  },
  {
    "function": "tan(5*x)",
    "true_expansion": "125*x**3/3 + 5*x",
    "lstm_prediction": "125 * x * * 3 / 3 + 5 * x",
    "improved_lstm_prediction": "125 * x * * 3 / 3 + 5 * x",
    "transformer_prediction": "5 * x * * 3 / 3 + 5 * x"
  },
  {
    "function": "cos(2*x)",
    "true_expansion": "2*x**4/3 - 2*x**2 + 1",
    "lstm_prediction": "x * * 2 + 4",
    "improved_lstm_prediction": "2 * x * * 4 / 3 + 2 * x * * 2 + 1",
    "transformer_prediction": "2 * x * * 4 / 3 - 2 * x * * 2 + 1"
  },
  {
    "function": "3*atan(x)",
    "true_expansion": "-x**3 + 3*x",
    "lstm_prediction": "x * * 3 + 3 * x",
    "improved_lstm_prediction": "- x * * 3 + 3 * x",
    "transformer_prediction": "- 9 * x * * 3 + 3 * x"
  },
  {
    "function": "1/(1 - x)",
    "true_expansion": "x**4 + x**3 + x**2 + x + 1",
    "lstm_prediction": "x * * 4 + x * * 3 + x * * 2 + x + 1",
    "improved_lstm_prediction": "x * * 4 + x * * 3 + x * * 2 + x + 1",
    "transformer_prediction": "x * * 4 + x * * 3 + x * * 2 + x + 1"
  },
  {
    "function": "1/(1 - x)",
    "true_expansion": "x**4 + x**3 + x**2 + x + 1",
    "lstm_prediction": "x * * 4 + x * * 3 + x * * 2 + x + 1",
    "improved_lstm_prediction": "x * * 4 + x * * 3 + x * * 2 + x + 1",
    "transformer_prediction": "x * * 4 + x * * 3 + x * * 2 + x + 1"
  },
  {
    "function": "sinh(5*x)",
    "true_expansion": "125*x**3/6 + 5*x",
    "lstm_prediction": "125 * x * * 3 / 6 + 5 * x",
    "improved_lstm_prediction": "125 * x * * 3 / 6 + 5 * x",
    "transformer_prediction": "125 * x * * 3 / 6 + 5 * x"
  },
  {
    "function": "atan(x)",
    "true_expansion": "-x**3/3 + x",
    "lstm_prediction": "* x * * 3 / 3 + x",
    "improved_lstm_prediction": "- x * * 3 / 3 + x",
    "transformer_prediction": "- x * * 3 / 3 + x"
  },
  {
    "function": "cos(x)",
    "true_expansion": "x**4/24 - x**2/2 + 1",
    "lstm_prediction": "x * * 2 / 2 + 1",
    "improved_lstm_prediction": "x * * 4 / 24 - x * * 2 / 2 + 1",
    "transformer_prediction": "x * * 4 / 24 - x * * 2 / 2 + 1"
  },
  {
    "function": "1/(1 - 2*x)",
    "true_expansion": "16*x**4 + 8*x**3 + 4*x**2 + 2*x + 1",
    "lstm_prediction": "16 * x * * 4 + 8 * x * * 3 + 4 * x * * 2 + 2 * x + 1",
    "improved_lstm_prediction": "16 * x * * 4 + 8 * x * * 3 + 4 * x * * 2 + 2 * x + 1",
    "transformer_prediction": "16 * x * * 4 + 8 * x * * 3 + 4 * x * * 2 + 2 * x + 1"
  },
  {
    "function": "-cos(5*x)",
    "true_expansion": "-625*x**4/24 + 25*x**2/2 - 1",
    "lstm_prediction": "3125 * x * * 3 / 6 - 5 * x",
    "improved_lstm_prediction": "- 625 * x * * 4 / 24 - 25 * x * * 2 / 2 - 1",
    "transformer_prediction": "- 5 * x * * 4 / 24 + 5 * x * * 2 / 2 - 5"
  },
  {
    "function": "sqrt(5*x + 1)",
    "true_expansion": "-3125*x**4/128 + 125*x**3/16 - 25*x**2/8 + 5*x/2 + 1",
    "lstm_prediction": "* x * * 4 / 128 + x * * 3 / 16 - x * * 2 / 8 + x / 2 + 1",
    "improved_lstm_prediction": "- 3125 * x * * 4 / 128 + 125 * x * * 3 / 16 - 25 * x * * 2 / 8 + 5 * x / 2 + 1",
    "transformer_prediction": "- 25 * x * * 4 / 128 + 5 * x * * 3 / 16 - 5 * x * * 2 / 8 + 5 * x / 2 + 5"
  },
  {
    "function": "2*sin(x)",
    "true_expansion": "-x**3/3 + 2*x",
    "lstm_prediction": "x * * 3 / 3 + 2 * x",
    "improved_lstm_prediction": "- x * * 3 / 3 + 2 * x",
    "transformer_prediction": "- 4 * x * * 3 / 3 + 2 * x"
  },
  {
    "function": "cosh(4*x)",
    "true_expansion": "32*x**4/3 + 8*x**2 + 1",
    "lstm_prediction": "32 * x * * 2 / 2 + 4",
    "improved_lstm_prediction": "32 * x * * 4 / 3 + 8 * x * * 2 + 1",
    "transformer_prediction": "x * * 4 / 6 + 2 * x * * 2 + 4"
  },
  {
    "function": "2*x - 3 + 1/(1 - x)",
    "true_expansion": "x**4 + x**3 + x**2 + 3*x - 2",
    "lstm_prediction": "x * * 4 + x * * 3 + x * * 2 - 2 * x + 3",
    "improved_lstm_prediction": "x * * 4 + x * * 3 + x * * 2 + 3 * x - 2",
    "transformer_prediction": "3 * x * * 4 + 3 * x * * 3 + 3 * x * * 2 + 3 * x + 3"
  },
  {
    "function": "2*atan(x) + 3",
    "true_expansion": "-2*x**3/3 + 2*x + 3",
    "lstm_prediction": "- 2 * x * * 3 / 3 + 2 * x + 3",
    "improved_lstm_prediction": "- 2 * x * * 3 / 3 + 2 * x + 3",
    "transformer_prediction": "- 2 * x * * 3 / 3 + 2 * x + 3"
  },
  {
    "function": "sqrt(x + 1)",
    "true_expansion": "-5*x**4/128 + x**3/16 - x**2/8 + x/2 + 1",
    "lstm_prediction": "- 5 * x * * 4 / 128 + x * * 3 / 16 - x * * 2 / 8 + x / 2 + 1",
    "improved_lstm_prediction": "- 5 * x * * 4 / 128 + x * * 3 / 16 - x * * 2 / 8 + x / 2 + 1",
    "transformer_prediction": "- 5 * x * * 4 / 128 + x * * 3 / 16 - x * * 2 / 8 + x / 2 + 1"
  },
  {
    "function": "sqrt(4*x + 1)",
    "true_expansion": "-10*x**4 + 4*x**3 - 2*x**2 + 2*x + 1",
    "lstm_prediction": "- 10 * x * * 4 + 4 * x * * 2 + 2 * x + 1",
    "improved_lstm_prediction": "- 10 * x * * 4 + 4 * x * * 3 - 2 * x * * 2 + 2 * x + 1",
    "transformer_prediction": "- 5 * x * * 4 / 32 + x * * 3 / 4 - x * * 2 / 2 + 2 * x + 4"
  },
  {
    "function": "log(x + 1)",
    "true_expansion": "-x**4/4 + x**3/3 - x**2/2 + x",
    "lstm_prediction": "- x * * 4 / 4 + x * * 3 / 3 - x * * 2 / 2 + x",
    "improved_lstm_prediction": "- x * * 4 / 4 + x * * 3 / 3 - x * * 2 / 2 + x",
    "transformer_prediction": "- x * * 4 / 4 + x * * 3 / 3 - x * * 2 / 2 + x"
  },
  {
    "function": "(2*x + 4)*tan(x)",
    "true_expansion": "2*x**4/3 + 4*x**3/3 + 2*x**2 + 4*x",
    "lstm_prediction": "4 * x * * 4 / 3 + 4 * x * * 3 / 3 + 4 * x * * 2 + 4 * x",
    "improved_lstm_prediction": "2 * x * * 4 / 3 + 2 * x * * 3 / 3 + 2 * x * * 2 + 4 * x",
    "transformer_prediction": "64 * x * * 4 / 3 + 64 * x * * 3 / 3 + 8 * x * * 2 + 4 * x"
  },
  {
    "function": "-2*x**3 - 2*x**2 + x + cos(x) + 3",
    "true_expansion": "x**4/24 - 2*x**3 - 5*x**2/2 + x + 4",
    "lstm_prediction": "x * * 4 / 24 - 2 * x * * 3 - x * * 2 / 2 + 3",
    "improved_lstm_prediction": "x * * 4 / 24 - 2 * x * * 3 - 5 * x * * 2 / 2 + x + 4",
    "transformer_prediction": "x * * 4 / 24 + 3 * x * * 3 + 5 * x * * 2 / 2 + 3 * x + 4"
  },
  {
    "function": "x**3 - 3*x**2 + 4*exp(x) - 2",
    "true_expansion": "x**4/6 + 5*x**3/3 - x**2 + 4*x + 2",
    "lstm_prediction": "x * * 4 / 6 + x * * 3 / 3 + x * * 2 + 7 * x",
    "improved_lstm_prediction": "x * * 4 / 6 + 5 * x * * 3 / 3 + x * * 2 + 4 * x + 4",
    "transformer_prediction": "x * * 4 / 6 + 2 * x * * 3 / 3 + x * * 2 + x + 4"
  },
  {
    "function": "3*(-2*x**2 - 2*x - 2)*sinh(x)",
    "true_expansion": "-x**4 - 7*x**3 - 6*x**2 - 6*x",
    "lstm_prediction": "- 5 * x * * 4 - 8 * x * * 3 / 3 - 6 * x * * 2 - 4 * x",
    "improved_lstm_prediction": "- x * * 4 - 10 * x * * 3 - 6 * x * * 2 - 6 * x",
    "transformer_prediction": "- 3 * x * * 4 / 2 - x * * 3 - 6 * x * * 2 - 6 * x"
  },
  {
    "function": "sin(x)",
    "true_expansion": "-x**3/6 + x",
    "lstm_prediction": "* x * * 3 / 2 + 5 * x",
    "improved_lstm_prediction": "- x * * 3 / 6 + x",
    "transformer_prediction": "- x * * 3 / 6 + x"
  },
  {
    "function": "sin(3*x)",
    "true_expansion": "-9*x**3/2 + 3*x",
    "lstm_prediction": "* x * * 3 / 2 + 3 * x",
    "improved_lstm_prediction": "9 * x * * 3 + 3 * x",
    "transformer_prediction": "- 9 * x * * 3 / 2 + 3 * x"
  },
  {
    "function": "sqrt(3*x + 1)",
    "true_expansion": "-405*x**4/128 + 27*x**3/16 - 9*x**2/8 + 3*x/2 + 1",
    "lstm_prediction": "- 405 * x * * 4 / 128 + 27 * x * * 3 / 16 - 9 * x * * 2 / 8 + 3 * x / 2 + 1",
    "improved_lstm_prediction": "- 405 * x * * 4 / 128 + 27 * x * * 3 / 16 - 9 * x * * 2 / 8 + 3 * x / 2 + 1",
    "transformer_prediction": "- 15 * x * * 4 / 128 + 3 * x * * 3 / 16 - 3 * x * * 2 / 8 + 3 * x / 2 + 3"
  },
  {
    "function": "cosh(3*x)",
    "true_expansion": "27*x**4/8 + 9*x**2/2 + 1",
    "lstm_prediction": "63 * x * * 2 / 2 + 1",
    "improved_lstm_prediction": "27 * x * * 4 / 8 + 9 * x * * 2 / 2 + 1",
    "transformer_prediction": "x * * 4 / 8 + 3 * x * * 2 / 2 + 3"
  },
  {
    "function": "5/(1 - x)",
    "true_expansion": "5*x**4 + 5*x**3 + 5*x**2 + 5*x + 5",
    "lstm_prediction": "5 * x * * 4 + 5 * x * * 3 + 5 * x * * 2 + 5 * x + 5",
    "improved_lstm_prediction": "5 * x * * 4 + 5 * x * * 3 + 5 * x * * 2 + 5 * x + 5",
    "transformer_prediction": "5 * x * * 4 + 5 * x * * 3 + 5 * x * * 2 + 5 * x + 5"
  },
  {
    "function": "2*exp(x)",
    "true_expansion": "x**4/12 + x**3/3 + x**2 + 2*x + 2",
    "lstm_prediction": "x * * 4 / 12 + x * * 3 / 2 + 2 * x * * 2 + x + 4",
    "improved_lstm_prediction": "x * * 4 / 12 + x * * 3 / 3 + x * * 2 + 2 * x + 2",
    "transformer_prediction": "2 * x * * 4 / 3 + 4 * x * * 3 / 3 + 2 * x * * 2 + 2 * x + 1"
  },
  {
    "function": "4*atan(x)",
    "true_expansion": "-4*x**3/3 + 4*x",
    "lstm_prediction": "- 4 * x * * 3 / 3 + 4 * x",
    "improved_lstm_prediction": "- 4 * x * * 3 / 3 + 4 * x",
    "transformer_prediction": "- 4 * x * * 3 / 3 + 4 * x"
  },
  {
    "function": "(3*x**2 + 3*x - 1)*cosh(2*x)",
    "true_expansion": "16*x**4/3 + 6*x**3 + x**2 + 3*x - 1",
    "lstm_prediction": "2 * x * * 4 / 3 + 4 * x * * 3 + 4 * x * * 2 - x - 1",
    "improved_lstm_prediction": "- 24 * x * * 4 / 3 + x * * 3 + 11 * x * * 2 + 3 * x - 1",
    "transformer_prediction": "- 3 * x * * 4 / 8 + 3 * x * * 3 / 2 + 3 * x * * 2 / 2 + 3 * x + 3"
  },
  {
    "function": "tan(x)",
    "true_expansion": "x**3/3 + x",
    "lstm_prediction": "x * * 3 / 3 + x",
    "improved_lstm_prediction": "x * * 3 / 3 + x",
    "transformer_prediction": "x * * 3 / 3 + x"
  },
  {
    "function": "(3*x**3 - x**2 - x + 4)/(1 - x)",
    "true_expansion": "5*x**4 + 5*x**3 + 2*x**2 + 3*x + 4",
    "lstm_prediction": "10 * x * * 4 + 7 * x * * 3 + 7 * x * * 2 + 7 * x + 4",
    "improved_lstm_prediction": "10 * x * * 4 + 10 * x * * 3 + 3 * x * * 2 + 3 * x + 4",
    "transformer_prediction": "- 11 * x * * 4 - 5 * x * * 3 - 5 * x * * 2 - 4 * x + 4"
  },
  {
    "function": "sqrt(4*x + 1)",
    "true_expansion": "-10*x**4 + 4*x**3 - 2*x**2 + 2*x + 1",
    "lstm_prediction": "- 10 * x * * 4 + 4 * x * * 2 + 2 * x + 1",
    "improved_lstm_prediction": "- 10 * x * * 4 + 4 * x * * 3 - 2 * x * * 2 + 2 * x + 1",
    "transformer_prediction": "- 5 * x * * 4 / 32 + x * * 3 / 4 - x * * 2 / 2 + 2 * x + 4"
  },
  {
    "function": "cos(x)",
    "true_expansion": "x**4/24 - x**2/2 + 1",
    "lstm_prediction": "x * * 2 / 2 + 1",
    "improved_lstm_prediction": "x * * 4 / 24 - x * * 2 / 2 + 1",
    "transformer_prediction": "x * * 4 / 24 - x * * 2 / 2 + 1"
  },
  {
    "function": "-3*x**2 - x + sin(2*x) - 1",
    "true_expansion": "-4*x**3/3 - 3*x**2 + x - 1",
    "lstm_prediction": "- 4 * x * * 3 / 3 - x * * 2 + 2 * x - 1",
    "improved_lstm_prediction": "- 10 * x * * 3 / 3 - 3 * x * * 2 + x - 1",
    "transformer_prediction": "- x * * 3 / 2 - 2 * x * * 2 + 2 * x - 1"
  },
  {
    "function": "-3*x**3 + 2*x**2 + 2*x + cos(x)",
    "true_expansion": "x**4/24 - 3*x**3 + 3*x**2/2 + 2*x + 1",
    "lstm_prediction": "x * * 4 / 24 - 3 * x * * 3 + 5 * x * * 2 / 2 + 2 * x + 1",
    "improved_lstm_prediction": "x * * 4 / 24 - 3 * x * * 3 + 3 * x * * 2 / 2 + 2 * x + 1",
    "transformer_prediction": "x * * 4 / 24 + 3 * x * * 3 + 5 * x * * 2 / 2 + 3 * x + 3"
  },
  {
    "function": "-3*x + exp(4*x) - 3",
    "true_expansion": "32*x**4/3 + 32*x**3/3 + 8*x**2 + x - 2",
    "lstm_prediction": "32 * x * * 4 / 3 + 32 * x * * 3 / 3 + 8 * x * * 2 + x - 2",
    "improved_lstm_prediction": "32 * x * * 4 / 3 + 32 * x * * 3 / 3 + 8 * x * * 2 + x - 2",
    "transformer_prediction": "x * * 4 / 6 + 2 * x * * 3 / 3 + 2 * x * * 2 + x + 4"
  },
  {
    "function": "3*x",
    "true_expansion": "3*x",
    "lstm_prediction": "3 * x",
    "improved_lstm_prediction": "3 * x * * 2 + 3 * x",
    "transformer_prediction": "3 * x"
  },
  {
    "function": "sin(x)",
    "true_expansion": "-x**3/6 + x",
    "lstm_prediction": "* x * * 3 / 2 + 5 * x",
    "improved_lstm_prediction": "- x * * 3 / 6 + x",
    "transformer_prediction": "- x * * 3 / 6 + x"
  },
  {
    "function": "-x**2 - x + sinh(x)",
    "true_expansion": "x**3/6 - x**2",
    "lstm_prediction": "x * * 3 / 6 - x * * 2 + x",
    "improved_lstm_prediction": "x * * 3 / 6 - x * * 2",
    "transformer_prediction": "x * * 3 / 6 - x * * 2 - x"
  },
  {
    "function": "4*tan(x)",
    "true_expansion": "4*x**3/3 + 4*x",
    "lstm_prediction": "4 * x * * 3 / 3 + 4 * x",
    "improved_lstm_prediction": "4 * x * * 3 / 3 + 4 * x",
    "transformer_prediction": "4 * x * * 3 / 3 + 4 * x"
  },
  {
    "function": "2*cosh(x)",
    "true_expansion": "x**4/12 + x**2 + 2",
    "lstm_prediction": "x * * 4 / 8 + 3 * x * * 2 / 2 + 3",
    "improved_lstm_prediction": "x * * 4 / 12 + x * * 2 + 2",
    "transformer_prediction": "2 * x * * 4 / 3 + 2 * x * * 2 + 1"
  },
  {
    "function": "cosh(x)",
    "true_expansion": "x**4/24 + x**2/2 + 1",
    "lstm_prediction": "x * * 2 / 2 + 1",
    "improved_lstm_prediction": "x * * 4 / 24 + x * * 2 / 2 + 1",
    "transformer_prediction": "x * * 4 / 24 + x * * 2 / 2 + 1"
  },
  {
    "function": "5*cosh(x)",
    "true_expansion": "5*x**4/24 + 5*x**2/2 + 5",
    "lstm_prediction": "5 * x * * 3 / 6 + 5 * x",
    "improved_lstm_prediction": "5 * x * * 4 / 24 + 5 * x * * 2 / 2 + 5",
    "transformer_prediction": "625 * x * * 4 / 24 + 25 * x * * 2 / 2 + 1"
  },
  {
    "function": "log(x + 1)",
    "true_expansion": "-x**4/4 + x**3/3 - x**2/2 + x",
    "lstm_prediction": "- x * * 4 / 4 + x * * 3 / 3 - x * * 2 / 2 + x",
    "improved_lstm_prediction": "- x * * 4 / 4 + x * * 3 / 3 - x * * 2 / 2 + x",
    "transformer_prediction": "- x * * 4 / 4 + x * * 3 / 3 - x * * 2 / 2 + x"
  },
  {
    "function": "-x + 5*sin(x) - 1",
    "true_expansion": "-5*x**3/6 + 4*x - 1",
    "lstm_prediction": "- 5 * x * * 3 / 6 + 3 * x - 1",
    "improved_lstm_prediction": "- 5 * x * * 3 / 6 + 4 * x - 1",
    "transformer_prediction": "- 125 * x * * 3 / 6 + 2 * x - 1"
  },
  {
    "function": "3/(1 - x)",
    "true_expansion": "3*x**4 + 3*x**3 + 3*x**2 + 3*x + 3",
    "lstm_prediction": "81 * x * * 4 + 27 * x * * 3 + 9 * x * * 2 + 6 * x + 3",
    "improved_lstm_prediction": "3 * x * * 4 + 3 * x * * 3 + 3 * x * * 2 + 3 * x + 3",
    "transformer_prediction": "3 * x * * 4 + 3 * x * * 3 + 3 * x * * 2 + 3 * x + 3"
  },
  {
    "function": "1/(1 - x)",
    "true_expansion": "x**4 + x**3 + x**2 + x + 1",
    "lstm_prediction": "x * * 4 + x * * 3 + x * * 2 + x + 1",
    "improved_lstm_prediction": "x * * 4 + x * * 3 + x * * 2 + x + 1",
    "transformer_prediction": "x * * 4 + x * * 3 + x * * 2 + x + 1"
  },
  {
    "function": "3*exp(x) - 1",
    "true_expansion": "x**4/8 + x**3/2 + 3*x**2/2 + 3*x + 2",
    "lstm_prediction": "x * * 4 / 8 + x * * 3 / 2 + 3 * x * * 2 / 2 + 3 * x + 3",
    "improved_lstm_prediction": "x * * 4 / 8 + x * * 3 / 2 + 3 * x * * 2 / 2 + 3 * x + 2",
    "transformer_prediction": "27 * x * * 4 / 8 + 9 * x * * 3 / 2 + 9 * x * * 2 / 2 + 3 * x - 2"
  },
  {
    "function": "-x + cos(x) - 3",
    "true_expansion": "x**4/24 - x**2/2 - x - 2",
    "lstm_prediction": "x * * 4 / 24 - x * * 2 / 2 - 2 * x - 2",
    "improved_lstm_prediction": "x * * 4 / 24 - x * * 2 / 2 - x - 2",
    "transformer_prediction": "x * * 4 / 24 - x * * 2 / 2 - 2 * x - 2"
  },
  {
    "function": "4*sqrt(x + 1)*(-3*x**2 + x + 1)",
    "true_expansion": "51*x**4/32 - 25*x**3/4 - 21*x**2/2 + 6*x + 4",
    "lstm_prediction": "- 23 * x * * 4 / 16 + 2 * x * * 3 - 3 * x * * 2 / 2 + 4 * x",
    "improved_lstm_prediction": "- 23 * x * * 4 / 16 - 7 * x * * 3 / 4 - 3 * x * * 2 + 4 * x + 4",
    "transformer_prediction": "- 5 * x * * 4 / 32 + x * * 3 / 8 - x * * 2 / 2 + x + 4"
  },
  {
    "function": "-2*x**2 + 3*x + sin(5*x) - 1",
    "true_expansion": "-125*x**3/6 - 2*x**2 + 8*x - 1",
    "lstm_prediction": "- 125 * x * * 3 / 6 - 2 * x * * 2 + 7 * x - 1",
    "improved_lstm_prediction": "- 125 * x * * 3 / 6 - 2 * x * * 2 + 8 * x - 1",
    "transformer_prediction": "- 17 * x * * 3 / 6 + 2 * x * * 2 + 3 * x - 1"
  },
  {
    "function": "3*sqrt(x + 1)",
    "true_expansion": "-15*x**4/128 + 3*x**3/16 - 3*x**2/8 + 3*x/2 + 3",
    "lstm_prediction": "- 15 * x * * 4 / 128 + 3 * x * * 3 / 16 - 3 * x * * 2 / 8 + 3 * x / 2 + 1",
    "improved_lstm_prediction": "- 15 * x * * 4 / 128 + 3 * x * * 3 / 16 + 3 * x * * 2 / 8 + 3 * x / 2 + 3",
    "transformer_prediction": "- 15 * x * * 4 / 128 + 3 * x * * 3 / 16 - 3 * x * * 2 / 8 + 3 * x / 2 + 3"
  },
  {
    "function": "-x + tan(x) + 3",
    "true_expansion": "x**3/3 + 3",
    "lstm_prediction": "x * * 3 / 3 + x + 3",
    "improved_lstm_prediction": "x * * 3 / 3 + 3",
    "transformer_prediction": "x * * 3 / 3 - 2 * x + 3"
  },
  {
    "function": "-x**3 - 3*x**2 - x + 2*sqrt(x + 1) + 2",
    "true_expansion": "-5*x**4/64 - 7*x**3/8 - 13*x**2/4 + 4",
    "lstm_prediction": "- 5 * x * * 4 / 64 - 17 * x * * 3 / 8 - 9 * x * * 2 / 4 + 2",
    "improved_lstm_prediction": "- 5 * x * * 4 / 64 - 5 * x * * 3 / 8 - 13 * x * * 2 / 4 + 3",
    "transformer_prediction": "- 5 * x * * 4 / 128 + x * * 3 / 16 - 17 * x * * 2 / 8 - 3 * x / 2 + 1"
  },
  {
    "function": "(-3*x**3 - 3*x**2 - x)/(1 - x)",
    "true_expansion": "-7*x**4 - 7*x**3 - 4*x**2 - x",
    "lstm_prediction": "- 2 * x * * 4 - 2 * x * * 3 - 2 * x * * 2 - x",
    "improved_lstm_prediction": "- 3 * x * * 4 - 4 * x * * 3 - x * * 2",
    "transformer_prediction": "- 3 * x * * 4 - 3 * x * * 3 - 3 * x * * 2 - 3 * x - 3"
  },
  {
    "function": "atan(5*x)",
    "true_expansion": "-125*x**3/3 + 5*x",
    "lstm_prediction": "* x * * 3 / 3 + 5 * x",
    "improved_lstm_prediction": "- 125 * x * * 3 / 3 + 5 * x",
    "transformer_prediction": "- 125 * x * * 3 / 3 + 5 * x"
  },
  {
    "function": "5*log(x + 1)",
    "true_expansion": "-5*x**4/4 + 5*x**3/3 - 5*x**2/2 + 5*x",
    "lstm_prediction": "- 5 * x * * 4 / 4 + 5 * x * * 3 / 3 - 5 * x * * 2 / 2 + 5 * x",
    "improved_lstm_prediction": "- 5 * x * * 4 / 4 + 5 * x * * 3 / 3 - 5 * x * * 2 / 2 + 5 * x",
    "transformer_prediction": "- 625 * x * * 4 / 4 + 125 * x * * 3 / 3 - 25 * x * * 2 / 2 + 5 * x"
  },
  {
    "function": "sqrt(x + 1)",
    "true_expansion": "-5*x**4/128 + x**3/16 - x**2/8 + x/2 + 1",
    "lstm_prediction": "- 5 * x * * 4 / 128 + x * * 3 / 16 - x * * 2 / 8 + x / 2 + 1",
    "improved_lstm_prediction": "- 5 * x * * 4 / 128 + x * * 3 / 16 - x * * 2 / 8 + x / 2 + 1",
    "transformer_prediction": "- 5 * x * * 4 / 128 + x * * 3 / 16 - x * * 2 / 8 + x / 2 + 1"
  },
  {
    "function": "5*log(x + 1)",
    "true_expansion": "-5*x**4/4 + 5*x**3/3 - 5*x**2/2 + 5*x",
    "lstm_prediction": "- 5 * x * * 4 / 4 + 5 * x * * 3 / 3 - 5 * x * * 2 / 2 + 5 * x",
    "improved_lstm_prediction": "- 5 * x * * 4 / 4 + 5 * x * * 3 / 3 - 5 * x * * 2 / 2 + 5 * x",
    "transformer_prediction": "- 625 * x * * 4 / 4 + 125 * x * * 3 / 3 - 25 * x * * 2 / 2 + 5 * x"
  },
  {
    "function": "cos(5*x)",
    "true_expansion": "625*x**4/24 - 25*x**2/2 + 1",
    "lstm_prediction": "* x * * 2 / 2 + 1",
    "improved_lstm_prediction": "625 * x * * 4 / 24 - 25 * x * * 2 / 2 + 1",
    "transformer_prediction": "5 * x * * 4 / 24 - 5 * x * * 2 / 2 + 5"
  },
  {
    "function": "1/(1 - 4*x)",
    "true_expansion": "256*x**4 + 64*x**3 + 16*x**2 + 4*x + 1",
    "lstm_prediction": "256 * x * * 4 + 64 * x * * 3 + 16 * x * * 2 + 4 * x + 1",
    "improved_lstm_prediction": "256 * x * * 4 + 64 * x * * 3 + 16 * x * * 2 + 4 * x + 1",
    "transformer_prediction": "256 * x * * 4 + 64 * x * * 3 + 16 * x * * 2 + 4 * x + 1"
  },
  {
    "function": "3*x**2 + 3*log(x + 1)",
    "true_expansion": "-3*x**4/4 + x**3 + 3*x**2/2 + 3*x",
    "lstm_prediction": "- x * * 4 / 4 + x * * 3 / 2 + 3 * x * * 2 / 2 + 3 * x",
    "improved_lstm_prediction": "- 3 * x * * 4 / 4 + x * * 3 + 5 * x * * 2 / 2 + 3 * x",
    "transformer_prediction": "- 3 * x * * 4 / 4 + x * * 3 + 3 * x * * 2 / 2 + 3 * x"
  },
  {
    "function": "2*cos(x)",
    "true_expansion": "x**4/12 - x**2 + 2",
    "lstm_prediction": "x * * 2 / 2 + 2",
    "improved_lstm_prediction": "x * * 4 / 12 - x * * 2 + 2",
    "transformer_prediction": "2 * x * * 4 / 3 - 2 * x * * 2 + 1"
  },
  {
    "function": "sqrt(5*x + 1)",
    "true_expansion": "-3125*x**4/128 + 125*x**3/16 - 25*x**2/8 + 5*x/2 + 1",
    "lstm_prediction": "* x * * 4 / 128 + x * * 3 / 16 - x * * 2 / 8 + x / 2 + 1",
    "improved_lstm_prediction": "- 3125 * x * * 4 / 128 + 125 * x * * 3 / 16 - 25 * x * * 2 / 8 + 5 * x / 2 + 1",
    "transformer_prediction": "- 25 * x * * 4 / 128 + 5 * x * * 3 / 16 - 5 * x * * 2 / 8 + 5 * x / 2 + 5"
  },
  {
    "function": "cos(x)",
    "true_expansion": "x**4/24 - x**2/2 + 1",
    "lstm_prediction": "x * * 2 / 2 + 1",
    "improved_lstm_prediction": "x * * 4 / 24 - x * * 2 / 2 + 1",
    "transformer_prediction": "x * * 4 / 24 - x * * 2 / 2 + 1"
  },
  {
    "function": "-x**2 + 2*x - 2",
    "true_expansion": "-x**2 + 2*x - 2",
    "lstm_prediction": "2 * x * * 2 + 2 * x - 2",
    "improved_lstm_prediction": "x * * 2 + 2 * x - 2",
    "transformer_prediction": "- 2 * x * * 2 + 2 * x - 2"
  },
  {
    "function": "4*log(x + 1) - 3",
    "true_expansion": "-x**4 + 4*x**3/3 - 2*x**2 + 4*x - 3",
    "lstm_prediction": "- x * * 4 + 4 * x * * 3 / 3 - 2 * x * * 2 + 4 * x - 4",
    "improved_lstm_prediction": "- x * * 4 + 4 * x * * 3 / 3 - 2 * x * * 2 + 4 * x - 3",
    "transformer_prediction": "- 64 * x * * 4 + 64 * x * * 3 / 3 - 8 * x * * 2 + 4 * x - 3"
  },
  {
    "function": "-3*x + sin(x) - 2",
    "true_expansion": "-x**3/6 - 2*x - 2",
    "lstm_prediction": "- x * * 3 / 6 - 2 * x - 2",
    "improved_lstm_prediction": "- x * * 3 / 6 - 2 * x - 2",
    "transformer_prediction": "- x * * 3 / 6 - 2 * x - 3"
  },
  {
    "function": "-3*x + exp(x) - 2",
    "true_expansion": "x**4/24 + x**3/6 + x**2/2 - 2*x - 1",
    "lstm_prediction": "x * * 4 / 24 + x * * 3 / 2 + x * * 2 / 2 - 3 * x - 1",
    "improved_lstm_prediction": "x * * 4 / 24 + x * * 3 / 6 + x * * 2 / 2 - 2 * x - 1",
    "transformer_prediction": "x * * 4 / 24 + x * * 3 / 6 + x * * 2 / 2 - 2 * x + 1"
  },
  {
    "function": "-x**2 - 2*x + sin(x) + 2",
    "true_expansion": "-x**3/6 - x**2 - x + 2",
    "lstm_prediction": "- x * * 3 / 6 - x * * 2 - 2 * x + 2",
    "improved_lstm_prediction": "- x * * 3 / 6 - x * * 2 - x + 2",
    "transformer_prediction": "- x * * 3 / 6 + 2 * x * * 2 + 3 * x - 2"
  },
  {
    "function": "(2*x**2 + 3*x + 1)*atan(x)",
    "true_expansion": "-x**4 + 5*x**3/3 + 3*x**2 + x",
    "lstm_prediction": "- x * * 4 + 2 * x * * 3 / 3 + 3 * x * * 2 + x",
    "improved_lstm_prediction": "- x * * 4 + 2 * x * * 3 / 3 + 3 * x * * 2 + x",
    "transformer_prediction": "- 2 * x * * 4 / 3 + 2 * x * * 3 / 3 + 2 * x * * 2 + 2 * x"
  },
  {
    "function": "(-2*x**3 - 2*x**2 - x - 1)*log(x + 1)",
    "true_expansion": "-13*x**4/12 - 11*x**3/6 - x**2/2 - x",
    "lstm_prediction": "x * * 4 / 2 - 19 * x * * 3 / 6 - 3 * x * * 2 / 2 - x",
    "improved_lstm_prediction": "- 7 * x * * 4 / 4 - 7 * x * * 3 / 6 - x * * 2 - x",
    "transformer_prediction": "- 5 * x * * 4 / 12 + 5 * x * * 3 / 3 - 5 * x * * 2 / 2 - x"
  },
  {
    "function": "cos(x)",
    "true_expansion": "x**4/24 - x**2/2 + 1",
    "lstm_prediction": "x * * 2 / 2 + 1",
    "improved_lstm_prediction": "x * * 4 / 24 - x * * 2 / 2 + 1",
    "transformer_prediction": "x * * 4 / 24 - x * * 2 / 2 + 1"
  },
  {
    "function": "3*cos(x)",
    "true_expansion": "x**4/8 - 3*x**2/2 + 3",
    "lstm_prediction": "x * * 2 / 2 + 3",
    "improved_lstm_prediction": "x * * 4 / 8 + 3 * x * * 2 / 2 + 3",
    "transformer_prediction": "x * * 4 / 8 - 3 * x * * 2 / 2 + 3"
  },
  {
    "function": "5*x",
    "true_expansion": "5*x",
    "lstm_prediction": "5 * x",
    "improved_lstm_prediction": "5 * x * * 3 / 2 + 5 * x",
    "transformer_prediction": "5 * x"
  },
  {
    "function": "3*sin(x)",
    "true_expansion": "-x**3/2 + 3*x",
    "lstm_prediction": "* x * * 3 / 2 + 3 * x",
    "improved_lstm_prediction": "- x * * 3 / 2 + 3 * x",
    "transformer_prediction": "- 9 * x * * 3 / 2 + 3 * x"
  },
  {
    "function": "exp(x)",
    "true_expansion": "x**4/24 + x**3/6 + x**2/2 + x + 1",
    "lstm_prediction": "x * * 4 / 24 + x * * 2 / 2 + x + 1",
    "improved_lstm_prediction": "x * * 4 / 24 + x * * 3 / 6 + x * * 2 + x + 1",
    "transformer_prediction": "x * * 4 / 24 + x * * 3 / 6 + x * * 2 / 2 + x + 1"
  },
  {
    "function": "2*x**2 + 2*x + 1/(1 - 2*x)",
    "true_expansion": "16*x**4 + 8*x**3 + 6*x**2 + 4*x + 1",
    "lstm_prediction": "16 * x * * 4 + 8 * x * * 3 + 7 * x * * 2 + 7 * x + 2",
    "improved_lstm_prediction": "16 * x * * 4 + 8 * x * * 3 + 6 * x * * 2 + 6 * x + 1",
    "transformer_prediction": "16 * x * * 4 + 8 * x * * 3 + 6 * x * * 2 + 5 * x + 2"
  },
  {
    "function": "(x + 3)*cos(x)",
    "true_expansion": "x**4/8 - x**3/2 - 3*x**2/2 + x + 3",
    "lstm_prediction": "x * * 4 / 24 - x * * 3 + x * * 2 / 2 + 3",
    "improved_lstm_prediction": "x * * 4 / 8 + x * * 3 / 2 + x * * 2 / 2 + x + 3",
    "transformer_prediction": "x * * 4 / 8 - 3 * x * * 3 / 2 + 3 * x * * 2 / 2 + 3 * x + 3"
  },
  {
    "function": "tan(3*x)",
    "true_expansion": "9*x**3 + 3*x",
    "lstm_prediction": "9 * x * * 3 + 3 * x",
    "improved_lstm_prediction": "9 * x * * 3 + 3 * x",
    "transformer_prediction": "9 * x * * 3 + 3 * x"
  },
  {
    "function": "sinh(x)",
    "true_expansion": "x**3/6 + x",
    "lstm_prediction": "x * * 3 / 2 + x",
    "improved_lstm_prediction": "x * * 3 / 6 + x",
    "transformer_prediction": "x * * 3 / 6 + x"
  },
  {
    "function": "-2*x + 4*sin(x) + 2",
    "true_expansion": "-2*x**3/3 + 2*x + 2",
    "lstm_prediction": "- 2 * x * * 3 / 3 + 2 * x + 2",
    "improved_lstm_prediction": "- 2 * x * * 3 / 3 + 2 * x + 2",
    "transformer_prediction": "- 32 * x * * 3 / 3 + 6 * x + 2"
  },
  {
    "function": "sqrt(x + 1)",
    "true_expansion": "-5*x**4/128 + x**3/16 - x**2/8 + x/2 + 1",
    "lstm_prediction": "- 5 * x * * 4 / 128 + x * * 3 / 16 - x * * 2 / 8 + x / 2 + 1",
    "improved_lstm_prediction": "- 5 * x * * 4 / 128 + x * * 3 / 16 - x * * 2 / 8 + x / 2 + 1",
    "transformer_prediction": "- 5 * x * * 4 / 128 + x * * 3 / 16 - x * * 2 / 8 + x / 2 + 1"
  },
  {
    "function": "exp(2*x)",
    "true_expansion": "2*x**4/3 + 4*x**3/3 + 2*x**2 + 2*x + 1",
    "lstm_prediction": "2 * x * * 4 / 3 + 4 * x * * 3 / 2 + 2 * x * * 2 + 2 * x + 1",
    "improved_lstm_prediction": "2 * x * * 4 / 3 + 4 * x * * 3 / 3 + 2 * x * * 2 + 2 * x + 1",
    "transformer_prediction": "2 * x * * 4 / 3 + 4 * x * * 3 / 3 + 2 * x * * 2 + 2 * x + 1"
  },
  {
    "function": "-x + cosh(x) + 2",
    "true_expansion": "x**4/24 + x**2/2 - x + 3",
    "lstm_prediction": "x * * 4 / 24 + x * * 2 / 2 - 3 * x + 3",
    "improved_lstm_prediction": "x * * 4 / 24 + x * * 2 / 2 - x + 3",
    "transformer_prediction": "x * * 4 / 24 + x * * 2 / 2 - x + 3"
  },
  {
    "function": "exp(x)",
    "true_expansion": "x**4/24 + x**3/6 + x**2/2 + x + 1",
    "lstm_prediction": "x * * 4 / 24 + x * * 2 / 2 + x + 1",
    "improved_lstm_prediction": "x * * 4 / 24 + x * * 3 / 6 + x * * 2 + x + 1",
    "transformer_prediction": "x * * 4 / 24 + x * * 3 / 6 + x * * 2 / 2 + x + 1"
  },
  {
    "function": "3*exp(x)",
    "true_expansion": "x**4/8 + x**3/2 + 3*x**2/2 + 3*x + 3",
    "lstm_prediction": "x * * 3 / 8 + x * * 2 / 2 + 3 * x + 3",
    "improved_lstm_prediction": "x * * 4 / 8 + x * * 3 / 2 + 3 * x * * 2 / 2 + 3 * x + 3",
    "transformer_prediction": "27 * x * * 4 / 8 + 9 * x * * 3 / 2 + 9 * x * * 2 / 2 + 3 * x + 1"
  },
  {
    "function": "(2*x**2 - 3*x - 1)/(1 - x)",
    "true_expansion": "-2*x**4 - 2*x**3 - 2*x**2 - 4*x - 1",
    "lstm_prediction": "- x * * 4 - x * * 3 - 3 * x * * 2 - 2 * x - 1",
    "improved_lstm_prediction": "- x * * 4 - x * * 3 - x * * 2 - 2 * x - 1",
    "transformer_prediction": "- 3 * x * * 4 - 3 * x * * 3 - 3 * x * * 2 - 3 * x - 2"
  },
  {
    "function": "sinh(3*x) + 2",
    "true_expansion": "9*x**3/2 + 3*x + 2",
    "lstm_prediction": "9 * x * * 2 / 2 + 3",
    "improved_lstm_prediction": "9 * x * * 3 + 2 * x + 2",
    "transformer_prediction": "x * * 3 / 3 + 2 * x + 3"
  },
  {
    "function": "3*sinh(5*x)",
    "true_expansion": "125*x**3/2 + 15*x",
    "lstm_prediction": "25 * x * * 3 / 2 + 3 * x",
    "improved_lstm_prediction": "125 * x * * 3 / 2 + 15 * x",
    "transformer_prediction": "125 * x * * 3 / 2 + 15 * x"
  },
  {
    "function": "4*cosh(x)",
    "true_expansion": "x**4/6 + 2*x**2 + 4",
    "lstm_prediction": "x * * 4 / 6 + 2 * x * * 2 + 4",
    "improved_lstm_prediction": "x * * 4 / 6 + 2 * x * * 2 + 4",
    "transformer_prediction": "x * * 4 / 6 + 2 * x * * 2 + 4"
  },
  {
    "function": "log(x + 1)",
    "true_expansion": "-x**4/4 + x**3/3 - x**2/2 + x",
    "lstm_prediction": "- x * * 4 / 4 + x * * 3 / 3 - x * * 2 / 2 + x",
    "improved_lstm_prediction": "- x * * 4 / 4 + x * * 3 / 3 - x * * 2 / 2 + x",
    "transformer_prediction": "- x * * 4 / 4 + x * * 3 / 3 - x * * 2 / 2 + x"
  },
  {
    "function": "x",
    "true_expansion": "x",
    "lstm_prediction": "x * * 2 / 2 + 1",
    "improved_lstm_prediction": "x * * 3 + x",
    "transformer_prediction": "x"
  },
  {
    "function": "cosh(2*x)",
    "true_expansion": "2*x**4/3 + 2*x**2 + 1",
    "lstm_prediction": "x * * 2 / 2 + 1",
    "improved_lstm_prediction": "2 * x * * 4 / 3 + 2 * x * * 2 + 1",
    "transformer_prediction": "2 * x * * 4 / 3 + 2 * x * * 2 + 1"
  },
  {
    "function": "cos(x)",
    "true_expansion": "x**4/24 - x**2/2 + 1",
    "lstm_prediction": "x * * 2 / 2 + 1",
    "improved_lstm_prediction": "x * * 4 / 24 - x * * 2 / 2 + 1",
    "transformer_prediction": "x * * 4 / 24 - x * * 2 / 2 + 1"
  },
  {
    "function": "(-2*x - 1)*tan(x)",
    "true_expansion": "-2*x**4/3 - x**3/3 - 2*x**2 - x",
    "lstm_prediction": "- 4 * x * * 4 / 3 + 4 * x * * 3 / 3 - x * * 2 - 2 * x",
    "improved_lstm_prediction": "- 2 * x * * 4 / 3 - x * * 3 / 3 - 2 * x * * 2 - x",
    "transformer_prediction": "- 2 * x * * 4 / 3 - 10 * x * * 3 / 3 - 2 * x * * 2 - 2 * x"
  },
  {
    "function": "-3*x**3 - 2*x**2 + 3*x + cos(5*x) + 1",
    "true_expansion": "625*x**4/24 - 3*x**3 - 29*x**2/2 + 3*x + 2",
    "lstm_prediction": "625 * x * * 4 / 24 - x * * 3 - 19 * x * * 2 / 2 + 3 * x + 2",
    "improved_lstm_prediction": "625 * x * * 4 / 24 - 3 * x * * 3 - 13 * x * * 2 / 2 + 3 * x + 2",
    "transformer_prediction": "625 * x * * 4 / 24 + 21 * x * * 3 + 19 * x * * 2 / 2 + 3 * x + 2"
  },
  {
    "function": "(-3*x**2 + x + 3)*log(4*x + 1)",
    "true_expansion": "-440*x**4/3 + 44*x**3 - 20*x**2 + 12*x",
    "lstm_prediction": "- 52 * x * * 4 + 88 * x * * 3 / 3 - 45 * x * * 2 / 2 + 4 * x",
    "improved_lstm_prediction": "- 56 * x * * 4 + 88 * x * * 3 / 3 - 12 * x * * 2 + 12 * x",
    "transformer_prediction": "- 11 * x * * 4 / 6 + 10 * x * * 3 / 3 - 2 * x * * 2 + 4 * x"
  },
  {
    "function": "sqrt(x + 1)",
    "true_expansion": "-5*x**4/128 + x**3/16 - x**2/8 + x/2 + 1",
    "lstm_prediction": "- 5 * x * * 4 / 128 + x * * 3 / 16 - x * * 2 / 8 + x / 2 + 1",
    "improved_lstm_prediction": "- 5 * x * * 4 / 128 + x * * 3 / 16 - x * * 2 / 8 + x / 2 + 1",
    "transformer_prediction": "- 5 * x * * 4 / 128 + x * * 3 / 16 - x * * 2 / 8 + x / 2 + 1"
  },
  {
    "function": "2*x**2 + 4*x - 1",
    "true_expansion": "2*x**2 + 4*x - 1",
    "lstm_prediction": "2 * x * * 2 + 6 * x - 1",
    "improved_lstm_prediction": "2 * x * * 2 + 4 * x - 1",
    "transformer_prediction": "- 2 * x * * 2 + 4 * x + 1"
  },
  {
    "function": "atan(x)",
    "true_expansion": "-x**3/3 + x",
    "lstm_prediction": "* x * * 3 / 3 + x",
    "improved_lstm_prediction": "- x * * 3 / 3 + x",
    "transformer_prediction": "- x * * 3 / 3 + x"
  },
  {
    "function": "log(x + 1)",
    "true_expansion": "-x**4/4 + x**3/3 - x**2/2 + x",
    "lstm_prediction": "- x * * 4 / 4 + x * * 3 / 3 - x * * 2 / 2 + x",
    "improved_lstm_prediction": "- x * * 4 / 4 + x * * 3 / 3 - x * * 2 / 2 + x",
    "transformer_prediction": "- x * * 4 / 4 + x * * 3 / 3 - x * * 2 / 2 + x"
  },
  {
    "function": "x**3 + 2*x**2 + 2*x + atan(x) + 2",
    "true_expansion": "2*x**3/3 + 2*x**2 + 3*x + 2",
    "lstm_prediction": "x * * 3 / 3 + 2 * x * * 2 + 2 * x + 2",
    "improved_lstm_prediction": "4 * x * * 3 / 3 + 2 * x * * 2 + 3 * x + 2",
    "transformer_prediction": "- 2 * x * * 3 / 3 + 2 * x * * 2 + 5 * x + 2"
  },
  {
    "function": "2*exp(x) - 2",
    "true_expansion": "x**4/12 + x**3/3 + x**2 + 2*x",
    "lstm_prediction": "x * * 4 / 12 + x * * 3 / 3 + x * * 2 + 2 * x + 1",
    "improved_lstm_prediction": "x * * 4 / 12 + x * * 3 / 3 + x * * 2 + 2 * x",
    "transformer_prediction": "- 4 * x * * 4 / 3 - 4 * x * * 3 / 3 + 2 * x * * 2 - 2 * x - 1"
  },
  {
    "function": "(-3*x**3 + 3*x + 2)*log(x + 1)",
    "true_expansion": "-5*x**4/2 - 5*x**3/6 + 2*x**2 + 2*x",
    "lstm_prediction": "- 5 * x * * 4 / 2 - 5 * x * * 3 / 6 + 3 * x * * 2 / 2 + x",
    "improved_lstm_prediction": "- 7 * x * * 4 / 2 - 8 * x * * 3 / 3 + 3 * x * * 2 + 2 * x",
    "transformer_prediction": "- 3 * x * * 4 / 4 + x * * 3 - 3 * x * * 2 / 2 + 3 * x"
  },
  {
    "function": "atan(x)",
    "true_expansion": "-x**3/3 + x",
    "lstm_prediction": "* x * * 3 / 3 + x",
    "improved_lstm_prediction": "- x * * 3 / 3 + x",
    "transformer_prediction": "- x * * 3 / 3 + x"
  },
  {
    "function": "log(x + 1)",
    "true_expansion": "-x**4/4 + x**3/3 - x**2/2 + x",
    "lstm_prediction": "- x * * 4 / 4 + x * * 3 / 3 - x * * 2 / 2 + x",
    "improved_lstm_prediction": "- x * * 4 / 4 + x * * 3 / 3 - x * * 2 / 2 + x",
    "transformer_prediction": "- x * * 4 / 4 + x * * 3 / 3 - x * * 2 / 2 + x"
  },
  {
    "function": "-2*x**2 - x + sinh(5*x) - 3",
    "true_expansion": "125*x**3/6 - 2*x**2 + 4*x - 3",
    "lstm_prediction": "125 * x * * 3 / 6 - 2 * x * * 2 + 3 * x - 3",
    "improved_lstm_prediction": "125 * x * * 3 / 6 - 2 * x * * 2 + 4 * x - 3",
    "transformer_prediction": "125 * x * * 3 / 6 - 2 * x * * 2 + 2 * x - 3"
  },
  {
    "function": "2*atan(2*x)",
    "true_expansion": "-16*x**3/3 + 4*x",
    "lstm_prediction": "- 2 * x * * 3 / 3 + 2 * x",
    "improved_lstm_prediction": "- 16 * x * * 3 / 3 + 4 * x",
    "transformer_prediction": "- 2 * x * * 3 / 3 + 2 * x"
  },
  {
    "function": "3/(1 - x)",
    "true_expansion": "3*x**4 + 3*x**3 + 3*x**2 + 3*x + 3",
    "lstm_prediction": "81 * x * * 4 + 27 * x * * 3 + 9 * x * * 2 + 6 * x + 3",
    "improved_lstm_prediction": "3 * x * * 4 + 3 * x * * 3 + 3 * x * * 2 + 3 * x + 3",
    "transformer_prediction": "3 * x * * 4 + 3 * x * * 3 + 3 * x * * 2 + 3 * x + 3"
  },
  {
    "function": "sqrt(x + 1)",
    "true_expansion": "-5*x**4/128 + x**3/16 - x**2/8 + x/2 + 1",
    "lstm_prediction": "- 5 * x * * 4 / 128 + x * * 3 / 16 - x * * 2 / 8 + x / 2 + 1",
    "improved_lstm_prediction": "- 5 * x * * 4 / 128 + x * * 3 / 16 - x * * 2 / 8 + x / 2 + 1",
    "transformer_prediction": "- 5 * x * * 4 / 128 + x * * 3 / 16 - x * * 2 / 8 + x / 2 + 1"
  },
  {
    "function": "x + sin(x) + 3",
    "true_expansion": "-x**3/6 + 2*x + 3",
    "lstm_prediction": "x * * 3 / 6 + 2 * x + 3",
    "improved_lstm_prediction": "- x * * 3 / 6 + 2 * x + 3",
    "transformer_prediction": "- x * * 3 / 6 + 4 * x + 3"
  },
  {
    "function": "sqrt(4*x + 1)",
    "true_expansion": "-10*x**4 + 4*x**3 - 2*x**2 + 2*x + 1",
    "lstm_prediction": "- 10 * x * * 4 + 4 * x * * 2 + 2 * x + 1",
    "improved_lstm_prediction": "- 10 * x * * 4 + 4 * x * * 3 - 2 * x * * 2 + 2 * x + 1",
    "transformer_prediction": "- 5 * x * * 4 / 32 + x * * 3 / 4 - x * * 2 / 2 + 2 * x + 4"
  },
  {
    "function": "-4*x/(1 - x)",
    "true_expansion": "-4*x**4 - 4*x**3 - 4*x**2 - 4*x",
    "lstm_prediction": "- 4 * x * * 4 - 8 * x * * 3 - 4 * x * * 2 - 4 * x",
    "improved_lstm_prediction": "- 4 * x * * 4 - 4 * x * * 3 - 4 * x * * 2 - 4 * x",
    "transformer_prediction": "- 8 * x * * 4 - 64 * x * * 3 - 16 * x * * 2 - 4 * x - 4"
  },
  {
    "function": "-2*atan(x)",
    "true_expansion": "2*x**3/3 - 2*x",
    "lstm_prediction": "2 * x * * 3 / 3 - 2 * x",
    "improved_lstm_prediction": "2 * x * * 3 / 3 - 2 * x",
    "transformer_prediction": "- 2 * x * * 3 / 3 - 2 * x"
  },
  {
    "function": "5*(2*x**2 - 3*x + 4)*exp(x)",
    "true_expansion": "10*x**4/3 + 35*x**3/6 + 5*x**2 + 5*x + 20",
    "lstm_prediction": "15 * x * * 4 / 2 + 46 * x * * 3 / 6 + 20 * x * * 2 + 25 * x + 20",
    "improved_lstm_prediction": "25 * x * * 4 / 6 + 25 * x * * 3 / 6 + 25 * x * * 2 + 15 * x + 20",
    "transformer_prediction": "- 25 * x * * 4 / 6 + 25 * x * * 3 / 6 + 25 * x * * 2 + 20 * x + 20"
  },
  {
    "function": "2*x*(3*x**3 - x**2 - x - 1)",
    "true_expansion": "6*x**4 - 2*x**3 - 2*x**2 - 2*x",
    "lstm_prediction": "2 * x * * 4 - 2 * x * * 3 - 2 * x * * 2",
    "improved_lstm_prediction": "6 * x * * 4 - 4 * x * * 3 - 2 * x * * 2 - 2 * x",
    "transformer_prediction": "- 6 * x * * 4 - 6 * x * * 3 - 6 * x * * 2 - 2 * x"
  },
  {
    "function": "-x**3 + 2*x**2 - x + tan(x) + 3",
    "true_expansion": "-2*x**3/3 + 2*x**2 + 3",
    "lstm_prediction": "5 * x * * 3 / 3 - x * * 2 + x + 3",
    "improved_lstm_prediction": "- 2 * x * * 3 / 3 + 2 * x * * 2 + 3",
    "transformer_prediction": "- 2 * x * * 3 / 3 + 3 * x * * 2 + 4 * x - 3"
  },
  {
    "function": "atan(x) + 3",
    "true_expansion": "-x**3/3 + x + 3",
    "lstm_prediction": "- x * * 3 / 2 + 3",
    "improved_lstm_prediction": "- x * * 3 / 3 + x + 3",
    "transformer_prediction": "- x * * 3 / 3 + x + 3"
  },
  {
    "function": "sinh(3*x)",
    "true_expansion": "9*x**3/2 + 3*x",
    "lstm_prediction": "9 * x * * 2 / 2 + 1",
    "improved_lstm_prediction": "9 * x * * 3 / 2 + 3 * x",
    "transformer_prediction": "9 * x * * 3 / 2 + 3 * x"
  },
  {
    "function": "3*x**2 + 3*x + sin(4*x) - 2",
    "true_expansion": "-32*x**3/3 + 3*x**2 + 7*x - 2",
    "lstm_prediction": "- 32 * x * * 3 / 3 + 3 * x * * 2 + 5 * x - 2",
    "improved_lstm_prediction": "32 * x * * 3 / 3 + 3 * x * * 2 + 7 * x - 2",
    "transformer_prediction": "- 32 * x * * 3 / 3 + 3 * x * * 2 + 5 * x + 3"
  },
  {
    "function": "atan(x)",
    "true_expansion": "-x**3/3 + x",
    "lstm_prediction": "* x * * 3 / 3 + x",
    "improved_lstm_prediction": "- x * * 3 / 3 + x",
    "transformer_prediction": "- x * * 3 / 3 + x"
  },
  {
    "function": "4*sinh(x)",
    "true_expansion": "2*x**3/3 + 4*x",
    "lstm_prediction": "2 * x * * 3 / 3 + 4 * x",
    "improved_lstm_prediction": "2 * x * * 3 / 3 + 4 * x",
    "transformer_prediction": "32 * x * * 3 / 3 + 4 * x"
  },
  {
    "function": "2*x**3 + 2*x**2 - x + sqrt(2*x + 1) - 2",
    "true_expansion": "-5*x**4/8 + 5*x**3/2 + 3*x**2/2 - 1",
    "lstm_prediction": "- 5 * x * * 4 / 8 + 3 * x * * 3 + x * * 2 / 2 - 2 * x + 1",
    "improved_lstm_prediction": "- 5 * x * * 4 / 8 + 3 * x * * 3 / 2 + 3 * x * * 2 / 2 - 3",
    "transformer_prediction": "- 5 * x * * 4 / 64 + x * * 3 / 8 + 3 * x * * 2 / 4 + 3 * x + 2"
  },
  {
    "function": "tan(2*x)",
    "true_expansion": "8*x**3/3 + 2*x",
    "lstm_prediction": "8 * x * * 3 / 3 + 2 * x",
    "improved_lstm_prediction": "8 * x * * 3 / 3 + 2 * x",
    "transformer_prediction": "2 * x * * 3 / 3 + 2 * x"
  },
  {
    "function": "2*x**2 + x + sin(x) + 2",
    "true_expansion": "-x**3/6 + 2*x**2 + 2*x + 2",
    "lstm_prediction": "- x * * 3 / 6 + 2 * x * * 2 + 2 * x + 2",
    "improved_lstm_prediction": "- x * * 3 / 6 + 2 * x * * 2 + 2 * x + 2",
    "transformer_prediction": "- x * * 3 / 6 + 2 * x * * 2 + 3 * x + 2"
  },
  {
    "function": "12*sin(x)",
    "true_expansion": "-2*x**3 + 12*x",
    "lstm_prediction": "32 * x * * 3 + 12 * x",
    "improved_lstm_prediction": "- x * * 3 + 12 * x",
    "transformer_prediction": "- x * * 3 + 12 * x"
  },
  {
    "function": "exp(3*x)",
    "true_expansion": "27*x**4/8 + 9*x**3/2 + 9*x**2/2 + 3*x + 1",
    "lstm_prediction": "27 * x * * 4 / 8 + 9 * x * * 3 / 2 + 9 * x * * 2 / 2 + 3 * x + 1",
    "improved_lstm_prediction": "81 * x * * 4 / 8 + 9 * x * * 3 + 9 * x * * 2 / 2 + 3 * x + 1",
    "transformer_prediction": "27 * x * * 4 / 8 + 9 * x * * 3 / 2 + 9 * x * * 2 / 2 + 3 * x + 1"
  },
  {
    "function": "1/(1 - x)",
    "true_expansion": "x**4 + x**3 + x**2 + x + 1",
    "lstm_prediction": "x * * 4 + x * * 3 + x * * 2 + x + 1",
    "improved_lstm_prediction": "x * * 4 + x * * 3 + x * * 2 + x + 1",
    "transformer_prediction": "x * * 4 + x * * 3 + x * * 2 + x + 1"
  },
  {
    "function": "4*sinh(x)",
    "true_expansion": "2*x**3/3 + 4*x",
    "lstm_prediction": "2 * x * * 3 / 3 + 4 * x",
    "improved_lstm_prediction": "2 * x * * 3 / 3 + 4 * x",
    "transformer_prediction": "32 * x * * 3 / 3 + 4 * x"
  },
  {
    "function": "sin(4*x)",
    "true_expansion": "-32*x**3/3 + 4*x",
    "lstm_prediction": "* * x * * 3 / 3 + 4 * x",
    "improved_lstm_prediction": "32 * 32 * x * * 3 / 3 + 4 * x",
    "transformer_prediction": "- 32 * x * * 3 / 3 + 4 * x"
  },
  {
    "function": "-3*x - 3 + 1/(1 - x)",
    "true_expansion": "x**4 + x**3 + x**2 - 2*x - 2",
    "lstm_prediction": "x * * 4 - x * * 3 - x * * 2 - 2 * x + 2",
    "improved_lstm_prediction": "x * * 4 + x * * 3 + x * * 2 - 2 * x - 2",
    "transformer_prediction": "3 * x * * 4 + 3 * x * * 3 + 3 * x * * 2 + 4 * x + 3"
  },
  {
    "function": "8*tan(x)",
    "true_expansion": "8*x**3/3 + 8*x",
    "lstm_prediction": "8 * x * * 3 / 3 + 8 * x",
    "improved_lstm_prediction": "8 * x * * 3 / 3 + 8 * x",
    "transformer_prediction": "8 * x * * 3 / 3 + 8 * x"
  },
  {
    "function": "log(5*x + 1)",
    "true_expansion": "-625*x**4/4 + 125*x**3/3 - 25*x**2/2 + 5*x",
    "lstm_prediction": "- 625 * x * * 4 / 4 + 125 * x * * 3 / 3 - 25 * x * * 2 / 2 + 5 * x",
    "improved_lstm_prediction": "- 625 * x * * 4 / 4 + 125 * x * * 3 / 3 - 25 * x * * 2 / 2 + 5 * x",
    "transformer_prediction": "- 625 * x * * 4 / 4 + 125 * x * * 3 / 3 - 25 * x * * 2 / 2 + 5 * x"
  },
  {
    "function": "exp(x)",
    "true_expansion": "x**4/24 + x**3/6 + x**2/2 + x + 1",
    "lstm_prediction": "x * * 4 / 24 + x * * 2 / 2 + x + 1",
    "improved_lstm_prediction": "x * * 4 / 24 + x * * 3 / 6 + x * * 2 + x + 1",
    "transformer_prediction": "x * * 4 / 24 + x * * 3 / 6 + x * * 2 / 2 + x + 1"
  },
  {
    "function": "atan(x) - 3",
    "true_expansion": "-x**3/3 + x - 3",
    "lstm_prediction": "- x * * 3 / 3 + x - 3",
    "improved_lstm_prediction": "- x * * 3 / 3 + x - 3",
    "transformer_prediction": "- x * * 3 / 3 + x - 3"
  },
  {
    "function": "atan(5*x)",
    "true_expansion": "-125*x**3/3 + 5*x",
    "lstm_prediction": "* x * * 3 / 3 + 5 * x",
    "improved_lstm_prediction": "- 125 * x * * 3 / 3 + 5 * x",
    "transformer_prediction": "- 125 * x * * 3 / 3 + 5 * x"
  },
  {
    "function": "exp(2*x)",
    "true_expansion": "2*x**4/3 + 4*x**3/3 + 2*x**2 + 2*x + 1",
    "lstm_prediction": "2 * x * * 4 / 3 + 4 * x * * 3 / 2 + 2 * x * * 2 + 2 * x + 1",
    "improved_lstm_prediction": "2 * x * * 4 / 3 + 4 * x * * 3 / 3 + 2 * x * * 2 + 2 * x + 1",
    "transformer_prediction": "2 * x * * 4 / 3 + 4 * x * * 3 / 3 + 2 * x * * 2 + 2 * x + 1"
  },
  {
    "function": "(2*x + 3)*atan(3*x)",
    "true_expansion": "-18*x**4 - 27*x**3 + 6*x**2 + 9*x",
    "lstm_prediction": "- 27 * x * * 4 / 3 + 8 * x * * 3 + 8 * x * * 2 + 12 * x",
    "improved_lstm_prediction": "- 9 * x * * 3 + 9 * x * * 2 + 6 * x",
    "transformer_prediction": "- 2 * x * * 4 + 6 * x * * 3 + 6 * x * * 2 + 6 * x"
  },
  {
    "function": "sqrt(3*x + 1)",
    "true_expansion": "-405*x**4/128 + 27*x**3/16 - 9*x**2/8 + 3*x/2 + 1",
    "lstm_prediction": "- 405 * x * * 4 / 128 + 27 * x * * 3 / 16 - 9 * x * * 2 / 8 + 3 * x / 2 + 1",
    "improved_lstm_prediction": "- 405 * x * * 4 / 128 + 27 * x * * 3 / 16 - 9 * x * * 2 / 8 + 3 * x / 2 + 1",
    "transformer_prediction": "- 15 * x * * 4 / 128 + 3 * x * * 3 / 16 - 3 * x * * 2 / 8 + 3 * x / 2 + 3"
  },
  {
    "function": "2*tan(x) + 3",
    "true_expansion": "2*x**3/3 + 2*x + 3",
    "lstm_prediction": "2 * x * * 3 / 3 + 2 * x + 3",
    "improved_lstm_prediction": "2 * x * * 3 / 3 + 2 * x + 3",
    "transformer_prediction": "2 * x * * 3 / 3 + 2 * x + 3"
  },
  {
    "function": "2*exp(x)",
    "true_expansion": "x**4/12 + x**3/3 + x**2 + 2*x + 2",
    "lstm_prediction": "x * * 4 / 12 + x * * 3 / 2 + 2 * x * * 2 + x + 4",
    "improved_lstm_prediction": "x * * 4 / 12 + x * * 3 / 3 + x * * 2 + 2 * x + 2",
    "transformer_prediction": "2 * x * * 4 / 3 + 4 * x * * 3 / 3 + 2 * x * * 2 + 2 * x + 1"
  },
  {
    "function": "cos(x)",
    "true_expansion": "x**4/24 - x**2/2 + 1",
    "lstm_prediction": "x * * 2 / 2 + 1",
    "improved_lstm_prediction": "x * * 4 / 24 - x * * 2 / 2 + 1",
    "transformer_prediction": "x * * 4 / 24 - x * * 2 / 2 + 1"
  },
  {
    "function": "tan(5*x) + 2",
    "true_expansion": "125*x**3/3 + 5*x + 2",
    "lstm_prediction": "125 * x * * 3 / 3 + 5 * x + 2",
    "improved_lstm_prediction": "125 * x * * 3 / 3 + 5 * x + 2",
    "transformer_prediction": "5 * x * * 3 / 3 + 5 * x + 2"
  },
  {
    "function": "3*cosh(x)",
    "true_expansion": "x**4/8 + 3*x**2/2 + 3",
    "lstm_prediction": "x * * 2 / 2 + 3",
    "improved_lstm_prediction": "x * * 4 / 8 + 3 * x * * 2 / 2 + 3",
    "transformer_prediction": "x * * 4 / 8 + 3 * x * * 2 / 2 + 3"
  },
  {
    "function": "x*(3*x + 1)",
    "true_expansion": "3*x**2 + x",
    "lstm_prediction": "3 * x * * 2 + 3 * x",
    "improved_lstm_prediction": "3 * x * * 3 + x * * 2 + x",
    "transformer_prediction": "3 * x * * 3 + 3 * x * * 2 + 3 * x"
  },
  {
    "function": "-2*x + sin(x) + 2",
    "true_expansion": "-x**3/6 - x + 2",
    "lstm_prediction": "x * * 3 / 6 - 2 * x + 2",
    "improved_lstm_prediction": "- x * * 3 / 6 - x + 2",
    "transformer_prediction": "- x * * 3 / 6 + 3 * x - 2"
  },
  {
    "function": "sin(2*x)",
    "true_expansion": "-4*x**3/3 + 2*x",
    "lstm_prediction": "* x * * 3 / 2 + 3 * x",
    "improved_lstm_prediction": "- 4 * x * * 3 / 3 + 2 * x",
    "transformer_prediction": "- 4 * x * * 3 / 3 + 2 * x"
  },
  {
    "function": "3*x",
    "true_expansion": "3*x",
    "lstm_prediction": "3 * x",
    "improved_lstm_prediction": "3 * x * * 2 + 3 * x",
    "transformer_prediction": "3 * x"
  },
  {
    "function": "exp(x)",
    "true_expansion": "x**4/24 + x**3/6 + x**2/2 + x + 1",
    "lstm_prediction": "x * * 4 / 24 + x * * 2 / 2 + x + 1",
    "improved_lstm_prediction": "x * * 4 / 24 + x * * 3 / 6 + x * * 2 + x + 1",
    "transformer_prediction": "x * * 4 / 24 + x * * 3 / 6 + x * * 2 / 2 + x + 1"
  },
  {
    "function": "cos(x)",
    "true_expansion": "x**4/24 - x**2/2 + 1",
    "lstm_prediction": "x * * 2 / 2 + 1",
    "improved_lstm_prediction": "x * * 4 / 24 - x * * 2 / 2 + 1",
    "transformer_prediction": "x * * 4 / 24 - x * * 2 / 2 + 1"
  },
  {
    "function": "sin(4*x)",
    "true_expansion": "-32*x**3/3 + 4*x",
    "lstm_prediction": "* * x * * 3 / 3 + 4 * x",
    "improved_lstm_prediction": "32 * 32 * x * * 3 / 3 + 4 * x",
    "transformer_prediction": "- 32 * x * * 3 / 3 + 4 * x"
  },
  {
    "function": "cosh(4*x)",
    "true_expansion": "32*x**4/3 + 8*x**2 + 1",
    "lstm_prediction": "32 * x * * 2 / 2 + 4",
    "improved_lstm_prediction": "32 * x * * 4 / 3 + 8 * x * * 2 + 1",
    "transformer_prediction": "x * * 4 / 6 + 2 * x * * 2 + 4"
  },
  {
    "function": "9*atan(x)",
    "true_expansion": "-3*x**3 + 9*x",
    "lstm_prediction": "- 5 * x * * 3 + 15 * x",
    "improved_lstm_prediction": "- 4 * x * * 3 + 3 * x",
    "transformer_prediction": "- 9 * x * * 3 + 12 * x"
  },
  {
    "function": "tan(x)",
    "true_expansion": "x**3/3 + x",
    "lstm_prediction": "x * * 3 / 3 + x",
    "improved_lstm_prediction": "x * * 3 / 3 + x",
    "transformer_prediction": "x * * 3 / 3 + x"
  },
  {
    "function": "x",
    "true_expansion": "x",
    "lstm_prediction": "x * * 2 / 2 + 1",
    "improved_lstm_prediction": "x * * 3 + x",
    "transformer_prediction": "x"
  },
  {
    "function": "x",
    "true_expansion": "x",
    "lstm_prediction": "x * * 2 / 2 + 1",
    "improved_lstm_prediction": "x * * 3 + x",
    "transformer_prediction": "x"
  },
  {
    "function": "sinh(2*x)",
    "true_expansion": "4*x**3/3 + 2*x",
    "lstm_prediction": "4 * x * * 3 / 2 + 2 * x",
    "improved_lstm_prediction": "4 * x * * 3 / 3 + 2 * x",
    "transformer_prediction": "4 * x * * 3 / 3 + 2 * x"
  },
  {
    "function": "sinh(4*x)",
    "true_expansion": "32*x**3/3 + 4*x",
    "lstm_prediction": "32 * x * * 3 / 2 + 4 * x",
    "improved_lstm_prediction": "32 * x * * 3 / 3 + 4 * x",
    "transformer_prediction": "32 * x * * 3 / 3 + 4 * x"
  },
  {
    "function": "-3*x**3 - 3*x**2 + 3*x + atan(x) + 3",
    "true_expansion": "-10*x**3/3 - 3*x**2 + 4*x + 3",
    "lstm_prediction": "- 10 * x * * 3 / 3 - 3 * x * * 2 + 4 * x + 3",
    "improved_lstm_prediction": "- 10 * x * * 3 / 3 - 3 * x * * 2 + 4 * x + 3",
    "transformer_prediction": "- 10 * x * * 3 / 3 + 3 * x * * 2 + 4 * x + 3"
  },
  {
    "function": "sin(x)",
    "true_expansion": "-x**3/6 + x",
    "lstm_prediction": "* x * * 3 / 2 + 5 * x",
    "improved_lstm_prediction": "- x * * 3 / 6 + x",
    "transformer_prediction": "- x * * 3 / 6 + x"
  },
  {
    "function": "1/(1 - x)",
    "true_expansion": "x**4 + x**3 + x**2 + x + 1",
    "lstm_prediction": "x * * 4 + x * * 3 + x * * 2 + x + 1",
    "improved_lstm_prediction": "x * * 4 + x * * 3 + x * * 2 + x + 1",
    "transformer_prediction": "x * * 4 + x * * 3 + x * * 2 + x + 1"
  },
  {
    "function": "tan(2*x)",
    "true_expansion": "8*x**3/3 + 2*x",
    "lstm_prediction": "8 * x * * 3 / 3 + 2 * x",
    "improved_lstm_prediction": "8 * x * * 3 / 3 + 2 * x",
    "transformer_prediction": "2 * x * * 3 / 3 + 2 * x"
  },
  {
    "function": "x + 1 + 3/(1 - x)",
    "true_expansion": "3*x**4 + 3*x**3 + 3*x**2 + 4*x + 4",
    "lstm_prediction": "3 * x * * 4 + 3 * x * * 2 + 4 * x + 4",
    "improved_lstm_prediction": "3 * x * * 4 + 3 * x * * 3 + 3 * x * * 2 + 4 * x + 4",
    "transformer_prediction": "x * * 4 + x * * 3 + x * * 2 + 4 * x + 4"
  },
  {
    "function": "x**2 + atan(4*x) + 3",
    "true_expansion": "-64*x**3/3 + x**2 + 4*x + 3",
    "lstm_prediction": "- 64 * x * * 3 / 3 + x * * 2 + 3 * x + 3",
    "improved_lstm_prediction": "- 64 * x * * 3 / 3 + x * * 2 + 4 * x + 3",
    "transformer_prediction": "- 64 * x * * 3 / 3 + 3 * x * * 2 + 7 * x + 3"
  },
  {
    "function": "1/(1 - 5*x)",
    "true_expansion": "625*x**4 + 125*x**3 + 25*x**2 + 5*x + 1",
    "lstm_prediction": "625 * x * * 4 + 125 * x * * 3 + 25 * x * * 2 + 5 * x + 1",
    "improved_lstm_prediction": "625 * x * * 4 + 125 * x * * 3 + 25 * x * * 2 + 5 * x + 1",
    "transformer_prediction": "625 * x * * 4 + 125 * x * * 3 + 25 * x * * 2 + 5 * x + 1"
  },
  {
    "function": "(-2*x**3 - 2*x**2 + x - 2)*sin(x)",
    "true_expansion": "-13*x**4/6 - 5*x**3/3 + x**2 - 2*x",
    "lstm_prediction": "- 7 * x * * 4 / 3 - 4 * x * * 3 / 3 - 2 * x * * 2 + 2 * x",
    "improved_lstm_prediction": "- 11 * x * * 4 / 3 - 13 * x * * 3 / 3 + x * * 2 - 2 * x",
    "transformer_prediction": "- 5 * x * * 4 / 3 + 5 * x * * 3 / 3 + 2 * x * * 2 + 2 * x"
  },
  {
    "function": "4*cosh(x)",
    "true_expansion": "x**4/6 + 2*x**2 + 4",
    "lstm_prediction": "x * * 4 / 6 + 2 * x * * 2 + 4",
    "improved_lstm_prediction": "x * * 4 / 6 + 2 * x * * 2 + 4",
    "transformer_prediction": "x * * 4 / 6 + 2 * x * * 2 + 4"
  },
  {
    "function": "5*sqrt(x + 1) - 2",
    "true_expansion": "-25*x**4/128 + 5*x**3/16 - 5*x**2/8 + 5*x/2 + 3",
    "lstm_prediction": "- 25 * x * * 4 / 128 + 5 * x * * 3 / 16 - 5 * x * * 2 / 8 + 5 * x / 2 + 4",
    "improved_lstm_prediction": "- 25 * x * * 4 / 128 + 5 * x * * 3 / 16 - 5 * x * * 2 / 8 + 5 * x / 2 + 3",
    "transformer_prediction": "- 25 * x * * 4 / 128 + 5 * x * * 3 / 16 - 5 * x * * 2 / 8 + 5 * x / 2 + 3"
  },
  {
    "function": "5*exp(x) - 3",
    "true_expansion": "5*x**4/24 + 5*x**3/6 + 5*x**2/2 + 5*x + 2",
    "lstm_prediction": "5 * x * * 4 / 24 + 5 * x * * 3 / 6 + 5 * x * * 2 / 2 + 5 * x + 5",
    "improved_lstm_prediction": "5 * x * * 4 / 24 + 5 * x * * 3 / 6 + 5 * x * * 2 / 2 + 5 * x + 2",
    "transformer_prediction": "625 * x * * 4 / 24 + 125 * x * * 3 / 6 + 25 * x * * 2 / 2 + 5 * x - 2"
  },
  {
    "function": "-2*x + exp(3*x) + 2",
    "true_expansion": "27*x**4/8 + 9*x**3/2 + 9*x**2/2 + x + 3",
    "lstm_prediction": "27 * x * * 4 / 8 + 9 * x * * 3 / 2 + 9 * x * * 2 / 2 + x + 3",
    "improved_lstm_prediction": "27 * x * * 4 / 8 + 9 * x * * 3 / 2 + 9 * x * * 2 / 2 + x + 3",
    "transformer_prediction": "x * * 4 / 12 + x * * 3 / 3 + x * * 2 + 4 * x + 5"
  },
  {
    "function": "sinh(x)",
    "true_expansion": "x**3/6 + x",
    "lstm_prediction": "x * * 3 / 2 + x",
    "improved_lstm_prediction": "x * * 3 / 6 + x",
    "transformer_prediction": "x * * 3 / 6 + x"
  },
  {
    "function": "-1 + 1/(1 - 3*x)",
    "true_expansion": "81*x**4 + 27*x**3 + 9*x**2 + 3*x",
    "lstm_prediction": "81 * x * * 4 + 27 * x * * 3 + 9 * x * * 2 + 3 * x",
    "improved_lstm_prediction": "81 * x * * 4 + 27 * x * * 3 + 9 * x * * 2 + 3 * x",
    "transformer_prediction": "81 * x * * 4 + 27 * x * * 3 + 9 * x * * 2 + 3 * x - 2"
  },
  {
    "function": "2*tan(x)",
    "true_expansion": "2*x**3/3 + 2*x",
    "lstm_prediction": "2 * x * * 3 / 2 + 2 * x",
    "improved_lstm_prediction": "2 * x * * 3 / 3 + 2 * x",
    "transformer_prediction": "2 * x * * 3 / 3 + 2 * x"
  },
  {
    "function": "3*atan(x) + 2",
    "true_expansion": "-x**3 + 3*x + 2",
    "lstm_prediction": "- x * * 3 / 2 + 3 * x + 2",
    "improved_lstm_prediction": "- x * * 3 + 3 * x + 2",
    "transformer_prediction": "- 2 * x * * 3 / 3 + 2 * x + 3"
  },
  {
    "function": "3*cos(x)",
    "true_expansion": "x**4/8 - 3*x**2/2 + 3",
    "lstm_prediction": "x * * 2 / 2 + 3",
    "improved_lstm_prediction": "x * * 4 / 8 + 3 * x * * 2 / 2 + 3",
    "transformer_prediction": "x * * 4 / 8 - 3 * x * * 2 / 2 + 3"
  },
  {
    "function": "sin(x)",
    "true_expansion": "-x**3/6 + x",
    "lstm_prediction": "* x * * 3 / 2 + 5 * x",
    "improved_lstm_prediction": "- x * * 3 / 6 + x",
    "transformer_prediction": "- x * * 3 / 6 + x"
  },
  {
    "function": "sinh(2*x)",
    "true_expansion": "4*x**3/3 + 2*x",
    "lstm_prediction": "4 * x * * 3 / 2 + 2 * x",
    "improved_lstm_prediction": "4 * x * * 3 / 3 + 2 * x",
    "transformer_prediction": "4 * x * * 3 / 3 + 2 * x"
  },
  {
    "function": "5*exp(x)",
    "true_expansion": "5*x**4/24 + 5*x**3/6 + 5*x**2/2 + 5*x + 5",
    "lstm_prediction": "5 * x * * 4 / 24 + 5 * x * * 3 / 6 + 5 * x * * 2 / 2 + 5 * x + 5",
    "improved_lstm_prediction": "5 * x * * 4 / 24 + 5 * x * * 3 / 6 + 5 * x * * 2 / 2 + 5 * x + 5",
    "transformer_prediction": "625 * x * * 4 / 24 + 125 * x * * 3 / 6 + 25 * x * * 2 / 2 + 5 * x + 1"
  },
  {
    "function": "3*x + atan(2*x) + 1",
    "true_expansion": "-8*x**3/3 + 5*x + 1",
    "lstm_prediction": "- 8 * x * * 3 / 3 + 4 * x + 1",
    "improved_lstm_prediction": "- 8 * x * * 3 / 3 + 5 * x + 1",
    "transformer_prediction": "- 2 * x * * 3 / 3 + 5 * x + 1"
  },
  {
    "function": "tan(x)",
    "true_expansion": "x**3/3 + x",
    "lstm_prediction": "x * * 3 / 3 + x",
    "improved_lstm_prediction": "x * * 3 / 3 + x",
    "transformer_prediction": "x * * 3 / 3 + x"
  },
  {
    "function": "sin(4*x) - 2",
    "true_expansion": "-32*x**3/3 + 4*x - 2",
    "lstm_prediction": "32 * x * * 3 / 3 + 4 * x - 2",
    "improved_lstm_prediction": "32 * 32 * x * * 3 / 3 + 4 * x - 2",
    "transformer_prediction": "- 32 * x * * 3 / 3 + 4 * x - 2"
  },
  {
    "function": "x",
    "true_expansion": "x",
    "lstm_prediction": "x * * 2 / 2 + 1",
    "improved_lstm_prediction": "x * * 3 + x",
    "transformer_prediction": "x"
  },
  {
    "function": "tan(x)",
    "true_expansion": "x**3/3 + x",
    "lstm_prediction": "x * * 3 / 3 + x",
    "improved_lstm_prediction": "x * * 3 / 3 + x",
    "transformer_prediction": "x * * 3 / 3 + x"
  },
  {
    "function": "cos(x)",
    "true_expansion": "x**4/24 - x**2/2 + 1",
    "lstm_prediction": "x * * 2 / 2 + 1",
    "improved_lstm_prediction": "x * * 4 / 24 - x * * 2 / 2 + 1",
    "transformer_prediction": "x * * 4 / 24 - x * * 2 / 2 + 1"
  },
  {
    "function": "cos(x)",
    "true_expansion": "x**4/24 - x**2/2 + 1",
    "lstm_prediction": "x * * 2 / 2 + 1",
    "improved_lstm_prediction": "x * * 4 / 24 - x * * 2 / 2 + 1",
    "transformer_prediction": "x * * 4 / 24 - x * * 2 / 2 + 1"
  },
  {
    "function": "5*tan(x)",
    "true_expansion": "5*x**3/3 + 5*x",
    "lstm_prediction": "5 * x * * 3 / 3 + 5 * x",
    "improved_lstm_prediction": "5 * x * * 3 / 3 + 5 * x",
    "transformer_prediction": "5 * x * * 3 / 3 + 5 * x"
  },
  {
    "function": "log(x + 1)",
    "true_expansion": "-x**4/4 + x**3/3 - x**2/2 + x",
    "lstm_prediction": "- x * * 4 / 4 + x * * 3 / 3 - x * * 2 / 2 + x",
    "improved_lstm_prediction": "- x * * 4 / 4 + x * * 3 / 3 - x * * 2 / 2 + x",
    "transformer_prediction": "- x * * 4 / 4 + x * * 3 / 3 - x * * 2 / 2 + x"
  },
  {
    "function": "5*exp(x)",
    "true_expansion": "5*x**4/24 + 5*x**3/6 + 5*x**2/2 + 5*x + 5",
    "lstm_prediction": "5 * x * * 4 / 24 + 5 * x * * 3 / 6 + 5 * x * * 2 / 2 + 5 * x + 5",
    "improved_lstm_prediction": "5 * x * * 4 / 24 + 5 * x * * 3 / 6 + 5 * x * * 2 / 2 + 5 * x + 5",
    "transformer_prediction": "625 * x * * 4 / 24 + 125 * x * * 3 / 6 + 25 * x * * 2 / 2 + 5 * x + 1"
  },
  {
    "function": "-x**2 + 2*x + 4*tan(x) + 1",
    "true_expansion": "4*x**3/3 - x**2 + 6*x + 1",
    "lstm_prediction": "4 * x * * 3 / 3 - x * * 2 + 6 * x + 1",
    "improved_lstm_prediction": "4 * x * * 3 / 3 - x * * 2 + 6 * x + 1",
    "transformer_prediction": "64 * x * * 3 / 3 + 2 * x * * 2 + 5 * x + 1"
  },
  {
    "function": "-3*x*cosh(4*x)",
    "true_expansion": "-24*x**3 - 3*x",
    "lstm_prediction": "- 64 * x * * 4 - 6 * x * * 2",
    "improved_lstm_prediction": "- 24 * x * * 4 - 8 * x * * 2 - 3 * x",
    "transformer_prediction": "- x * * 4 / 3 - 3 * x * * 3 - 2 * x * * 2 - 4"
  },
  {
    "function": "sinh(3*x)",
    "true_expansion": "9*x**3/2 + 3*x",
    "lstm_prediction": "9 * x * * 2 / 2 + 1",
    "improved_lstm_prediction": "9 * x * * 3 / 2 + 3 * x",
    "transformer_prediction": "9 * x * * 3 / 2 + 3 * x"
  },
  {
    "function": "sqrt(x + 1)",
    "true_expansion": "-5*x**4/128 + x**3/16 - x**2/8 + x/2 + 1",
    "lstm_prediction": "- 5 * x * * 4 / 128 + x * * 3 / 16 - x * * 2 / 8 + x / 2 + 1",
    "improved_lstm_prediction": "- 5 * x * * 4 / 128 + x * * 3 / 16 - x * * 2 / 8 + x / 2 + 1",
    "transformer_prediction": "- 5 * x * * 4 / 128 + x * * 3 / 16 - x * * 2 / 8 + x / 2 + 1"
  },
  {
    "function": "3*x + cosh(x) + 3",
    "true_expansion": "x**4/24 + x**2/2 + 3*x + 4",
    "lstm_prediction": "x * * 4 / 24 + x * * 2 / 2 + 4 * x + 3",
    "improved_lstm_prediction": "x * * 4 / 24 + x * * 2 / 2 + 3 * x + 4",
    "transformer_prediction": "x * * 4 / 24 + x * * 2 / 2 + 4"
  },
  {
    "function": "4*(2*x**3 + 2*x**2 - x)*cos(x)",
    "true_expansion": "-4*x**4 + 10*x**3 + 8*x**2 - 4*x",
    "lstm_prediction": "14 * x * * 4 / 3 + 4 * x * * 3 - 4 * x * * 2 - 4 * x",
    "improved_lstm_prediction": "32 * x * * 4 / 3 + 8 * x * * 3 + 8 * x * * 2 - 4 * x",
    "transformer_prediction": "- 11 * x * * 4 / 6 + x * * 3 + 2 * x * * 2 + 8 * x + 4"
  },
  {
    "function": "-3*x + 3*cosh(x)",
    "true_expansion": "x**4/8 + 3*x**2/2 - 3*x + 3",
    "lstm_prediction": "x * * 4 / 8 + 3 * x * * 2 / 2 - 3 * x + 4",
    "improved_lstm_prediction": "x * * 4 / 8 + 3 * x * * 2 / 2 - 3 * x + 3",
    "transformer_prediction": "x * * 4 / 8 + 3 * x * * 2 / 2 - 3 * x + 3"
  },
  {
    "function": "x + cos(x) - 3",
    "true_expansion": "x**4/24 - x**2/2 + x - 2",
    "lstm_prediction": "x * * 4 / 24 + x * * 2 / 2 - 2 * x + 3",
    "improved_lstm_prediction": "x * * 4 / 24 - x * * 2 / 2 + x - 2",
    "transformer_prediction": "x * * 4 / 24 - x * * 2 / 2 - 3 * x + 4"
  },
  {
    "function": "sqrt(x + 1)",
    "true_expansion": "-5*x**4/128 + x**3/16 - x**2/8 + x/2 + 1",
    "lstm_prediction": "- 5 * x * * 4 / 128 + x * * 3 / 16 - x * * 2 / 8 + x / 2 + 1",
    "improved_lstm_prediction": "- 5 * x * * 4 / 128 + x * * 3 / 16 - x * * 2 / 8 + x / 2 + 1",
    "transformer_prediction": "- 5 * x * * 4 / 128 + x * * 3 / 16 - x * * 2 / 8 + x / 2 + 1"
  },
  {
    "function": "-x + 3*cosh(x) - 3",
    "true_expansion": "x**4/8 + 3*x**2/2 - x",
    "lstm_prediction": "x * * 4 / 8 + 3 * x * * 2 / 2 - 3 * x",
    "improved_lstm_prediction": "x * * 4 / 8 + 3 * x * * 2 / 2 - x + 2",
    "transformer_prediction": "x * * 4 / 24 + x * * 2 / 2 - 3 * x + 4"
  },
  {
    "function": "5*exp(x) + 2",
    "true_expansion": "5*x**4/24 + 5*x**3/6 + 5*x**2/2 + 5*x + 7",
    "lstm_prediction": "5 * x * * 4 / 24 + 5 * x * * 3 / 6 + 5 * x * * 2 / 2 + 5 * x + 5",
    "improved_lstm_prediction": "5 * x * * 4 / 24 + 5 * x * * 3 / 6 + 5 * x * * 2 / 2 + 5 * x + 7",
    "transformer_prediction": "625 * x * * 4 / 24 + 125 * x * * 3 / 6 + 25 * x * * 2 / 2 + 5 * x + 3"
  },
  {
    "function": "sin(x)",
    "true_expansion": "-x**3/6 + x",
    "lstm_prediction": "* x * * 3 / 2 + 5 * x",
    "improved_lstm_prediction": "- x * * 3 / 6 + x",
    "transformer_prediction": "- x * * 3 / 6 + x"
  },
  {
    "function": "(-2*x - 2)*cos(x)",
    "true_expansion": "-x**4/12 + x**3 + x**2 - 2*x - 2",
    "lstm_prediction": "x * * 4 / 12 - x * * 3 - 3 * x * * 2 - 2 * x - 2",
    "improved_lstm_prediction": "- x * * 4 / 12 - x * * 3 - x * * 2 - 2 * x - 2",
    "transformer_prediction": "- x * * 4 / 12 + x * * 3 - x * * 2 - 2 * x - 2"
  },
  {
    "function": "log(x + 1)",
    "true_expansion": "-x**4/4 + x**3/3 - x**2/2 + x",
    "lstm_prediction": "- x * * 4 / 4 + x * * 3 / 3 - x * * 2 / 2 + x",
    "improved_lstm_prediction": "- x * * 4 / 4 + x * * 3 / 3 - x * * 2 / 2 + x",
    "transformer_prediction": "- x * * 4 / 4 + x * * 3 / 3 - x * * 2 / 2 + x"
  },
  {
    "function": "(x**2 - x + 4)*atan(5*x)",
    "true_expansion": "125*x**4/3 - 485*x**3/3 - 5*x**2 + 20*x",
    "lstm_prediction": "- 100 * x * * 4 / 3 + 44 * x * * 3 / 3 + 4 * x * * 2 + 8 * x",
    "improved_lstm_prediction": "- 100 * x * * 4 / 3 + 985 * x * * 3 / 3 - 45 * x * * 2 + 20 * x",
    "transformer_prediction": "- 40 * x * * 4 / 3 + 40 * x * * 3 / 3 + 10 * x * * 2 + 20 * x"
  },
  {
    "function": "2*x",
    "true_expansion": "2*x",
    "lstm_prediction": "2 * x",
    "improved_lstm_prediction": "2 * x * * 2 + 2 * x",
    "transformer_prediction": "2 * x"
  },
  {
    "function": "sqrt(x + 1)",
    "true_expansion": "-5*x**4/128 + x**3/16 - x**2/8 + x/2 + 1",
    "lstm_prediction": "- 5 * x * * 4 / 128 + x * * 3 / 16 - x * * 2 / 8 + x / 2 + 1",
    "improved_lstm_prediction": "- 5 * x * * 4 / 128 + x * * 3 / 16 - x * * 2 / 8 + x / 2 + 1",
    "transformer_prediction": "- 5 * x * * 4 / 128 + x * * 3 / 16 - x * * 2 / 8 + x / 2 + 1"
  },
  {
    "function": "tan(5*x)",
    "true_expansion": "125*x**3/3 + 5*x",
    "lstm_prediction": "125 * x * * 3 / 3 + 5 * x",
    "improved_lstm_prediction": "125 * x * * 3 / 3 + 5 * x",
    "transformer_prediction": "5 * x * * 3 / 3 + 5 * x"
  },
  {
    "function": "x**2 - x + 3*log(x + 1) + 1",
    "true_expansion": "-3*x**4/4 + x**3 - x**2/2 + 2*x + 1",
    "lstm_prediction": "- x * * 4 / 4 + x * * 3 + 5 * x * * 2 / 2 + 2 * x + 1",
    "improved_lstm_prediction": "- 3 * x * * 4 / 4 + x * * 3 + 5 * x * * 2 / 2 + 2 * x + 1",
    "transformer_prediction": "- x * * 4 / 4 + x * * 3 / 3 + 5 * x * * 2 / 2 + 4 * x + 1"
  },
  {
    "function": "2*x + 5*exp(x) + 3",
    "true_expansion": "5*x**4/24 + 5*x**3/6 + 5*x**2/2 + 7*x + 8",
    "lstm_prediction": "5 * x * * 4 / 24 + 5 * x * * 3 / 6 + 5 * x * * 2 / 2 + 6 * x + 6",
    "improved_lstm_prediction": "5 * x * * 4 / 24 + 5 * x * * 3 / 6 + 5 * x * * 2 / 2 + 7 * x + 8",
    "transformer_prediction": "625 * x * * 4 / 24 + 125 * x * * 3 / 6 + 25 * x * * 2 / 2 + 8 * x + 3"
  },
  {
    "function": "3*x",
    "true_expansion": "3*x",
    "lstm_prediction": "3 * x",
    "improved_lstm_prediction": "3 * x * * 2 + 3 * x",
    "transformer_prediction": "3 * x"
  },
  {
    "function": "cosh(x)",
    "true_expansion": "x**4/24 + x**2/2 + 1",
    "lstm_prediction": "x * * 2 / 2 + 1",
    "improved_lstm_prediction": "x * * 4 / 24 + x * * 2 / 2 + 1",
    "transformer_prediction": "x * * 4 / 24 + x * * 2 / 2 + 1"
  },
  {
    "function": "exp(x)",
    "true_expansion": "x**4/24 + x**3/6 + x**2/2 + x + 1",
    "lstm_prediction": "x * * 4 / 24 + x * * 2 / 2 + x + 1",
    "improved_lstm_prediction": "x * * 4 / 24 + x * * 3 / 6 + x * * 2 + x + 1",
    "transformer_prediction": "x * * 4 / 24 + x * * 3 / 6 + x * * 2 / 2 + x + 1"
  },
  {
    "function": "5*sqrt(x + 1)",
    "true_expansion": "-25*x**4/128 + 5*x**3/16 - 5*x**2/8 + 5*x/2 + 5",
    "lstm_prediction": "- 25 * x * * 4 / 128 + 5 * x * * 3 / 16 - 5 * x * * 2 / 8 + 5 * x / 2 + 5",
    "improved_lstm_prediction": "- 25 * x * * 4 / 128 + 5 * x * * 3 / 16 - 5 * x * * 2 / 8 + 5 * x / 2 + 3",
    "transformer_prediction": "- 25 * x * * 4 / 128 + 5 * x * * 3 / 16 - 5 * x * * 2 / 8 + 5 * x / 2 + 5"
  },
  {
    "function": "sqrt(x + 1)",
    "true_expansion": "-5*x**4/128 + x**3/16 - x**2/8 + x/2 + 1",
    "lstm_prediction": "- 5 * x * * 4 / 128 + x * * 3 / 16 - x * * 2 / 8 + x / 2 + 1",
    "improved_lstm_prediction": "- 5 * x * * 4 / 128 + x * * 3 / 16 - x * * 2 / 8 + x / 2 + 1",
    "transformer_prediction": "- 5 * x * * 4 / 128 + x * * 3 / 16 - x * * 2 / 8 + x / 2 + 1"
  },
  {
    "function": "3*x**2 - 3*x + tan(x) - 3",
    "true_expansion": "x**3/3 + 3*x**2 - 2*x - 3",
    "lstm_prediction": "x * * 3 / 3 + 3 * x * * 2 - 3",
    "improved_lstm_prediction": "4 * x * * 3 / 3 + 3 * x * * 2 - 2 * x - 3",
    "transformer_prediction": "- 2 * x * * 3 / 3 + 3 * x * * 2 + 4 * x - 3"
  },
  {
    "function": "x",
    "true_expansion": "x",
    "lstm_prediction": "x * * 2 / 2 + 1",
    "improved_lstm_prediction": "x * * 3 + x",
    "transformer_prediction": "x"
  },
  {
    "function": "(2*x + 1)*cosh(2*x)",
    "true_expansion": "2*x**4/3 + 4*x**3 + 2*x**2 + 2*x + 1",
    "lstm_prediction": "2 * x * * 4 / 3 + 4 * x * * 3 + 2 * x * * 2 + x + 1",
    "improved_lstm_prediction": "2 * x * * 4 / 3 + 8 * x * * 3 + 8 * x * * 2 + 2 * x + 1",
    "transformer_prediction": "x * * 4 / 12 + x * * 2 + 2"
  },
  {
    "function": "(x**2 - x + 4)*tan(5*x)",
    "true_expansion": "-125*x**4/3 + 515*x**3/3 - 5*x**2 + 20*x",
    "lstm_prediction": "125 * x * * 4 / 3 + 461 * x * * 3 / 3 + 10 * x * * 2 + 20 * x",
    "improved_lstm_prediction": "200 * x * * 4 / 3 + 985 * x * * 3 / 3 + 45 * x * * 2 + 20 * x",
    "transformer_prediction": "- 40 * x * * 4 / 3 + 40 * x * * 3 / 3 + 10 * x * * 2 + 20 * x"
  },
  {
    "function": "atan(x)",
    "true_expansion": "-x**3/3 + x",
    "lstm_prediction": "* x * * 3 / 3 + x",
    "improved_lstm_prediction": "- x * * 3 / 3 + x",
    "transformer_prediction": "- x * * 3 / 3 + x"
  },
  {
    "function": "cos(x)",
    "true_expansion": "x**4/24 - x**2/2 + 1",
    "lstm_prediction": "x * * 2 / 2 + 1",
    "improved_lstm_prediction": "x * * 4 / 24 - x * * 2 / 2 + 1",
    "transformer_prediction": "x * * 4 / 24 - x * * 2 / 2 + 1"
  },
  {
    "function": "x",
    "true_expansion": "x",
    "lstm_prediction": "x * * 2 / 2 + 1",
    "improved_lstm_prediction": "x * * 3 + x",
    "transformer_prediction": "x"
  },
  {
    "function": "exp(4*x)",
    "true_expansion": "32*x**4/3 + 32*x**3/3 + 8*x**2 + 4*x + 1",
    "lstm_prediction": "32 * x * * 4 / 3 + 32 * x * * 3 / 3 + 8 * x * * 2 / 2 + 4 * x + 1",
    "improved_lstm_prediction": "32 * x * * 4 + 3 * x * * 3 + 3 * x * * 2 + 4 * x + 1",
    "transformer_prediction": "32 * x * * 4 / 3 + 32 * x * * 3 / 3 + 8 * x * * 2 + 4 * x + 1"
  },
  {
    "function": "-2*x + log(x + 1) + 2",
    "true_expansion": "-x**4/4 + x**3/3 - x**2/2 - x + 2",
    "lstm_prediction": "- x * * 4 / 4 + x * * 3 / 3 - x * * 2 / 2 - x + 2",
    "improved_lstm_prediction": "- x * * 4 / 4 + x * * 3 / 3 - x * * 2 / 2 - x + 2",
    "transformer_prediction": "- x * * 4 / 4 + x * * 3 / 3 - x * * 2 / 2 + 3 * x + 2"
  },
  {
    "function": "5/(1 - x)",
    "true_expansion": "5*x**4 + 5*x**3 + 5*x**2 + 5*x + 5",
    "lstm_prediction": "5 * x * * 4 + 5 * x * * 3 + 5 * x * * 2 + 5 * x + 5",
    "improved_lstm_prediction": "5 * x * * 4 + 5 * x * * 3 + 5 * x * * 2 + 5 * x + 5",
    "transformer_prediction": "5 * x * * 4 + 5 * x * * 3 + 5 * x * * 2 + 5 * x + 5"
  },
  {
    "function": "-3*x**3 - 3*x**2 - 2*x + sqrt(x + 1)",
    "true_expansion": "-5*x**4/128 - 47*x**3/16 - 25*x**2/8 - 3*x/2 + 1",
    "lstm_prediction": "- 5 * x * * 4 / 128 - 15 * x * * 3 / 16 - 17 * x * * 2 / 8 - x / 2 + 1",
    "improved_lstm_prediction": "- 5 * x * * 4 / 128 - 45 * x * * 3 / 16 - 25 * x * * 2 / 8 - 3 * x / 2 + 1",
    "transformer_prediction": "- 15 * x * * 4 / 128 + 3 * x * * 3 / 16 - 3 * x * * 2 / 8 - 3 * x / 2 + 1"
  },
  {
    "function": "2*cosh(x) - 3",
    "true_expansion": "x**4/12 + x**2 - 1",
    "lstm_prediction": "x * * 4 / 12 + x * * 2 - 2",
    "improved_lstm_prediction": "x * * 4 / 12 + x * * 2 + 1",
    "transformer_prediction": "x * * 4 / 12 + 3 * x * * 2 - 2"
  },
  {
    "function": "sqrt(x + 1)",
    "true_expansion": "-5*x**4/128 + x**3/16 - x**2/8 + x/2 + 1",
    "lstm_prediction": "- 5 * x * * 4 / 128 + x * * 3 / 16 - x * * 2 / 8 + x / 2 + 1",
    "improved_lstm_prediction": "- 5 * x * * 4 / 128 + x * * 3 / 16 - x * * 2 / 8 + x / 2 + 1",
    "transformer_prediction": "- 5 * x * * 4 / 128 + x * * 3 / 16 - x * * 2 / 8 + x / 2 + 1"
  },
  {
    "function": "1/(1 - 5*x)",
    "true_expansion": "625*x**4 + 125*x**3 + 25*x**2 + 5*x + 1",
    "lstm_prediction": "625 * x * * 4 + 125 * x * * 3 + 25 * x * * 2 + 5 * x + 1",
    "improved_lstm_prediction": "625 * x * * 4 + 125 * x * * 3 + 25 * x * * 2 + 5 * x + 1",
    "transformer_prediction": "625 * x * * 4 + 125 * x * * 3 + 25 * x * * 2 + 5 * x + 1"
  },
  {
    "function": "-2*x + sin(x) - 2",
    "true_expansion": "-x**3/6 - x - 2",
    "lstm_prediction": "x * * 3 / 6 - 2 * x - 2",
    "improved_lstm_prediction": "- x * * 3 / 6 - x - 2",
    "transformer_prediction": "- x * * 3 / 6 - x - 2"
  },
  {
    "function": "(3*x - 1)/(1 - 4*x)",
    "true_expansion": "-64*x**4 - 16*x**3 - 4*x**2 - x - 1",
    "lstm_prediction": "256 * x * * 4 + 208 * x * * 3 + 12 * x * * 2 + 3 * x",
    "improved_lstm_prediction": "832 * x * * 4 + 208 * x * * 3 + 52 * x * * 2 + 3 * x + 1",
    "transformer_prediction": "- 8 * x * * 4 - 8 * x * * 3 - 8 * x * * 2 - 8 * x + 4"
  },
  {
    "function": "-3*x**2 - 3*x + 3/(1 - x)",
    "true_expansion": "3*x**4 + 3*x**3 + 3",
    "lstm_prediction": "3 * x * * 4 + 3 * x * * 3 + x * * 2 + 3",
    "improved_lstm_prediction": "3 * x * * 4 + 3 * x * * 3 + 3",
    "transformer_prediction": "81 * x * * 4 + 27 * x * * 3 + 9 * x * * 2 + 2 * x - 2"
  },
  {
    "function": "3*log(2*x + 1)",
    "true_expansion": "-12*x**4 + 8*x**3 - 6*x**2 + 6*x",
    "lstm_prediction": "- 12 * x * * 4 + 8 * x * * 3 - 6 * x * * 2 + 6 * x",
    "improved_lstm_prediction": "- 4 * x * * 4 + 8 * x * * 3 - 6 * x * * 2 + 6 * x",
    "transformer_prediction": "- 3 * x * * 4 / 4 + x * * 3 - 3 * x * * 2 / 2 + 6 * x"
  },
  {
    "function": "x",
    "true_expansion": "x",
    "lstm_prediction": "x * * 2 / 2 + 1",
    "improved_lstm_prediction": "x * * 3 + x",
    "transformer_prediction": "x"
  },
  {
    "function": "(-x**2 - 3*x + 3)*cos(x)",
    "true_expansion": "5*x**4/8 + 3*x**3/2 - 5*x**2/2 - 3*x + 3",
    "lstm_prediction": "- 3 * x * * 4 / 8 - x * * 3 - 3 * x * * 2 / 2 + 3",
    "improved_lstm_prediction": "5 * x * * 4 / 8 - 5 * x * * 3 / 2 - 5 * x * * 2 / 2 - 3 * x + 3",
    "transformer_prediction": "- 3 * x * * 4 / 8 + 3 * x * * 3 / 2 + 3 * x * * 2 / 2 + 3 * x - 3"
  },
  {
    "function": "-2*x**2 - 2*x + sinh(x) + 3",
    "true_expansion": "x**3/6 - 2*x**2 - x + 3",
    "lstm_prediction": "x * * 3 / 6 - 2 * x * * 2 - x + 3",
    "improved_lstm_prediction": "- x * * 3 / 3 - 2 * x * * 2 - x + 3",
    "transformer_prediction": "x * * 3 / 3 - 2 * x * * 2 + 2 * x + 2"
  },
  {
    "function": "2*exp(x)",
    "true_expansion": "x**4/12 + x**3/3 + x**2 + 2*x + 2",
    "lstm_prediction": "x * * 4 / 12 + x * * 3 / 2 + 2 * x * * 2 + x + 4",
    "improved_lstm_prediction": "x * * 4 / 12 + x * * 3 / 3 + x * * 2 + 2 * x + 2",
    "transformer_prediction": "2 * x * * 4 / 3 + 4 * x * * 3 / 3 + 2 * x * * 2 + 2 * x + 1"
  },
  {
    "function": "2*cosh(x)",
    "true_expansion": "x**4/12 + x**2 + 2",
    "lstm_prediction": "x * * 4 / 8 + 3 * x * * 2 / 2 + 3",
    "improved_lstm_prediction": "x * * 4 / 12 + x * * 2 + 2",
    "transformer_prediction": "2 * x * * 4 / 3 + 2 * x * * 2 + 1"
  },
  {
    "function": "-2*x**2 + tan(2*x) + 3",
    "true_expansion": "8*x**3/3 - 2*x**2 + 2*x + 3",
    "lstm_prediction": "8 * x * * 3 / 3 - 2 * x * * 2 + 3 * x + 3",
    "improved_lstm_prediction": "8 * x * * 3 / 3 - 2 * x * * 2 + 2 * x + 3",
    "transformer_prediction": "2 * x * * 3 / 3 + 2 * x * * 2 + 5 * x - 2"
  },
  {
    "function": "atan(4*x)",
    "true_expansion": "-64*x**3/3 + 4*x",
    "lstm_prediction": "- 64 * x * * 3 / 3 + 4 * x",
    "improved_lstm_prediction": "- 64 * x * * 3 / 3 + 4 * x",
    "transformer_prediction": "- 4 * x * * 3 / 3 + 4 * x"
  },
  {
    "function": "cos(x)",
    "true_expansion": "x**4/24 - x**2/2 + 1",
    "lstm_prediction": "x * * 2 / 2 + 1",
    "improved_lstm_prediction": "x * * 4 / 24 - x * * 2 / 2 + 1",
    "transformer_prediction": "x * * 4 / 24 - x * * 2 / 2 + 1"
  },
  {
    "function": "(-2*x**2 + x + 4)*exp(x)",
    "true_expansion": "-2*x**4/3 - 5*x**3/6 + x**2 + 5*x + 4",
    "lstm_prediction": "- 2 * x * * 4 / 3 - x * * 3 / 3 + 4 * x * * 2 + 4 * x + 4",
    "improved_lstm_prediction": "- 5 * x * * 4 / 3 - x * * 3 / 3 + 3 * x * * 2 + 5 * x + 4",
    "transformer_prediction": "- 11 * x * * 4 / 6 + 13 * x * * 3 / 3 + 5 * x * * 2 + 4 * x + 4"
  },
  {
    "function": "tan(x)",
    "true_expansion": "x**3/3 + x",
    "lstm_prediction": "x * * 3 / 3 + x",
    "improved_lstm_prediction": "x * * 3 / 3 + x",
    "transformer_prediction": "x * * 3 / 3 + x"
  },
  {
    "function": "5*(2*x - 1)*tan(x)",
    "true_expansion": "10*x**4/3 - 5*x**3/3 + 10*x**2 - 5*x",
    "lstm_prediction": "5 * x * * 4 / 3 - 35 * x * * 3 / 3 + 5 * x * * 2 - 8 * x",
    "improved_lstm_prediction": "5 * x * * 4 / 3 + 10 * x * * 3 / 3 + 5 * x * * 2 - 5 * x",
    "transformer_prediction": "- 125 * x * * 4 / 3 + 40 * x * * 3 / 3 - 10 * x * * 2 + 10 * x"
  },
  {
    "function": "sqrt(x + 1)*(2*x**2 - 3*x + 3)",
    "true_expansion": "-71*x**4/128 + 25*x**3/16 + x**2/8 - 3*x/2 + 3",
    "lstm_prediction": "- 119 * x * * 4 / 128 + 17 * x * * 3 / 16 - 17 * x * * 2 / 8 + 5 * x / 2 + 3",
    "improved_lstm_prediction": "- 119 * x * * 4 / 128 + 19 * x * * 3 / 16 + 19 * x * * 2 / 8 - 3 * x / 2 + 3",
    "transformer_prediction": "- 15 * x * * 4 / 128 + 3 * x * * 3 / 16 + 3 * x * * 2 / 8 + 3 * x / 2 + 3"
  },
  {
    "function": "4*cosh(x)",
    "true_expansion": "x**4/6 + 2*x**2 + 4",
    "lstm_prediction": "x * * 4 / 6 + 2 * x * * 2 + 4",
    "improved_lstm_prediction": "x * * 4 / 6 + 2 * x * * 2 + 4",
    "transformer_prediction": "x * * 4 / 6 + 2 * x * * 2 + 4"
  },
  {
    "function": "-3*x**2 + 3*x + sinh(x)",
    "true_expansion": "x**3/6 - 3*x**2 + 4*x",
    "lstm_prediction": "x * * 3 / 6 - 3 * x * * 2 + 4 * x",
    "improved_lstm_prediction": "x * * 3 / 6 - 3 * x * * 2 + 4 * x",
    "transformer_prediction": "- 17 * x * * 3 / 6 + 3 * x * * 2 + 4 * x"
  },
  {
    "function": "5*log(x + 1)",
    "true_expansion": "-5*x**4/4 + 5*x**3/3 - 5*x**2/2 + 5*x",
    "lstm_prediction": "- 5 * x * * 4 / 4 + 5 * x * * 3 / 3 - 5 * x * * 2 / 2 + 5 * x",
    "improved_lstm_prediction": "- 5 * x * * 4 / 4 + 5 * x * * 3 / 3 - 5 * x * * 2 / 2 + 5 * x",
    "transformer_prediction": "- 625 * x * * 4 / 4 + 125 * x * * 3 / 3 - 25 * x * * 2 / 2 + 5 * x"
  },
  {
    "function": "1/(1 - 3*x)",
    "true_expansion": "81*x**4 + 27*x**3 + 9*x**2 + 3*x + 1",
    "lstm_prediction": "81 * x * * 4 + 27 * x * * 3 + 9 * x * * 2 + 3 * x + 1",
    "improved_lstm_prediction": "81 * x * * 4 + 27 * x * * 3 + 9 * x * * 2 + 3 * x + 1",
    "transformer_prediction": "81 * x * * 4 + 27 * x * * 3 + 9 * x * * 2 + 3 * x + 1"
  },
  {
    "function": "4*x*sin(x)",
    "true_expansion": "-2*x**4/3 + 4*x**2",
    "lstm_prediction": "2 * x * * 3 / 2 + 6 * x",
    "improved_lstm_prediction": "4 * x * * 4 / 3 + 4 * x * * 2",
    "transformer_prediction": "32 * x * * 4 / 3 + 8 * x * * 2"
  },
  {
    "function": "-x + atan(3*x) - 3",
    "true_expansion": "-9*x**3 + 2*x - 3",
    "lstm_prediction": "- 9 * x * * 3 - 3 * x - 3",
    "improved_lstm_prediction": "- 9 * x * * 3 + 2 * x - 3",
    "transformer_prediction": "- x * * 3 / 3 - 2 * x - 3"
  },
  {
    "function": "-3*x + 5*exp(x) + 1",
    "true_expansion": "5*x**4/24 + 5*x**3/6 + 5*x**2/2 + 2*x + 6",
    "lstm_prediction": "5 * x * * 4 / 24 + 5 * x * * 3 / 6 + 5 * x * * 2 / 2 + 6 * x + 2",
    "improved_lstm_prediction": "5 * x * * 4 / 24 + 5 * x * * 3 / 6 + 5 * x * * 2 / 2 + 2 * x + 6",
    "transformer_prediction": "625 * x * * 4 / 24 + 125 * x * * 3 / 6 + 25 * x * * 2 / 2 + 2 * x + 2"
  },
  {
    "function": "exp(x)",
    "true_expansion": "x**4/24 + x**3/6 + x**2/2 + x + 1",
    "lstm_prediction": "x * * 4 / 24 + x * * 2 / 2 + x + 1",
    "improved_lstm_prediction": "x * * 4 / 24 + x * * 3 / 6 + x * * 2 + x + 1",
    "transformer_prediction": "x * * 4 / 24 + x * * 3 / 6 + x * * 2 / 2 + x + 1"
  },
  {
    "function": "exp(2*x)",
    "true_expansion": "2*x**4/3 + 4*x**3/3 + 2*x**2 + 2*x + 1",
    "lstm_prediction": "2 * x * * 4 / 3 + 4 * x * * 3 / 2 + 2 * x * * 2 + 2 * x + 1",
    "improved_lstm_prediction": "2 * x * * 4 / 3 + 4 * x * * 3 / 3 + 2 * x * * 2 + 2 * x + 1",
    "transformer_prediction": "2 * x * * 4 / 3 + 4 * x * * 3 / 3 + 2 * x * * 2 + 2 * x + 1"
  },
  {
    "function": "-x + exp(x)",
    "true_expansion": "x**4/24 + x**3/6 + x**2/2 + 1",
    "lstm_prediction": "x * * 4 / 24 + x * * 3 / 2 + x * * 2 / 2 + x",
    "improved_lstm_prediction": "x * * 4 / 24 + x * * 3 / 6 + x * * 2 / 2 + 1",
    "transformer_prediction": "x * * 4 / 24 + x * * 3 / 6 + x * * 2 / 2 - 2 * x + 2"
  },
  {
    "function": "tan(x)",
    "true_expansion": "x**3/3 + x",
    "lstm_prediction": "x * * 3 / 3 + x",
    "improved_lstm_prediction": "x * * 3 / 3 + x",
    "transformer_prediction": "x * * 3 / 3 + x"
  },
  {
    "function": "4/(1 - x)",
    "true_expansion": "4*x**4 + 4*x**3 + 4*x**2 + 4*x + 4",
    "lstm_prediction": "4 * x * * 4 + 4 * x * * 3 + 4 * x * * 2 + 4 * x + 4",
    "improved_lstm_prediction": "4 * x * * 4 + 4 * x * * 3 + 4 * x * * 2 + 4 * x + 4",
    "transformer_prediction": "4 * x * * 4 + 4 * x * * 3 + 4 * x * * 2 + 4 * x + 4"
  },
  {
    "function": "-3*x + sqrt(x + 1) + 1",
    "true_expansion": "-5*x**4/128 + x**3/16 - x**2/8 - 5*x/2 + 2",
    "lstm_prediction": "- 5 * x * * 4 / 128 + x * * 3 / 16 - x * * 2 / 8 - 5 * x / 2 + 2",
    "improved_lstm_prediction": "- 5 * x * * 4 / 128 + x * * 3 / 16 - x * * 2 / 8 - 5 * x / 2 + 2",
    "transformer_prediction": "- 5 * x * * 4 / 128 + x * * 3 / 16 - x * * 2 / 8 - 3 * x / 2 + 4"
  },
  {
    "function": "5*atan(x)",
    "true_expansion": "-5*x**3/3 + 5*x",
    "lstm_prediction": "5 * x * * 3 / 3 + 5 * x",
    "improved_lstm_prediction": "5 * x * * 3 / 3 + 5 * x",
    "transformer_prediction": "- 125 * x * * 3 / 3 + 5 * x"
  },
  {
    "function": "5*atan(x)",
    "true_expansion": "-5*x**3/3 + 5*x",
    "lstm_prediction": "5 * x * * 3 / 3 + 5 * x",
    "improved_lstm_prediction": "5 * x * * 3 / 3 + 5 * x",
    "transformer_prediction": "- 125 * x * * 3 / 3 + 5 * x"
  },
  {
    "function": "3*cos(x)",
    "true_expansion": "x**4/8 - 3*x**2/2 + 3",
    "lstm_prediction": "x * * 2 / 2 + 3",
    "improved_lstm_prediction": "x * * 4 / 8 + 3 * x * * 2 / 2 + 3",
    "transformer_prediction": "x * * 4 / 8 - 3 * x * * 2 / 2 + 3"
  },
  {
    "function": "tan(5*x)",
    "true_expansion": "125*x**3/3 + 5*x",
    "lstm_prediction": "125 * x * * 3 / 3 + 5 * x",
    "improved_lstm_prediction": "125 * x * * 3 / 3 + 5 * x",
    "transformer_prediction": "5 * x * * 3 / 3 + 5 * x"
  },
  {
    "function": "-2 + 5/(1 - x)",
    "true_expansion": "5*x**4 + 5*x**3 + 5*x**2 + 5*x + 3",
    "lstm_prediction": "5 * x * * 4 + 5 * x * * 3 + 5 * x + 5",
    "improved_lstm_prediction": "5 * x * * 4 + 5 * x * * 3 + 5 * x * * 2 + 5 * x + 3",
    "transformer_prediction": "5 * x * * 4 + 5 * x * * 3 + 5 * x * * 2 + 5 * x + 3"
  },
  {
    "function": "4*exp(x)",
    "true_expansion": "x**4/6 + 2*x**3/3 + 2*x**2 + 4*x + 4",
    "lstm_prediction": "x * * 4 / 6 + 2 * x * * 3 / 3 + 2 * x * * 2 + 4 * x + 4",
    "improved_lstm_prediction": "x * * 4 / 6 + 2 * x * * 3 / 3 + 2 * x * * 2 + 4 * x + 4",
    "transformer_prediction": "32 * x * * 4 / 3 + 32 * x * * 3 / 3 + 8 * x * * 2 + 4 * x + 1"
  },
  {
    "function": "3*cosh(x)",
    "true_expansion": "x**4/8 + 3*x**2/2 + 3",
    "lstm_prediction": "x * * 2 / 2 + 3",
    "improved_lstm_prediction": "x * * 4 / 8 + 3 * x * * 2 / 2 + 3",
    "transformer_prediction": "x * * 4 / 8 + 3 * x * * 2 / 2 + 3"
  },
  {
    "function": "-cosh(x)",
    "true_expansion": "-x**4/24 - x**2/2 - 1",
    "lstm_prediction": "- x * * 3 / 6 - x * * 2 - 2",
    "improved_lstm_prediction": "- x * * 4 / 24 - x * * 2 / 2 - 1",
    "transformer_prediction": "- x * * 4 / 24 - x * * 2 / 2 - 1"
  },
  {
    "function": "cos(5*x)",
    "true_expansion": "625*x**4/24 - 25*x**2/2 + 1",
    "lstm_prediction": "* x * * 2 / 2 + 1",
    "improved_lstm_prediction": "625 * x * * 4 / 24 - 25 * x * * 2 / 2 + 1",
    "transformer_prediction": "5 * x * * 4 / 24 - 5 * x * * 2 / 2 + 5"
  },
  {
    "function": "5*atan(x)",
    "true_expansion": "-5*x**3/3 + 5*x",
    "lstm_prediction": "5 * x * * 3 / 3 + 5 * x",
    "improved_lstm_prediction": "5 * x * * 3 / 3 + 5 * x",
    "transformer_prediction": "- 125 * x * * 3 / 3 + 5 * x"
  },
  {
    "function": "sinh(3*x)",
    "true_expansion": "9*x**3/2 + 3*x",
    "lstm_prediction": "9 * x * * 2 / 2 + 1",
    "improved_lstm_prediction": "9 * x * * 3 / 2 + 3 * x",
    "transformer_prediction": "9 * x * * 3 / 2 + 3 * x"
  },
  {
    "function": "3*exp(x)",
    "true_expansion": "x**4/8 + x**3/2 + 3*x**2/2 + 3*x + 3",
    "lstm_prediction": "x * * 3 / 8 + x * * 2 / 2 + 3 * x + 3",
    "improved_lstm_prediction": "x * * 4 / 8 + x * * 3 / 2 + 3 * x * * 2 / 2 + 3 * x + 3",
    "transformer_prediction": "27 * x * * 4 / 8 + 9 * x * * 3 / 2 + 9 * x * * 2 / 2 + 3 * x + 1"
  },
  {
    "function": "tan(2*x)",
    "true_expansion": "8*x**3/3 + 2*x",
    "lstm_prediction": "8 * x * * 3 / 3 + 2 * x",
    "improved_lstm_prediction": "8 * x * * 3 / 3 + 2 * x",
    "transformer_prediction": "2 * x * * 3 / 3 + 2 * x"
  },
  {
    "function": "3*x*(-3*x**2 - x - 2)",
    "true_expansion": "-9*x**3 - 3*x**2 - 6*x",
    "lstm_prediction": "- 3 * x * * 4 - 3 * x * * 2 - 2 * x",
    "improved_lstm_prediction": "- 9 * x * * 3 - 3 * x * * 2 - 3 * x",
    "transformer_prediction": "- 6 * x * * 4 - 6 * x * * 3 - 6 * x * * 2 - 6 * x"
  },
  {
    "function": "-2*x**2 + 3*x + log(x + 1)",
    "true_expansion": "-x**4/4 + x**3/3 - 5*x**2/2 + 4*x",
    "lstm_prediction": "- x * * 4 / 4 + x * * 3 / 3 - 7 * x * * 2 / 2 + 4 * x",
    "improved_lstm_prediction": "- x * * 4 / 4 + x * * 3 / 3 - 5 * x * * 2 / 2 + 4 * x",
    "transformer_prediction": "- x * * 4 / 4 + x * * 3 / 3 + 5 * x * * 2 / 2 + 4 * x + 3"
  },
  {
    "function": "atan(x)",
    "true_expansion": "-x**3/3 + x",
    "lstm_prediction": "* x * * 3 / 3 + x",
    "improved_lstm_prediction": "- x * * 3 / 3 + x",
    "transformer_prediction": "- x * * 3 / 3 + x"
  },
  {
    "function": "3*x**2 + 2*x + sqrt(5*x + 1) - 3",
    "true_expansion": "-3125*x**4/128 + 125*x**3/16 - x**2/8 + 9*x/2 - 2",
    "lstm_prediction": "- 3125 * x * * 4 / 128 + 125 * x * * 3 / 16 - 9 * x * * 2 / 8 + 3 * x / 2 + 2",
    "improved_lstm_prediction": "- 3125 * x * * 4 / 128 + 125 * x * * 3 / 16 - 49 * x * * 2 / 8 + 9 * x / 2 - 2",
    "transformer_prediction": "- 25 * x * * 4 / 128 + 5 * x * * 3 / 16 - x * * 2 / 8 + 9 * x / 2 + 8"
  },
  {
    "function": "(3*x**2 - 2*x + 3)*atan(2*x)",
    "true_expansion": "16*x**4/3 - 2*x**3 - 4*x**2 + 6*x",
    "lstm_prediction": "- 16 * x * * 4 / 3 + 8 * x * * 3 + 2 * x * * 2 + 6 * x",
    "improved_lstm_prediction": "26 * x * * 4 / 3 + 8 * x * * 3 - 2 * x * * 2 + 6 * x",
    "transformer_prediction": "- 2 * x * * 4 + 2 * x * * 3 + 6 * x * * 2 + 6 * x"
  },
  {
    "function": "atan(x)",
    "true_expansion": "-x**3/3 + x",
    "lstm_prediction": "* x * * 3 / 3 + x",
    "improved_lstm_prediction": "- x * * 3 / 3 + x",
    "transformer_prediction": "- x * * 3 / 3 + x"
  },
  {
    "function": "5*cos(x)",
    "true_expansion": "5*x**4/24 - 5*x**2/2 + 5",
    "lstm_prediction": "5 * x * * 3 / 8 + 5 * x / 2 + 5",
    "improved_lstm_prediction": "5 * x * * 4 / 24 + 5 * x * * 2 / 2 + 5",
    "transformer_prediction": "5 * x * * 4 / 24 - 5 * x * * 2 / 2 + 5"
  },
  {
    "function": "5*sqrt(x + 1) - 1",
    "true_expansion": "-25*x**4/128 + 5*x**3/16 - 5*x**2/8 + 5*x/2 + 4",
    "lstm_prediction": "- 25 * x * * 4 / 128 + 5 * x * * 3 / 16 - 5 * x * * 2 / 8 + 5 * x / 2 + 2",
    "improved_lstm_prediction": "- 25 * x * * 4 / 128 + 5 * x * * 3 / 16 - 5 * x * * 2 / 8 + 5 * x / 2 + 4",
    "transformer_prediction": "- 25 * x * * 4 / 128 + 5 * x * * 3 / 16 - 5 * x * * 2 / 8 - 5 * x / 2 - 5"
  },
  {
    "function": "log(x + 1)",
    "true_expansion": "-x**4/4 + x**3/3 - x**2/2 + x",
    "lstm_prediction": "- x * * 4 / 4 + x * * 3 / 3 - x * * 2 / 2 + x",
    "improved_lstm_prediction": "- x * * 4 / 4 + x * * 3 / 3 - x * * 2 / 2 + x",
    "transformer_prediction": "- x * * 4 / 4 + x * * 3 / 3 - x * * 2 / 2 + x"
  },
  {
    "function": "2*log(3*x + 1)",
    "true_expansion": "-81*x**4/2 + 18*x**3 - 9*x**2 + 6*x",
    "lstm_prediction": "- 81 * x * * 4 / 2 + 18 * x * * 3 - 9 * x * * 2 / 2 + 3 * x",
    "improved_lstm_prediction": "- 81 * x * * 4 + 18 * x * * 3 - 18 * x * * 2 + 6 * x",
    "transformer_prediction": "- 3 * x * * 4 / 4 + x * * 3 - 3 * x * * 2 / 2 + 6 * x"
  },
  {
    "function": "3*x",
    "true_expansion": "3*x",
    "lstm_prediction": "3 * x",
    "improved_lstm_prediction": "3 * x * * 2 + 3 * x",
    "transformer_prediction": "3 * x"
  },
  {
    "function": "3*cosh(x) + 3",
    "true_expansion": "x**4/8 + 3*x**2/2 + 6",
    "lstm_prediction": "x * * 4 / 8 + 3 * x * * 2 / 2 + 6",
    "improved_lstm_prediction": "x * * 4 / 8 + 3 * x * * 2 / 2 + 6",
    "transformer_prediction": "27 * x * * 4 / 8 + 9 * x * * 2 / 2 + 4"
  },
  {
    "function": "3*cosh(x)",
    "true_expansion": "x**4/8 + 3*x**2/2 + 3",
    "lstm_prediction": "x * * 2 / 2 + 3",
    "improved_lstm_prediction": "x * * 4 / 8 + 3 * x * * 2 / 2 + 3",
    "transformer_prediction": "x * * 4 / 8 + 3 * x * * 2 / 2 + 3"
  },
  {
    "function": "tan(x)",
    "true_expansion": "x**3/3 + x",
    "lstm_prediction": "x * * 3 / 3 + x",
    "improved_lstm_prediction": "x * * 3 / 3 + x",
    "transformer_prediction": "x * * 3 / 3 + x"
  },
  {
    "function": "-x**3 - x + sinh(4*x) + 1",
    "true_expansion": "29*x**3/3 + 3*x + 1",
    "lstm_prediction": "32 * x * * 3 / 3 + x + 1",
    "improved_lstm_prediction": "32 * x * * 3 / 3 + 3 * x + 1",
    "transformer_prediction": "32 * x * * 3 / 3 + x - 1"
  },
  {
    "function": "cosh(x)",
    "true_expansion": "x**4/24 + x**2/2 + 1",
    "lstm_prediction": "x * * 2 / 2 + 1",
    "improved_lstm_prediction": "x * * 4 / 24 + x * * 2 / 2 + 1",
    "transformer_prediction": "x * * 4 / 24 + x * * 2 / 2 + 1"
  },
  {
    "function": "tan(2*x)",
    "true_expansion": "8*x**3/3 + 2*x",
    "lstm_prediction": "8 * x * * 3 / 3 + 2 * x",
    "improved_lstm_prediction": "8 * x * * 3 / 3 + 2 * x",
    "transformer_prediction": "2 * x * * 3 / 3 + 2 * x"
  },
  {
    "function": "cos(x)",
    "true_expansion": "x**4/24 - x**2/2 + 1",
    "lstm_prediction": "x * * 2 / 2 + 1",
    "improved_lstm_prediction": "x * * 4 / 24 - x * * 2 / 2 + 1",
    "transformer_prediction": "x * * 4 / 24 - x * * 2 / 2 + 1"
  },
  {
    "function": "tan(x) - 3",
    "true_expansion": "x**3/3 + x - 3",
    "lstm_prediction": "x * * 3 / 3 + x - 1",
    "improved_lstm_prediction": "x * * 3 / 3 + x - 3",
    "transformer_prediction": "x * * 3 / 3 + x - 3"
  },
  {
    "function": "2*(-3*x**3 + 3*x**2 - x + 4)*tan(x)",
    "true_expansion": "-20*x**4/3 + 26*x**3/3 - 2*x**2 + 8*x",
    "lstm_prediction": "- 16 * x * * 4 / 3 + 14 * x * * 3 / 3 + 4 * x * * 2 + 8 * x",
    "improved_lstm_prediction": "- 10 * x * * 4 / 3 + 13 * x * * 3 / 3 - 2 * x * * 2 + 8 * x",
    "transformer_prediction": "- 40 * x * * 4 / 3 + 40 * x * * 3 / 3 + 8 * x * * 2 + 4 * x"
  },
  {
    "function": "tan(x)",
    "true_expansion": "x**3/3 + x",
    "lstm_prediction": "x * * 3 / 3 + x",
    "improved_lstm_prediction": "x * * 3 / 3 + x",
    "transformer_prediction": "x * * 3 / 3 + x"
  },
  {
    "function": "4*log(x + 1)",
    "true_expansion": "-x**4 + 4*x**3/3 - 2*x**2 + 4*x",
    "lstm_prediction": "- x * * 4 + 4 * x * * 3 / 3 - 2 * x * * 2 + 4 * x",
    "improved_lstm_prediction": "- x * * 4 + 4 * x * * 3 / 3 + 2 * x * * 2 + 4 * x",
    "transformer_prediction": "- 64 * x * * 4 + 64 * x * * 3 / 3 - 8 * x * * 2 + 4 * x"
  },
  {
    "function": "2*x + cosh(5*x)",
    "true_expansion": "625*x**4/24 + 25*x**2/2 + 2*x + 1",
    "lstm_prediction": "625 * x * * 4 / 24 + 25 * x * * 2 / 2 + 3 * x + 1",
    "improved_lstm_prediction": "625 * x * * 4 / 24 + 25 * x * * 2 / 2 + 2 * x + 1",
    "transformer_prediction": "625 * x * * 4 / 24 + 25 * x * * 2 / 2 + 2 * x + 2"
  },
  {
    "function": "sinh(4*x)",
    "true_expansion": "32*x**3/3 + 4*x",
    "lstm_prediction": "32 * x * * 3 / 2 + 4 * x",
    "improved_lstm_prediction": "32 * x * * 3 / 3 + 4 * x",
    "transformer_prediction": "32 * x * * 3 / 3 + 4 * x"
  },
  {
    "function": "-2*x**2 + x + atan(2*x) + 1",
    "true_expansion": "-8*x**3/3 - 2*x**2 + 3*x + 1",
    "lstm_prediction": "- 8 * x * * 3 / 3 - 2 * x * * 2 + 4 * x + 1",
    "improved_lstm_prediction": "- 8 * x * * 3 / 3 - 2 * x * * 2 + 3 * x + 1",
    "transformer_prediction": "- x * * 3 / 3 + 2 * x * * 2 + 3 * x + 1"
  },
  {
    "function": "2*sinh(x)",
    "true_expansion": "x**3/3 + 2*x",
    "lstm_prediction": "x * * 3 / 3 + 2 * x",
    "improved_lstm_prediction": "x * * 3 / 3 + 2 * x",
    "transformer_prediction": "4 * x * * 3 / 3 + 2 * x"
  },
  {
    "function": "sqrt(x + 1)",
    "true_expansion": "-5*x**4/128 + x**3/16 - x**2/8 + x/2 + 1",
    "lstm_prediction": "- 5 * x * * 4 / 128 + x * * 3 / 16 - x * * 2 / 8 + x / 2 + 1",
    "improved_lstm_prediction": "- 5 * x * * 4 / 128 + x * * 3 / 16 - x * * 2 / 8 + x / 2 + 1",
    "transformer_prediction": "- 5 * x * * 4 / 128 + x * * 3 / 16 - x * * 2 / 8 + x / 2 + 1"
  },
  {
    "function": "-x**2 + 2*x - 2 + 1/(1 - 3*x)",
    "true_expansion": "81*x**4 + 27*x**3 + 8*x**2 + 5*x - 1",
    "lstm_prediction": "81 * x * * 4 + 27 * x * * 3 + 11 * x * * 2 + 3 * x + 3",
    "improved_lstm_prediction": "81 * x * * 4 + 27 * x * * 3 + 8 * x * * 2 + 5 * x - 1",
    "transformer_prediction": "81 * x * * 4 + 27 * x * * 3 + 11 * x * * 2 + 3 * x + 3"
  },
  {
    "function": "1/(1 - x)",
    "true_expansion": "x**4 + x**3 + x**2 + x + 1",
    "lstm_prediction": "x * * 4 + x * * 3 + x * * 2 + x + 1",
    "improved_lstm_prediction": "x * * 4 + x * * 3 + x * * 2 + x + 1",
    "transformer_prediction": "x * * 4 + x * * 3 + x * * 2 + x + 1"
  },
  {
    "function": "sin(5*x)",
    "true_expansion": "-125*x**3/6 + 5*x",
    "lstm_prediction": "* x * * 3 / 2 + 5 * x",
    "improved_lstm_prediction": "- 125 * x * * 3 / 6 + 5 * x",
    "transformer_prediction": "- 125 * x * * 3 / 6 + 5 * x"
  },
  {
    "function": "x**3 + x**2 + x + cos(x) - 2",
    "true_expansion": "x**4/24 + x**3 + x**2/2 + x - 1",
    "lstm_prediction": "x * * 4 / 24 + x * * 3 + 7 * x * * 2 / 2 + 1",
    "improved_lstm_prediction": "x * * 4 / 24 + x * * 3 + x * * 2 / 2 + x - 1",
    "transformer_prediction": "x * * 4 / 24 + 3 * x * * 3 + 5 * x * * 2 / 2 + 3 * x + 3"
  },
  {
    "function": "tan(2*x)",
    "true_expansion": "8*x**3/3 + 2*x",
    "lstm_prediction": "8 * x * * 3 / 3 + 2 * x",
    "improved_lstm_prediction": "8 * x * * 3 / 3 + 2 * x",
    "transformer_prediction": "2 * x * * 3 / 3 + 2 * x"
  },
  {
    "function": "atan(x)",
    "true_expansion": "-x**3/3 + x",
    "lstm_prediction": "* x * * 3 / 3 + x",
    "improved_lstm_prediction": "- x * * 3 / 3 + x",
    "transformer_prediction": "- x * * 3 / 3 + x"
  },
  {
    "function": "sin(x)",
    "true_expansion": "-x**3/6 + x",
    "lstm_prediction": "* x * * 3 / 2 + 5 * x",
    "improved_lstm_prediction": "- x * * 3 / 6 + x",
    "transformer_prediction": "- x * * 3 / 6 + x"
  },
  {
    "function": "cosh(2*x)",
    "true_expansion": "2*x**4/3 + 2*x**2 + 1",
    "lstm_prediction": "x * * 2 / 2 + 1",
    "improved_lstm_prediction": "2 * x * * 4 / 3 + 2 * x * * 2 + 1",
    "transformer_prediction": "2 * x * * 4 / 3 + 2 * x * * 2 + 1"
  },
  {
    "function": "5*exp(x) + 3",
    "true_expansion": "5*x**4/24 + 5*x**3/6 + 5*x**2/2 + 5*x + 8",
    "lstm_prediction": "5 * x * * 4 / 24 + 5 * x * * 3 / 6 + 5 * x * * 2 / 2 + 5 * x + 8",
    "improved_lstm_prediction": "5 * x * * 4 / 24 + 5 * x * * 3 / 6 + 5 * x * * 2 / 2 + 5 * x + 8",
    "transformer_prediction": "625 * x * * 4 / 24 + 125 * x * * 3 / 6 + 25 * x * * 2 / 2 + 5 * x + 4"
  },
  {
    "function": "5*sqrt(x + 1)",
    "true_expansion": "-25*x**4/128 + 5*x**3/16 - 5*x**2/8 + 5*x/2 + 5",
    "lstm_prediction": "- 25 * x * * 4 / 128 + 5 * x * * 3 / 16 - 5 * x * * 2 / 8 + 5 * x / 2 + 5",
    "improved_lstm_prediction": "- 25 * x * * 4 / 128 + 5 * x * * 3 / 16 - 5 * x * * 2 / 8 + 5 * x / 2 + 3",
    "transformer_prediction": "- 25 * x * * 4 / 128 + 5 * x * * 3 / 16 - 5 * x * * 2 / 8 + 5 * x / 2 + 5"
  },
  {
    "function": "-3*x + sqrt(4*x + 1) + 2",
    "true_expansion": "-10*x**4 + 4*x**3 - 2*x**2 - x + 3",
    "lstm_prediction": "- 405 * x * * 4 / 128 + 9 * x * * 3 / 16 - 9 * x * * 2 / 8 + 3 * x / 2 + 3",
    "improved_lstm_prediction": "- 10 * x * * 4 + 4 * x * * 3 - 2 * x * * 2 - x + 3",
    "transformer_prediction": "- 5 * x * * 4 / 32 + x * * 3 / 4 - x * * 2 / 2 + x + 5"
  },
  {
    "function": "tan(x) - 2",
    "true_expansion": "x**3/3 + x - 2",
    "lstm_prediction": "x * * 3 / 3 + x - 2",
    "improved_lstm_prediction": "x * * 3 / 3 + x - 2",
    "transformer_prediction": "x * * 3 / 3 + x - 2"
  },
  {
    "function": "exp(x)",
    "true_expansion": "x**4/24 + x**3/6 + x**2/2 + x + 1",
    "lstm_prediction": "x * * 4 / 24 + x * * 2 / 2 + x + 1",
    "improved_lstm_prediction": "x * * 4 / 24 + x * * 3 / 6 + x * * 2 + x + 1",
    "transformer_prediction": "x * * 4 / 24 + x * * 3 / 6 + x * * 2 / 2 + x + 1"
  },
  {
    "function": "sqrt(2*x + 1)",
    "true_expansion": "-5*x**4/8 + x**3/2 - x**2/2 + x + 1",
    "lstm_prediction": "- 5 * x * * 4 / 8 + x * * 2 / 2 + x + 1",
    "improved_lstm_prediction": "- 5 * x * * 4 / 8 + x * * 3 / 2 - x * * 2 / 2 + x + 1",
    "transformer_prediction": "- 5 * x * * 4 / 64 + x * * 3 / 8 - x * * 2 / 4 + x + 2"
  },
  {
    "function": "x*(2*x**3 + x**2 + x + 4)",
    "true_expansion": "2*x**4 + x**3 + x**2 + 4*x",
    "lstm_prediction": "2 * x * * 4 + x * * 3 + 2 * x * * 2 + 4 * x",
    "improved_lstm_prediction": "2 * x * * 4 + x * * 3 + x * * 2 + 4 * x",
    "transformer_prediction": "12 * x * * 4 + 8 * x * * 3 + 8 * x * * 2 + 4 * x"
  },
  {
    "function": "sqrt(x + 1)",
    "true_expansion": "-5*x**4/128 + x**3/16 - x**2/8 + x/2 + 1",
    "lstm_prediction": "- 5 * x * * 4 / 128 + x * * 3 / 16 - x * * 2 / 8 + x / 2 + 1",
    "improved_lstm_prediction": "- 5 * x * * 4 / 128 + x * * 3 / 16 - x * * 2 / 8 + x / 2 + 1",
    "transformer_prediction": "- 5 * x * * 4 / 128 + x * * 3 / 16 - x * * 2 / 8 + x / 2 + 1"
  },
  {
    "function": "4*cos(3*x)",
    "true_expansion": "27*x**4/2 - 18*x**2 + 4",
    "lstm_prediction": "625 * x * * 4 + 18 * x * * 2 + 4",
    "improved_lstm_prediction": "27 * x * * 4 / 2 + 18 * x * * 2 + 4",
    "transformer_prediction": "x * * 4 / 6 - 3 * x * * 2 + 12"
  },
  {
    "function": "(3*x - 2)*exp(x)",
    "true_expansion": "5*x**4/12 + 7*x**3/6 + 2*x**2 + x - 2",
    "lstm_prediction": "23 * x * * 4 / 12 + 11 * x * * 3 / 6 + 4 * x * * 2 + x + 2",
    "improved_lstm_prediction": "7 * x * * 4 / 12 + 11 * x * * 3 / 6 + 4 * x * * 2 + x - 2",
    "transformer_prediction": "- 3 * x * * 4 / 12 - x * * 3 / 3 + 3 * x * * 2 - 2 * x - 2"
  },
  {
    "function": "-3*x**3 - 3*x**2 + 3*x + 5*exp(x)",
    "true_expansion": "5*x**4/24 - 13*x**3/6 - x**2/2 + 8*x + 5",
    "lstm_prediction": "5 * x * * 4 / 24 - 5 * x * * 3 / 6 + 11 * x * * 2 / 2 + 6 * x + 5",
    "improved_lstm_prediction": "5 * x * * 4 / 24 - 43 * x * * 3 / 6 + 19 * x * * 2 / 2 + 8 * x + 5",
    "transformer_prediction": "625 * x * * 4 / 24 + 131 * x * * 3 / 6 + 19 * x * * 2 / 2 + 2 * x + 2"
  },
  {
    "function": "tan(x)",
    "true_expansion": "x**3/3 + x",
    "lstm_prediction": "x * * 3 / 3 + x",
    "improved_lstm_prediction": "x * * 3 / 3 + x",
    "transformer_prediction": "x * * 3 / 3 + x"
  },
  {
    "function": "cosh(x)",
    "true_expansion": "x**4/24 + x**2/2 + 1",
    "lstm_prediction": "x * * 2 / 2 + 1",
    "improved_lstm_prediction": "x * * 4 / 24 + x * * 2 / 2 + 1",
    "transformer_prediction": "x * * 4 / 24 + x * * 2 / 2 + 1"
  },
  {
    "function": "-5*sinh(x)",
    "true_expansion": "-5*x**3/6 - 5*x",
    "lstm_prediction": "5 * x * * 3 / 3 - 5 * x",
    "improved_lstm_prediction": "- 5 * x * * 3 / 6 - 5 * x",
    "transformer_prediction": "- 125 * x * * 3 / 6 - 5 * x"
  },
  {
    "function": "-3*x**2 + 2*x + sinh(4*x) - 3",
    "true_expansion": "32*x**3/3 - 3*x**2 + 6*x - 3",
    "lstm_prediction": "32 * x * * 3 / 3 - 3 * x * * 2 + 5 * x - 2",
    "improved_lstm_prediction": "32 * x * * 3 / 3 - 3 * x * * 2 + 6 * x - 3",
    "transformer_prediction": "32 * x * * 3 / 3 + 3 * x * * 2 + x - 3"
  },
  {
    "function": "atan(2*x)",
    "true_expansion": "-8*x**3/3 + 2*x",
    "lstm_prediction": "- 8 * x * * 3 / 3 + 2 * x",
    "improved_lstm_prediction": "- 8 * x * * 3 / 3 + 2 * x",
    "transformer_prediction": "- 2 * x * * 3 / 3 + 2 * x"
  },
  {
    "function": "sqrt(x + 1)",
    "true_expansion": "-5*x**4/128 + x**3/16 - x**2/8 + x/2 + 1",
    "lstm_prediction": "- 5 * x * * 4 / 128 + x * * 3 / 16 - x * * 2 / 8 + x / 2 + 1",
    "improved_lstm_prediction": "- 5 * x * * 4 / 128 + x * * 3 / 16 - x * * 2 / 8 + x / 2 + 1",
    "transformer_prediction": "- 5 * x * * 4 / 128 + x * * 3 / 16 - x * * 2 / 8 + x / 2 + 1"
  },
  {
    "function": "-x**2 - x + tan(x) + 2",
    "true_expansion": "x**3/3 - x**2 + 2",
    "lstm_prediction": "x * * 3 / 3 - x * * 2 + 2",
    "improved_lstm_prediction": "x * * 3 / 3 - x * * 2 + 2",
    "transformer_prediction": "x * * 3 / 3 - x * * 2 + 3 * x - 2"
  },
  {
    "function": "4*sin(x) + 3",
    "true_expansion": "-2*x**3/3 + 4*x + 3",
    "lstm_prediction": "- 2 * x * * 3 / 3 + 6 * x + 3",
    "improved_lstm_prediction": "- 2 * x * * 3 / 3 + 4 * x + 3",
    "transformer_prediction": "- 32 * x * * 3 / 3 + 4 * x + 3"
  },
  {
    "function": "exp(4*x) - 2",
    "true_expansion": "32*x**4/3 + 32*x**3/3 + 8*x**2 + 4*x - 1",
    "lstm_prediction": "32 * x * * 4 / 3 + 32 * x * * 3 / 3 + 8 * x * * 2 + 4 * x + 1",
    "improved_lstm_prediction": "32 * x * * 4 / 3 + 32 * x * * 3 / 3 + 8 * x * * 2 + 4 * x - 1",
    "transformer_prediction": "32 * x * * 4 / 3 + 32 * x * * 3 / 3 + 8 * x * * 2 + 4 * x - 1"
  },
  {
    "function": "cos(x)",
    "true_expansion": "x**4/24 - x**2/2 + 1",
    "lstm_prediction": "x * * 2 / 2 + 1",
    "improved_lstm_prediction": "x * * 4 / 24 - x * * 2 / 2 + 1",
    "transformer_prediction": "x * * 4 / 24 - x * * 2 / 2 + 1"
  },
  {
    "function": "(-3*x**3 - x + 4)*sinh(x)",
    "true_expansion": "-19*x**4/6 + 2*x**3/3 - x**2 + 4*x",
    "lstm_prediction": "- 7 * x * * 4 / 3 - x * * 3 / 3 + 2 * x * * 2 + 4 * x",
    "improved_lstm_prediction": "- 11 * x * * 4 / 6 - x * * 3 / 3 - x * * 2 + 4 * x",
    "transformer_prediction": "- x * * 4 / 3 + 2 * x * * 3 / 3 + 3 * x * * 2 + 4 * x"
  },
  {
    "function": "cosh(3*x)",
    "true_expansion": "27*x**4/8 + 9*x**2/2 + 1",
    "lstm_prediction": "63 * x * * 2 / 2 + 1",
    "improved_lstm_prediction": "27 * x * * 4 / 8 + 9 * x * * 2 / 2 + 1",
    "transformer_prediction": "x * * 4 / 8 + 3 * x * * 2 / 2 + 3"
  },
  {
    "function": "2*x",
    "true_expansion": "2*x",
    "lstm_prediction": "2 * x",
    "improved_lstm_prediction": "2 * x * * 2 + 2 * x",
    "transformer_prediction": "2 * x"
  },
  {
    "function": "10*atan(x)",
    "true_expansion": "-10*x**3/3 + 10*x",
    "lstm_prediction": "- 5 * x * * 3 / 3 + 5 * x",
    "improved_lstm_prediction": "- 10 * x * * 3 / 3 + 10 * x",
    "transformer_prediction": "- 125 * x * * 3 / 3 + 5 * x"
  },
  {
    "function": "2*x**2 + x - 2",
    "true_expansion": "2*x**2 + x - 2",
    "lstm_prediction": "2 * x * * 2 + 2 * x - 2",
    "improved_lstm_prediction": "2 * x * * 2 + x - 2",
    "transformer_prediction": "- 2 * x * * 2 + 2 * x + 2"
  },
  {
    "function": "2*exp(x)",
    "true_expansion": "x**4/12 + x**3/3 + x**2 + 2*x + 2",
    "lstm_prediction": "x * * 4 / 12 + x * * 3 / 2 + 2 * x * * 2 + x + 4",
    "improved_lstm_prediction": "x * * 4 / 12 + x * * 3 / 3 + x * * 2 + 2 * x + 2",
    "transformer_prediction": "2 * x * * 4 / 3 + 4 * x * * 3 / 3 + 2 * x * * 2 + 2 * x + 1"
  },
  {
    "function": "5*(x**3 + 3*x**2 - x + 3)*sin(x)",
    "true_expansion": "35*x**4/6 + 25*x**3/2 - 5*x**2 + 15*x",
    "lstm_prediction": "5 * x * * 4 / 2 + 25 * x * * 3 / 3 + 15 * x * * 2 - 10 * x",
    "improved_lstm_prediction": "5 * x * * 4 / 2 + 25 * x * * 3 / 6 - 5 * x * * 2 + 3 * x",
    "transformer_prediction": "- 5 * x * * 4 / 2 + 15 * x * * 3 / 2 + 15 * x * * 2 + 15 * x"
  },
  {
    "function": "3*tan(x)",
    "true_expansion": "x**3 + 3*x",
    "lstm_prediction": "x * * 3 + 3 * x",
    "improved_lstm_prediction": "x * * 3 + 3 * x",
    "transformer_prediction": "9 * x * * 3 + 3 * x"
  },
  {
    "function": "sqrt(x + 1)",
    "true_expansion": "-5*x**4/128 + x**3/16 - x**2/8 + x/2 + 1",
    "lstm_prediction": "- 5 * x * * 4 / 128 + x * * 3 / 16 - x * * 2 / 8 + x / 2 + 1",
    "improved_lstm_prediction": "- 5 * x * * 4 / 128 + x * * 3 / 16 - x * * 2 / 8 + x / 2 + 1",
    "transformer_prediction": "- 5 * x * * 4 / 128 + x * * 3 / 16 - x * * 2 / 8 + x / 2 + 1"
  },
  {
    "function": "2*x**3 - 3*x**2 + 2*x + 3*log(x + 1) - 1",
    "true_expansion": "-3*x**4/4 + 3*x**3 - 9*x**2/2 + 5*x - 1",
    "lstm_prediction": "- 3 * x * * 4 / 4 + 2 * x * * 3 - 5 * x * * 2 / 2 + 4 * x - 1",
    "improved_lstm_prediction": "- 3 * x * * 4 / 4 + x * * 3 - 7 * x * * 2 / 2 + 5 * x - 1",
    "transformer_prediction": "- 3 * x * * 4 / 4 + 2 * x * * 3 - 5 * x * * 2 / 2 + 3 * x + 1"
  },
  {
    "function": "2*atan(x)",
    "true_expansion": "-2*x**3/3 + 2*x",
    "lstm_prediction": "- x * * 3 / 3 + 2 * x",
    "improved_lstm_prediction": "- 2 * x * * 3 / 3 + 2 * x",
    "transformer_prediction": "- 2 * x * * 3 / 3 + 2 * x"
  },
  {
    "function": "x",
    "true_expansion": "x",
    "lstm_prediction": "x * * 2 / 2 + 1",
    "improved_lstm_prediction": "x * * 3 + x",
    "transformer_prediction": "x"
  },
  {
    "function": "tan(x)",
    "true_expansion": "x**3/3 + x",
    "lstm_prediction": "x * * 3 / 3 + x",
    "improved_lstm_prediction": "x * * 3 / 3 + x",
    "transformer_prediction": "x * * 3 / 3 + x"
  },
  {
    "function": "-4*cos(x)",
    "true_expansion": "-x**4/6 + 2*x**2 - 4",
    "lstm_prediction": "x * * 4 / 3 - 8 * x * * 2 - 4",
    "improved_lstm_prediction": "- x * * 4 / 6 - 2 * x * * 2 - 4",
    "transformer_prediction": "- x * * 4 / 6 + 2 * x * * 2 - 4"
  },
  {
    "function": "(2*x - 2)*log(x + 1)",
    "true_expansion": "7*x**4/6 - 5*x**3/3 + 3*x**2 - 2*x",
    "lstm_prediction": "- x * * 4 / 3 + x * * 3 / 3 - 2 * x * * 2 + 2 * x",
    "improved_lstm_prediction": "x * * 4 / 3 + 4 * x * * 3 / 3 + 4 * x",
    "transformer_prediction": "- 4 * x * * 4 / 3 + 14 * x * * 3 / 3 - 4 * x * * 2 + 2 * x"
  },
  {
    "function": "sinh(x)",
    "true_expansion": "x**3/6 + x",
    "lstm_prediction": "x * * 3 / 2 + x",
    "improved_lstm_prediction": "x * * 3 / 6 + x",
    "transformer_prediction": "x * * 3 / 6 + x"
  },
  {
    "function": "(-3*x**3 + 3*x**2 - x + 4)*sin(x)",
    "true_expansion": "-17*x**4/6 + 7*x**3/3 - x**2 + 4*x",
    "lstm_prediction": "- 17 * x * * 4 / 6 + 2 * x * * 3 / 3 + x * * 2 + 4 * x",
    "improved_lstm_prediction": "- 11 * x * * 4 / 6 + 10 * x * * 3 / 3 - x * * 2 + 4 * x",
    "transformer_prediction": "- 11 * x * * 4 / 3 + 13 * x * * 3 / 3 + 3 * x * * 2 + 4 * x"
  },
  {
    "function": "5*(3*x**2 - 2*x - 1)/(1 - x)",
    "true_expansion": "-15*x - 5",
    "lstm_prediction": "- 205 * x * * 4 + 20 * x * * 3 - 20 * x * * 2 - 20 * x - 10",
    "improved_lstm_prediction": "- 5 * x * * 4 - 5 * x * * 3 - 15 * x * * 2 - 5 * x - 5",
    "transformer_prediction": "- 25 * x * * 4 - 15 * x * * 3 - 15 * x * * 2 - 15 * x - 10"
  },
  {
    "function": "tan(x)",
    "true_expansion": "x**3/3 + x",
    "lstm_prediction": "x * * 3 / 3 + x",
    "improved_lstm_prediction": "x * * 3 / 3 + x",
    "transformer_prediction": "x * * 3 / 3 + x"
  },
  {
    "function": "tan(x)",
    "true_expansion": "x**3/3 + x",
    "lstm_prediction": "x * * 3 / 3 + x",
    "improved_lstm_prediction": "x * * 3 / 3 + x",
    "transformer_prediction": "x * * 3 / 3 + x"
  },
  {
    "function": "3*x**2 + sinh(x) - 1",
    "true_expansion": "x**3/6 + 3*x**2 + x - 1",
    "lstm_prediction": "x * * 3 / 6 + 3 * x * * 2 + 1",
    "improved_lstm_prediction": "13 * x * * 3 / 6 + 3 * x * * 2 + x - 1",
    "transformer_prediction": "x * * 3 / 2 + 3 * x * * 2 + 3 * x - 1"
  },
  {
    "function": "log(x + 1)",
    "true_expansion": "-x**4/4 + x**3/3 - x**2/2 + x",
    "lstm_prediction": "- x * * 4 / 4 + x * * 3 / 3 - x * * 2 / 2 + x",
    "improved_lstm_prediction": "- x * * 4 / 4 + x * * 3 / 3 - x * * 2 / 2 + x",
    "transformer_prediction": "- x * * 4 / 4 + x * * 3 / 3 - x * * 2 / 2 + x"
  },
  {
    "function": "sin(4*x)",
    "true_expansion": "-32*x**3/3 + 4*x",
    "lstm_prediction": "* * x * * 3 / 3 + 4 * x",
    "improved_lstm_prediction": "32 * 32 * x * * 3 / 3 + 4 * x",
    "transformer_prediction": "- 32 * x * * 3 / 3 + 4 * x"
  },
  {
    "function": "2*x**3 - x**2 - 3*x + 2*atan(x) - 1",
    "true_expansion": "4*x**3/3 - x**2 - x - 1",
    "lstm_prediction": "2 * x * * 3 / 3 - 2 * x * * 2 - x - 1",
    "improved_lstm_prediction": "5 * x * * 3 / 3 - x * * 2 - x - 1",
    "transformer_prediction": "- 2 * x * * 3 / 3 + 3 * x * * 2 + 2 * x - 1"
  },
  {
    "function": "log(3*x + 1)",
    "true_expansion": "-81*x**4/4 + 9*x**3 - 9*x**2/2 + 3*x",
    "lstm_prediction": "- 81 * x * * 4 / 4 + 9 * x * * 3 - 9 * x * * 2 / 2 + 3 * x",
    "improved_lstm_prediction": "- 81 * x * * 4 / 4 + 9 * x * * 3 - 9 * x * * 2 / 2 + 3 * x",
    "transformer_prediction": "- 3 * x * * 4 / 4 + x * * 3 - 3 * x * * 2 / 2 + 3 * x"
  },
  {
    "function": "atan(4*x)",
    "true_expansion": "-64*x**3/3 + 4*x",
    "lstm_prediction": "- 64 * x * * 3 / 3 + 4 * x",
    "improved_lstm_prediction": "- 64 * x * * 3 / 3 + 4 * x",
    "transformer_prediction": "- 4 * x * * 3 / 3 + 4 * x"
  },
  {
    "function": "x",
    "true_expansion": "x",
    "lstm_prediction": "x * * 2 / 2 + 1",
    "improved_lstm_prediction": "x * * 3 + x",
    "transformer_prediction": "x"
  },
  {
    "function": "exp(4*x)",
    "true_expansion": "32*x**4/3 + 32*x**3/3 + 8*x**2 + 4*x + 1",
    "lstm_prediction": "32 * x * * 4 / 3 + 32 * x * * 3 / 3 + 8 * x * * 2 / 2 + 4 * x + 1",
    "improved_lstm_prediction": "32 * x * * 4 + 3 * x * * 3 + 3 * x * * 2 + 4 * x + 1",
    "transformer_prediction": "32 * x * * 4 / 3 + 32 * x * * 3 / 3 + 8 * x * * 2 + 4 * x + 1"
  },
  {
    "function": "-2*x + 2*sin(x) - 2",
    "true_expansion": "-x**3/3 - 2",
    "lstm_prediction": "x * * 3 / 3 - 2 * x - 2",
    "improved_lstm_prediction": "- x * * 3 / 3 - 1",
    "transformer_prediction": "- x * * 3 / 3 + 3 * x - 2"
  },
  {
    "function": "exp(4*x)",
    "true_expansion": "32*x**4/3 + 32*x**3/3 + 8*x**2 + 4*x + 1",
    "lstm_prediction": "32 * x * * 4 / 3 + 32 * x * * 3 / 3 + 8 * x * * 2 / 2 + 4 * x + 1",
    "improved_lstm_prediction": "32 * x * * 4 + 3 * x * * 3 + 3 * x * * 2 + 4 * x + 1",
    "transformer_prediction": "32 * x * * 4 / 3 + 32 * x * * 3 / 3 + 8 * x * * 2 + 4 * x + 1"
  },
  {
    "function": "sin(2*x)",
    "true_expansion": "-4*x**3/3 + 2*x",
    "lstm_prediction": "* x * * 3 / 2 + 3 * x",
    "improved_lstm_prediction": "- 4 * x * * 3 / 3 + 2 * x",
    "transformer_prediction": "- 4 * x * * 3 / 3 + 2 * x"
  },
  {
    "function": "log(5*x + 1) + 3",
    "true_expansion": "-625*x**4/4 + 125*x**3/3 - 25*x**2/2 + 5*x + 3",
    "lstm_prediction": "- 625 * x * * 4 / 4 + 125 * x * * 3 / 3 - 25 * x * * 2 / 2 + 5 * x + 2",
    "improved_lstm_prediction": "- 625 * x * * 4 / 4 + 125 * x * * 3 / 3 - 25 * x * * 2 / 2 + 5 * x + 3",
    "transformer_prediction": "- 625 * x * * 4 / 4 + 125 * x * * 3 / 3 - 25 * x * * 2 / 2 + 5 * x + 3"
  },
  {
    "function": "4*(-2*x**2 - x + 2)*log(x + 1)",
    "true_expansion": "2*x**4/3 - 10*x**3/3 - 8*x**2 + 8*x",
    "lstm_prediction": "- 8 * x * * 4 / 3 - 4 * x * * 3 / 3 - 4 * x * * 2 / 2 + 4 * x",
    "improved_lstm_prediction": "- 8 * x * * 4 / 3 - 8 * x * * 3 / 3 - 4 * x * * 2 + 8 * x",
    "transformer_prediction": "- 8 * x * * 4 / 3 + 40 * x * * 3 / 3 - 8 * x * * 2 + 8 * x"
  },
  {
    "function": "2*x**2 + 2*x + sinh(x) - 2",
    "true_expansion": "x**3/6 + 2*x**2 + 3*x - 2",
    "lstm_prediction": "x * * 3 / 6 + 2 * x * * 2 + 3 * x - 2",
    "improved_lstm_prediction": "x * * 3 / 6 + 2 * x * * 2 + 3 * x - 2",
    "transformer_prediction": "x * * 3 / 6 + 2 * x * * 2 + 3 * x + 2"
  },
  {
    "function": "x*(-3*x**2 - x - 1)",
    "true_expansion": "-3*x**3 - x**2 - x",
    "lstm_prediction": "- 3 * x * * 4 - 3 * x * * 2 - x",
    "improved_lstm_prediction": "- 3 * x * * 3 - x * * 2 - x",
    "transformer_prediction": "- 3 * x * * 4 - 3 * x * * 3 - 3 * x * * 2 - x"
  },
  {
    "function": "3*tan(x)",
    "true_expansion": "x**3 + 3*x",
    "lstm_prediction": "x * * 3 + 3 * x",
    "improved_lstm_prediction": "x * * 3 + 3 * x",
    "transformer_prediction": "9 * x * * 3 + 3 * x"
  },
  {
    "function": "4*exp(x)",
    "true_expansion": "x**4/6 + 2*x**3/3 + 2*x**2 + 4*x + 4",
    "lstm_prediction": "x * * 4 / 6 + 2 * x * * 3 / 3 + 2 * x * * 2 + 4 * x + 4",
    "improved_lstm_prediction": "x * * 4 / 6 + 2 * x * * 3 / 3 + 2 * x * * 2 + 4 * x + 4",
    "transformer_prediction": "32 * x * * 4 / 3 + 32 * x * * 3 / 3 + 8 * x * * 2 + 4 * x + 1"
  },
  {
    "function": "exp(3*x)",
    "true_expansion": "27*x**4/8 + 9*x**3/2 + 9*x**2/2 + 3*x + 1",
    "lstm_prediction": "27 * x * * 4 / 8 + 9 * x * * 3 / 2 + 9 * x * * 2 / 2 + 3 * x + 1",
    "improved_lstm_prediction": "81 * x * * 4 / 8 + 9 * x * * 3 + 9 * x * * 2 / 2 + 3 * x + 1",
    "transformer_prediction": "27 * x * * 4 / 8 + 9 * x * * 3 / 2 + 9 * x * * 2 / 2 + 3 * x + 1"
  },
  {
    "function": "exp(x) + 3",
    "true_expansion": "x**4/24 + x**3/6 + x**2/2 + x + 4",
    "lstm_prediction": "x * * 4 / 24 + x * * 3 / 6 + x * * 2 / 2 + x + 4",
    "improved_lstm_prediction": "x * * 4 / 24 + x * * 3 / 6 + x * * 2 / 2 + x + 4",
    "transformer_prediction": "x * * 4 / 24 + x * * 3 / 6 + x * * 2 / 2 + x + 4"
  },
  {
    "function": "cosh(x)",
    "true_expansion": "x**4/24 + x**2/2 + 1",
    "lstm_prediction": "x * * 2 / 2 + 1",
    "improved_lstm_prediction": "x * * 4 / 24 + x * * 2 / 2 + 1",
    "transformer_prediction": "x * * 4 / 24 + x * * 2 / 2 + 1"
  },
  {
    "function": "(-3*x**3 - 2*x**2 - 3*x + 1)*tan(x)",
    "true_expansion": "-4*x**4 - 5*x**3/3 - 3*x**2 + x",
    "lstm_prediction": "- 2 * x * * 4 - 7 * x * * 3 / 3 - 3 * x * * 2 + 2 * x",
    "improved_lstm_prediction": "- 10 * x * * 4 - 10 * x * * 3 / 3 - 3 * x * * 2 + x",
    "transformer_prediction": "- 2 * x * * 4 - 10 * x * * 3 / 3 + 6 * x * * 2 + 2 * x"
  },
  {
    "function": "1/(1 - x)",
    "true_expansion": "x**4 + x**3 + x**2 + x + 1",
    "lstm_prediction": "x * * 4 + x * * 3 + x * * 2 + x + 1",
    "improved_lstm_prediction": "x * * 4 + x * * 3 + x * * 2 + x + 1",
    "transformer_prediction": "x * * 4 + x * * 3 + x * * 2 + x + 1"
  },
  {
    "function": "sin(x)",
    "true_expansion": "-x**3/6 + x",
    "lstm_prediction": "* x * * 3 / 2 + 5 * x",
    "improved_lstm_prediction": "- x * * 3 / 6 + x",
    "transformer_prediction": "- x * * 3 / 6 + x"
  },
  {
    "function": "atan(x)",
    "true_expansion": "-x**3/3 + x",
    "lstm_prediction": "* x * * 3 / 3 + x",
    "improved_lstm_prediction": "- x * * 3 / 3 + x",
    "transformer_prediction": "- x * * 3 / 3 + x"
  },
  {
    "function": "cosh(2*x)",
    "true_expansion": "2*x**4/3 + 2*x**2 + 1",
    "lstm_prediction": "x * * 2 / 2 + 1",
    "improved_lstm_prediction": "2 * x * * 4 / 3 + 2 * x * * 2 + 1",
    "transformer_prediction": "2 * x * * 4 / 3 + 2 * x * * 2 + 1"
  },
  {
    "function": "3*log(x + 1)",
    "true_expansion": "-3*x**4/4 + x**3 - 3*x**2/2 + 3*x",
    "lstm_prediction": "- 3 * x * * 4 / 4 + x * * 3 - 3 * x * * 2 / 2 + 3 * x",
    "improved_lstm_prediction": "- 3 * x * * 4 / 4 + x * * 3 - 3 * x * * 2 / 2 + 3 * x",
    "transformer_prediction": "- 3 * x * * 4 / 4 + x * * 3 - 3 * x * * 2 / 2 + 3 * x"
  },
  {
    "function": "4*x",
    "true_expansion": "4*x",
    "lstm_prediction": "4 * x + 1",
    "improved_lstm_prediction": "4 * x",
    "transformer_prediction": "4 * x"
  },
  {
    "function": "4*sinh(x)",
    "true_expansion": "2*x**3/3 + 4*x",
    "lstm_prediction": "2 * x * * 3 / 3 + 4 * x",
    "improved_lstm_prediction": "2 * x * * 3 / 3 + 4 * x",
    "transformer_prediction": "32 * x * * 3 / 3 + 4 * x"
  },
  {
    "function": "(3*x**3 - 3*x - 1)*exp(x)",
    "true_expansion": "59*x**4/24 + 4*x**3/3 - 7*x**2/2 - 4*x - 1",
    "lstm_prediction": "- 23 * x * * 4 / 8 + 11 * x * * 3 / 6 - 3 * x * * 2 / 2 - 3 * x - 1",
    "improved_lstm_prediction": "31 * x * * 4 / 24 + 4 * x * * 3 / 3 - 4 * x * * 2 - 4 * x - 1",
    "transformer_prediction": "- 3 * x * * 4 / 8 - x * * 3 / 2 - 3 * x * * 2 / 2 - 3 * x - 1"
  },
  {
    "function": "atan(x)",
    "true_expansion": "-x**3/3 + x",
    "lstm_prediction": "* x * * 3 / 3 + x",
    "improved_lstm_prediction": "- x * * 3 / 3 + x",
    "transformer_prediction": "- x * * 3 / 3 + x"
  },
  {
    "function": "-3*x + 3*cos(x) - 3",
    "true_expansion": "x**4/8 - 3*x**2/2 - 3*x",
    "lstm_prediction": "x * * 4 / 8 - 3 * x * * 2 / 2 - 3 * x",
    "improved_lstm_prediction": "x * * 4 / 8 - 3 * x * * 2 / 2 - 3 * x",
    "transformer_prediction": "x * * 4 / 8 - 3 * x * * 2 / 2 - 3 * x + 3"
  },
  {
    "function": "cos(4*x)",
    "true_expansion": "32*x**4/3 - 8*x**2 + 1",
    "lstm_prediction": "* x * * 2 + 4",
    "improved_lstm_prediction": "32 * x * * 4 / 3 + 8 * x * * 2 + 1",
    "transformer_prediction": "x * * 4 / 6 - 2 * x * * 2 + 4"
  },
  {
    "function": "sin(x) - 2",
    "true_expansion": "-x**3/6 + x - 2",
    "lstm_prediction": "* x * * 3 / 6 + 2 * x - 2",
    "improved_lstm_prediction": "- x * * 3 / 6 + x - 2",
    "transformer_prediction": "- x * * 3 / 6 + x - 2"
  },
  {
    "function": "1/(1 - 3*x)",
    "true_expansion": "81*x**4 + 27*x**3 + 9*x**2 + 3*x + 1",
    "lstm_prediction": "81 * x * * 4 + 27 * x * * 3 + 9 * x * * 2 + 3 * x + 1",
    "improved_lstm_prediction": "81 * x * * 4 + 27 * x * * 3 + 9 * x * * 2 + 3 * x + 1",
    "transformer_prediction": "81 * x * * 4 + 27 * x * * 3 + 9 * x * * 2 + 3 * x + 1"
  },
  {
    "function": "-2*x + sin(5*x) + 2",
    "true_expansion": "-125*x**3/6 + 3*x + 2",
    "lstm_prediction": "- 125 * x * * 3 / 6 + 3 * x + 2",
    "improved_lstm_prediction": "- 125 * x * * 3 / 6 + 3 * x + 2",
    "transformer_prediction": "- 125 * x * * 3 / 6 + 3 * x - 2"
  },
  {
    "function": "tan(3*x) + 3",
    "true_expansion": "9*x**3 + 3*x + 3",
    "lstm_prediction": "9 * x * * 3 + 3 * x + 3",
    "improved_lstm_prediction": "9 * x * * 3 + 3 * x + 3",
    "transformer_prediction": "9 * x * * 3 + 3 * x + 3"
  },
  {
    "function": "2*sin(x)",
    "true_expansion": "-x**3/3 + 2*x",
    "lstm_prediction": "x * * 3 / 3 + 2 * x",
    "improved_lstm_prediction": "- x * * 3 / 3 + 2 * x",
    "transformer_prediction": "- 4 * x * * 3 / 3 + 2 * x"
  },
  {
    "function": "3*sinh(x) - 1",
    "true_expansion": "x**3/2 + 3*x - 1",
    "lstm_prediction": "x * * 3 / 2 + 3 * x - 1",
    "improved_lstm_prediction": "x * * 3 / 2 + 3 * x - 1",
    "transformer_prediction": "9 * x * * 3 / 2 + 3 * x - 1"
  },
  {
    "function": "4*atan(x)",
    "true_expansion": "-4*x**3/3 + 4*x",
    "lstm_prediction": "- 4 * x * * 3 / 3 + 4 * x",
    "improved_lstm_prediction": "- 4 * x * * 3 / 3 + 4 * x",
    "transformer_prediction": "- 4 * x * * 3 / 3 + 4 * x"
  },
  {
    "function": "4*(3*x - 2)*cosh(x)",
    "true_expansion": "-x**4/3 + 6*x**3 - 4*x**2 + 12*x - 8",
    "lstm_prediction": "- 11 * x * * 4 / 3 - 4 * x * * 2 - 8",
    "improved_lstm_prediction": "x * * 4 / 3 - 3 * x * * 3 + 8 * x * * 2 + 8 * x - 8",
    "transformer_prediction": "- 8 * x * * 4 / 3 + 8 * x * * 3 + 8 * x * * 2 - 3 * x + 12"
  },
  {
    "function": "-3*x**3 + 2*x**2 - x + sinh(2*x) - 2",
    "true_expansion": "-5*x**3/3 + 2*x**2 + x - 2",
    "lstm_prediction": "- 7 * x * * 3 / 3 + 2 * x * * 2 + 2 * x - 2",
    "improved_lstm_prediction": "- 17 * x * * 3 / 3 + 2 * x * * 2 + x - 2",
    "transformer_prediction": "- 5 * x * * 3 / 6 + 2 * x * * 2 + 2 * x - 2"
  },
  {
    "function": "cosh(x)",
    "true_expansion": "x**4/24 + x**2/2 + 1",
    "lstm_prediction": "x * * 2 / 2 + 1",
    "improved_lstm_prediction": "x * * 4 / 24 + x * * 2 / 2 + 1",
    "transformer_prediction": "x * * 4 / 24 + x * * 2 / 2 + 1"
  },
  {
    "function": "x",
    "true_expansion": "x",
    "lstm_prediction": "x * * 2 / 2 + 1",
    "improved_lstm_prediction": "x * * 3 + x",
    "transformer_prediction": "x"
  },
  {
    "function": "4/(1 - x)",
    "true_expansion": "4*x**4 + 4*x**3 + 4*x**2 + 4*x + 4",
    "lstm_prediction": "4 * x * * 4 + 4 * x * * 3 + 4 * x * * 2 + 4 * x + 4",
    "improved_lstm_prediction": "4 * x * * 4 + 4 * x * * 3 + 4 * x * * 2 + 4 * x + 4",
    "transformer_prediction": "4 * x * * 4 + 4 * x * * 3 + 4 * x * * 2 + 4 * x + 4"
  },
  {
    "function": "3*sin(x)",
    "true_expansion": "-x**3/2 + 3*x",
    "lstm_prediction": "* x * * 3 / 2 + 3 * x",
    "improved_lstm_prediction": "- x * * 3 / 2 + 3 * x",
    "transformer_prediction": "- 9 * x * * 3 / 2 + 3 * x"
  },
  {
    "function": "1/(1 - 4*x)",
    "true_expansion": "256*x**4 + 64*x**3 + 16*x**2 + 4*x + 1",
    "lstm_prediction": "256 * x * * 4 + 64 * x * * 3 + 16 * x * * 2 + 4 * x + 1",
    "improved_lstm_prediction": "256 * x * * 4 + 64 * x * * 3 + 16 * x * * 2 + 4 * x + 1",
    "transformer_prediction": "256 * x * * 4 + 64 * x * * 3 + 16 * x * * 2 + 4 * x + 1"
  },
  {
    "function": "x",
    "true_expansion": "x",
    "lstm_prediction": "x * * 2 / 2 + 1",
    "improved_lstm_prediction": "x * * 3 + x",
    "transformer_prediction": "x"
  },
  {
    "function": "x*(x + 1)",
    "true_expansion": "x**2 + x",
    "lstm_prediction": "x * * 3 + 2 * x",
    "improved_lstm_prediction": "x * * 3 / 3 + x * * 2 + x",
    "transformer_prediction": "x * * 2 + x"
  },
  {
    "function": "log(x + 1)",
    "true_expansion": "-x**4/4 + x**3/3 - x**2/2 + x",
    "lstm_prediction": "- x * * 4 / 4 + x * * 3 / 3 - x * * 2 / 2 + x",
    "improved_lstm_prediction": "- x * * 4 / 4 + x * * 3 / 3 - x * * 2 / 2 + x",
    "transformer_prediction": "- x * * 4 / 4 + x * * 3 / 3 - x * * 2 / 2 + x"
  },
  {
    "function": "2*x**3 + 2*x**2 + 3*x + 3*atan(x) - 1",
    "true_expansion": "x**3 + 2*x**2 + 6*x - 1",
    "lstm_prediction": "5 * x * * 3 / 3 + 2 * x * * 2 + 4 * x - 1",
    "improved_lstm_prediction": "5 * x * * 3 + 2 * x * * 2 + 6 * x - 1",
    "transformer_prediction": "- 2 * x * * 3 / 3 + 3 * x * * 2 + 5 * x + 1"
  },
  {
    "function": "sqrt(x + 1)",
    "true_expansion": "-5*x**4/128 + x**3/16 - x**2/8 + x/2 + 1",
    "lstm_prediction": "- 5 * x * * 4 / 128 + x * * 3 / 16 - x * * 2 / 8 + x / 2 + 1",
    "improved_lstm_prediction": "- 5 * x * * 4 / 128 + x * * 3 / 16 - x * * 2 / 8 + x / 2 + 1",
    "transformer_prediction": "- 5 * x * * 4 / 128 + x * * 3 / 16 - x * * 2 / 8 + x / 2 + 1"
  },
  {
    "function": "3*x**3 + 2*x**2 - 3*x + exp(x) - 2",
    "true_expansion": "x**4/24 + 19*x**3/6 + 5*x**2/2 - 2*x - 1",
    "lstm_prediction": "x * * 4 / 24 + 11 * x * * 3 / 6 + 3 * x * * 2 / 2 - x - 1",
    "improved_lstm_prediction": "13 * x * * 4 / 24 + 10 * x * * 3 / 6 + 5 * x * * 2 / 2 - 2 * x - 1",
    "transformer_prediction": "x * * 4 / 12 + x * * 3 / 3 + 3 * x * * 2 + 2 * x + 5"
  },
  {
    "function": "3*x**3 + 2*x**2 - 1",
    "true_expansion": "3*x**3 + 2*x**2 - 1",
    "lstm_prediction": "3 * x * * 3 + 2 * x * * 2 - x + 1",
    "improved_lstm_prediction": "3 * x * * 3 + 2 * x * * 2 - x",
    "transformer_prediction": "3 * x * * 3 + 3 * x * * 2 + 3 * x + 1"
  },
  {
    "function": "tan(x)",
    "true_expansion": "x**3/3 + x",
    "lstm_prediction": "x * * 3 / 3 + x",
    "improved_lstm_prediction": "x * * 3 / 3 + x",
    "transformer_prediction": "x * * 3 / 3 + x"
  },
  {
    "function": "(2*x + 3)*log(x + 1)",
    "true_expansion": "-x**4/12 + x**2/2 + 3*x",
    "lstm_prediction": "- 3 * x * * 4 / 2 + 2 * x * * 3 / 2 + 3 * x * * 2 + 3 * x",
    "improved_lstm_prediction": "- 3 * x * * 4 / 2 + 2 * x * * 3 / 2 - 3 * x * * 2 + 3 * x",
    "transformer_prediction": "- 3 * x * * 4 / 4 + x * * 3 - 3 * x * * 2 / 2 + 3 * x"
  },
  {
    "function": "1/(1 - x)",
    "true_expansion": "x**4 + x**3 + x**2 + x + 1",
    "lstm_prediction": "x * * 4 + x * * 3 + x * * 2 + x + 1",
    "improved_lstm_prediction": "x * * 4 + x * * 3 + x * * 2 + x + 1",
    "transformer_prediction": "x * * 4 + x * * 3 + x * * 2 + x + 1"
  },
  {
    "function": "exp(4*x)",
    "true_expansion": "32*x**4/3 + 32*x**3/3 + 8*x**2 + 4*x + 1",
    "lstm_prediction": "32 * x * * 4 / 3 + 32 * x * * 3 / 3 + 8 * x * * 2 / 2 + 4 * x + 1",
    "improved_lstm_prediction": "32 * x * * 4 + 3 * x * * 3 + 3 * x * * 2 + 4 * x + 1",
    "transformer_prediction": "32 * x * * 4 / 3 + 32 * x * * 3 / 3 + 8 * x * * 2 + 4 * x + 1"
  },
  {
    "function": "cos(x) - 2",
    "true_expansion": "x**4/24 - x**2/2 - 1",
    "lstm_prediction": "x * * 3 / 8 - x / 2",
    "improved_lstm_prediction": "x * * 4 / 24 - x * * 2 / 2 - 1",
    "transformer_prediction": "x * * 4 / 24 - x * * 2 / 2 - 1"
  },
  {
    "function": "3*x + atan(x) + 1",
    "true_expansion": "-x**3/3 + 4*x + 1",
    "lstm_prediction": "- x * * 3 / 3 + 4 * x + 1",
    "improved_lstm_prediction": "- x * * 3 / 3 + 4 * x + 1",
    "transformer_prediction": "- x * * 3 / 3 + 4 * x + 1"
  },
  {
    "function": "exp(3*x)",
    "true_expansion": "27*x**4/8 + 9*x**3/2 + 9*x**2/2 + 3*x + 1",
    "lstm_prediction": "27 * x * * 4 / 8 + 9 * x * * 3 / 2 + 9 * x * * 2 / 2 + 3 * x + 1",
    "improved_lstm_prediction": "81 * x * * 4 / 8 + 9 * x * * 3 + 9 * x * * 2 / 2 + 3 * x + 1",
    "transformer_prediction": "27 * x * * 4 / 8 + 9 * x * * 3 / 2 + 9 * x * * 2 / 2 + 3 * x + 1"
  },
  {
    "function": "0",
    "true_expansion": "0",
    "lstm_prediction": "* x + 1",
    "improved_lstm_prediction": "0",
    "transformer_prediction": "0"
  },
  {
    "function": "sqrt(5*x + 1)",
    "true_expansion": "-3125*x**4/128 + 125*x**3/16 - 25*x**2/8 + 5*x/2 + 1",
    "lstm_prediction": "* x * * 4 / 128 + x * * 3 / 16 - x * * 2 / 8 + x / 2 + 1",
    "improved_lstm_prediction": "- 3125 * x * * 4 / 128 + 125 * x * * 3 / 16 - 25 * x * * 2 / 8 + 5 * x / 2 + 1",
    "transformer_prediction": "- 25 * x * * 4 / 128 + 5 * x * * 3 / 16 - 5 * x * * 2 / 8 + 5 * x / 2 + 5"
  },
  {
    "function": "sinh(x)",
    "true_expansion": "x**3/6 + x",
    "lstm_prediction": "x * * 3 / 2 + x",
    "improved_lstm_prediction": "x * * 3 / 6 + x",
    "transformer_prediction": "x * * 3 / 6 + x"
  },
  {
    "function": "log(x + 1) + 1",
    "true_expansion": "-x**4/4 + x**3/3 - x**2/2 + x + 1",
    "lstm_prediction": "- x * * 4 / 4 + x * * 3 / 3 - x * * 2 / 2 + x + 1",
    "improved_lstm_prediction": "- x * * 4 / 4 + x * * 3 / 3 - x * * 2 / 2 + x + 1",
    "transformer_prediction": "- x * * 4 / 4 + x * * 3 / 3 - x * * 2 / 2 + x + 1"
  },
  {
    "function": "exp(x)",
    "true_expansion": "x**4/24 + x**3/6 + x**2/2 + x + 1",
    "lstm_prediction": "x * * 4 / 24 + x * * 2 / 2 + x + 1",
    "improved_lstm_prediction": "x * * 4 / 24 + x * * 3 / 6 + x * * 2 + x + 1",
    "transformer_prediction": "x * * 4 / 24 + x * * 3 / 6 + x * * 2 / 2 + x + 1"
  },
  {
    "function": "5*tan(x)",
    "true_expansion": "5*x**3/3 + 5*x",
    "lstm_prediction": "5 * x * * 3 / 3 + 5 * x",
    "improved_lstm_prediction": "5 * x * * 3 / 3 + 5 * x",
    "transformer_prediction": "5 * x * * 3 / 3 + 5 * x"
  },
  {
    "function": "3*sinh(x)",
    "true_expansion": "x**3/2 + 3*x",
    "lstm_prediction": "x * * 3 / 2 + 3 * x",
    "improved_lstm_prediction": "x * * 3 / 2 + 3 * x",
    "transformer_prediction": "9 * x * * 3 / 2 + 3 * x"
  },
  {
    "function": "sqrt(4*x + 1)",
    "true_expansion": "-10*x**4 + 4*x**3 - 2*x**2 + 2*x + 1",
    "lstm_prediction": "- 10 * x * * 4 + 4 * x * * 2 + 2 * x + 1",
    "improved_lstm_prediction": "- 10 * x * * 4 + 4 * x * * 3 - 2 * x * * 2 + 2 * x + 1",
    "transformer_prediction": "- 5 * x * * 4 / 32 + x * * 3 / 4 - x * * 2 / 2 + 2 * x + 4"
  },
  {
    "function": "cosh(5*x)",
    "true_expansion": "625*x**4/24 + 25*x**2/2 + 1",
    "lstm_prediction": "2525 * x * * 2 / 2 + 5",
    "improved_lstm_prediction": "625 * x * * 4 / 24 + 25 * x * * 2 / 2 + 1",
    "transformer_prediction": "625 * x * * 4 / 24 + 25 * x * * 2 / 2 + 1"
  },
  {
    "function": "2*x",
    "true_expansion": "2*x",
    "lstm_prediction": "2 * x",
    "improved_lstm_prediction": "2 * x * * 2 + 2 * x",
    "transformer_prediction": "2 * x"
  },
  {
    "function": "3*sqrt(x + 1)",
    "true_expansion": "-15*x**4/128 + 3*x**3/16 - 3*x**2/8 + 3*x/2 + 3",
    "lstm_prediction": "- 15 * x * * 4 / 128 + 3 * x * * 3 / 16 - 3 * x * * 2 / 8 + 3 * x / 2 + 1",
    "improved_lstm_prediction": "- 15 * x * * 4 / 128 + 3 * x * * 3 / 16 + 3 * x * * 2 / 8 + 3 * x / 2 + 3",
    "transformer_prediction": "- 15 * x * * 4 / 128 + 3 * x * * 3 / 16 - 3 * x * * 2 / 8 + 3 * x / 2 + 3"
  },
  {
    "function": "sinh(x) - 2",
    "true_expansion": "x**3/6 + x - 2",
    "lstm_prediction": "x * * 3 / 6 + x - 2",
    "improved_lstm_prediction": "x * * 3 / 6 + x - 2",
    "transformer_prediction": "x * * 3 / 6 + x - 2"
  },
  {
    "function": "sqrt(x + 1)",
    "true_expansion": "-5*x**4/128 + x**3/16 - x**2/8 + x/2 + 1",
    "lstm_prediction": "- 5 * x * * 4 / 128 + x * * 3 / 16 - x * * 2 / 8 + x / 2 + 1",
    "improved_lstm_prediction": "- 5 * x * * 4 / 128 + x * * 3 / 16 - x * * 2 / 8 + x / 2 + 1",
    "transformer_prediction": "- 5 * x * * 4 / 128 + x * * 3 / 16 - x * * 2 / 8 + x / 2 + 1"
  },
  {
    "function": "1/(1 - x)",
    "true_expansion": "x**4 + x**3 + x**2 + x + 1",
    "lstm_prediction": "x * * 4 + x * * 3 + x * * 2 + x + 1",
    "improved_lstm_prediction": "x * * 4 + x * * 3 + x * * 2 + x + 1",
    "transformer_prediction": "x * * 4 + x * * 3 + x * * 2 + x + 1"
  },
  {
    "function": "-sinh(x)",
    "true_expansion": "-x**3/6 - x",
    "lstm_prediction": "x * * 3 / 2 - x",
    "improved_lstm_prediction": "- x * * 3 / 6 - x",
    "transformer_prediction": "- x * * 3 / 6 - x"
  },
  {
    "function": "(-x**2 - 2*x + 1)*cos(3*x)",
    "true_expansion": "63*x**4/8 + 9*x**3 - 11*x**2/2 - 2*x + 1",
    "lstm_prediction": "63 * x * * 4 / 8 - 9 * x * * 3 - 3 * x * * 2 / 2 - 2 * x + 1",
    "improved_lstm_prediction": "63 * x * * 4 / 8 + 9 * x * * 3 / 2 + 11 * x * * 2 / 2 - 2 * x + 1",
    "transformer_prediction": "- 3 * x * * 4 / 12 + 3 * x * * 3 / 2 + 3 * x * * 2 - 3 * x - 1"
  },
  {
    "function": "-3*x + tan(x) + 2",
    "true_expansion": "x**3/3 - 2*x + 2",
    "lstm_prediction": "x * * 3 / 3 - 2 * x + 2",
    "improved_lstm_prediction": "x * * 3 / 3 - 2 * x + 2",
    "transformer_prediction": "x * * 3 / 3 + 4 * x - 3"
  },
  {
    "function": "cosh(x) + 1",
    "true_expansion": "x**4/24 + x**2/2 + 2",
    "lstm_prediction": "x * * / / 8 + 2",
    "improved_lstm_prediction": "x * * 4 / 24 + x * * 2 / 2 + 2",
    "transformer_prediction": "x * * 4 / 24 + x * * 2 / 2 + 2"
  },
  {
    "function": "9*x",
    "true_expansion": "9*x",
    "lstm_prediction": "15 * x",
    "improved_lstm_prediction": "9 * x * * 2 + 9 * x",
    "transformer_prediction": "3 * x"
  },
  {
    "function": "sin(2*x) + 1",
    "true_expansion": "-4*x**3/3 + 2*x + 1",
    "lstm_prediction": "- 4 * x * * 3 / 3 + 2 * x + 1",
    "improved_lstm_prediction": "- 4 * x * * 3 / 3 + 2 * x + 1",
    "transformer_prediction": "- 4 * x * * 3 / 3 + 2 * x + 1"
  },
  {
    "function": "x**2 + x + 3*tan(x)",
    "true_expansion": "x**3 + x**2 + 4*x",
    "lstm_prediction": "x * * 3 + 2 * x * * 2 + 5 * x",
    "improved_lstm_prediction": "x * * 3 + x * * 2 + 4 * x",
    "transformer_prediction": "x * * 3 / 3 + 3 * x * * 2 + 3 * x"
  },
  {
    "function": "x**2 - 2*x + 1/(1 - x)",
    "true_expansion": "x**4 + x**3 + 2*x**2 - x + 1",
    "lstm_prediction": "x * * 4 + x * * 3 + 3 * x * * 2 - x + 1",
    "improved_lstm_prediction": "x * * 4 + x * * 3 + 2 * x + 1",
    "transformer_prediction": "x * * 4 + x * * 3 + 3 * x * * 2 + 2 * x + 1"
  },
  {
    "function": "log(5*x + 1) - 3",
    "true_expansion": "-625*x**4/4 + 125*x**3/3 - 25*x**2/2 + 5*x - 3",
    "lstm_prediction": "- 625 * x * * 4 / 4 + 125 * x * * 3 / 3 - 25 * x * * 2 / 2 + 5 * x - 2",
    "improved_lstm_prediction": "- 625 * x * * 4 / 4 + 125 * x * * 3 / 3 - 25 * x * * 2 / 2 + 5 * x - 3",
    "transformer_prediction": "- 625 * x * * 4 / 4 + 125 * x * * 3 / 3 - 25 * x * * 2 / 2 + 5 * x - 3"
  },
  {
    "function": "sinh(x)",
    "true_expansion": "x**3/6 + x",
    "lstm_prediction": "x * * 3 / 2 + x",
    "improved_lstm_prediction": "x * * 3 / 6 + x",
    "transformer_prediction": "x * * 3 / 6 + x"
  },
  {
    "function": "exp(2*x)",
    "true_expansion": "2*x**4/3 + 4*x**3/3 + 2*x**2 + 2*x + 1",
    "lstm_prediction": "2 * x * * 4 / 3 + 4 * x * * 3 / 2 + 2 * x * * 2 + 2 * x + 1",
    "improved_lstm_prediction": "2 * x * * 4 / 3 + 4 * x * * 3 / 3 + 2 * x * * 2 + 2 * x + 1",
    "transformer_prediction": "2 * x * * 4 / 3 + 4 * x * * 3 / 3 + 2 * x * * 2 + 2 * x + 1"
  },
  {
    "function": "cosh(2*x)",
    "true_expansion": "2*x**4/3 + 2*x**2 + 1",
    "lstm_prediction": "x * * 2 / 2 + 1",
    "improved_lstm_prediction": "2 * x * * 4 / 3 + 2 * x * * 2 + 1",
    "transformer_prediction": "2 * x * * 4 / 3 + 2 * x * * 2 + 1"
  },
  {
    "function": "2*x + 4*atan(x) + 3",
    "true_expansion": "-4*x**3/3 + 6*x + 3",
    "lstm_prediction": "- 4 * x * * 3 / 3 + 6 * x + 3",
    "improved_lstm_prediction": "- 4 * x * * 3 / 3 + 6 * x + 3",
    "transformer_prediction": "- 64 * x * * 3 / 3 + 4 * x + 3"
  },
  {
    "function": "3*x**3 + 2*x**2 + 3*x + 4*sqrt(x + 1) - 1",
    "true_expansion": "-5*x**4/32 + 13*x**3/4 + 3*x**2/2 + 5*x + 3",
    "lstm_prediction": "- 5 * x * * 4 / 32 + 5 * x * * 3 / 4 + 5 * x * * 2 / 2 + 6 * x + 2",
    "improved_lstm_prediction": "- 5 * x * * 4 / 32 + 13 * x * * 3 / 4 + 3 * x * * 2 / 2 + 5 * x + 3",
    "transformer_prediction": "- 5 * x * * 4 / 32 + x * * 3 / 4 - 3 * x * * 2 / 2 + x + 5"
  },
  {
    "function": "-x",
    "true_expansion": "-x",
    "lstm_prediction": "x * * 2",
    "improved_lstm_prediction": "- x * * 3 - x",
    "transformer_prediction": "- x"
  },
  {
    "function": "log(x + 1)",
    "true_expansion": "-x**4/4 + x**3/3 - x**2/2 + x",
    "lstm_prediction": "- x * * 4 / 4 + x * * 3 / 3 - x * * 2 / 2 + x",
    "improved_lstm_prediction": "- x * * 4 / 4 + x * * 3 / 3 - x * * 2 / 2 + x",
    "transformer_prediction": "- x * * 4 / 4 + x * * 3 / 3 - x * * 2 / 2 + x"
  },
  {
    "function": "x - 2 + 1/(1 - x)",
    "true_expansion": "x**4 + x**3 + x**2 + 2*x - 1",
    "lstm_prediction": "x * * 4 + x * * 3 + 2 * x * * 2 - x + 1",
    "improved_lstm_prediction": "x * * 4 + x * * 3 + x * * 2 + 2 * x - 1",
    "transformer_prediction": "x * * 4 + x * * 3 + x * * 2 + x + 1"
  },
  {
    "function": "-2*x**3 - x**2 + x",
    "true_expansion": "-2*x**3 - x**2 + x",
    "lstm_prediction": "- 2 * x * * 3 - 2 * x * * 2 + x",
    "improved_lstm_prediction": "- 2 * x * * 3 - x * * 2 + x",
    "transformer_prediction": "- 2 * x * * 3 + 2 * x * * 2 + 2 * x"
  },
  {
    "function": "cos(x)",
    "true_expansion": "x**4/24 - x**2/2 + 1",
    "lstm_prediction": "x * * 2 / 2 + 1",
    "improved_lstm_prediction": "x * * 4 / 24 - x * * 2 / 2 + 1",
    "transformer_prediction": "x * * 4 / 24 - x * * 2 / 2 + 1"
  },
  {
    "function": "cos(x)",
    "true_expansion": "x**4/24 - x**2/2 + 1",
    "lstm_prediction": "x * * 2 / 2 + 1",
    "improved_lstm_prediction": "x * * 4 / 24 - x * * 2 / 2 + 1",
    "transformer_prediction": "x * * 4 / 24 - x * * 2 / 2 + 1"
  },
  {
    "function": "(-2*x - 1)*sqrt(x + 1)",
    "true_expansion": "-11*x**4/128 + 3*x**3/16 - 7*x**2/8 - 5*x/2 - 1",
    "lstm_prediction": "- 23 * x * * 4 / 128 + 7 * x * * 3 / 16 - 7 * x * * 2 / 8 - 5 * x / 2 - 1",
    "improved_lstm_prediction": "- 3 * x * * 4 / 128 + x * * 3 / 8 - 3 * x * * 2 / 8 - 3 * x / 2 - 1",
    "transformer_prediction": "- 5 * x * * 4 / 64 + x * * 3 / 8 - x * * 2 / 4 - x - 2"
  },
  {
    "function": "-3*x**3 - 3*x**2 + 4*x + 2",
    "true_expansion": "-3*x**3 - 3*x**2 + 4*x + 2",
    "lstm_prediction": "- 3 * x * * 3 - x * * 2 + 4 * x + 2",
    "improved_lstm_prediction": "- 3 * x * * 3 - 3 * x * * 2 + 4 * x + 2",
    "transformer_prediction": "- 3 * x * * 3 + 3 * x * * 2 + 4 * x + 3"
  },
  {
    "function": "sinh(5*x)",
    "true_expansion": "125*x**3/6 + 5*x",
    "lstm_prediction": "125 * x * * 3 / 6 + 5 * x",
    "improved_lstm_prediction": "125 * x * * 3 / 6 + 5 * x",
    "transformer_prediction": "125 * x * * 3 / 6 + 5 * x"
  },
  {
    "function": "3*x",
    "true_expansion": "3*x",
    "lstm_prediction": "3 * x",
    "improved_lstm_prediction": "3 * x * * 2 + 3 * x",
    "transformer_prediction": "3 * x"
  },
  {
    "function": "-2*x**2 - 3*x + sinh(x) + 3",
    "true_expansion": "x**3/6 - 2*x**2 - 2*x + 3",
    "lstm_prediction": "x * * 3 / 6 - 2 * x * * 2 - x + 3",
    "improved_lstm_prediction": "x * * 3 / 3 - 2 * x * * 2 - 2 * x + 3",
    "transformer_prediction": "x * * 3 / 6 - 2 * x * * 2 + 4 * x + 3"
  },
  {
    "function": "sqrt(x + 1)",
    "true_expansion": "-5*x**4/128 + x**3/16 - x**2/8 + x/2 + 1",
    "lstm_prediction": "- 5 * x * * 4 / 128 + x * * 3 / 16 - x * * 2 / 8 + x / 2 + 1",
    "improved_lstm_prediction": "- 5 * x * * 4 / 128 + x * * 3 / 16 - x * * 2 / 8 + x / 2 + 1",
    "transformer_prediction": "- 5 * x * * 4 / 128 + x * * 3 / 16 - x * * 2 / 8 + x / 2 + 1"
  },
  {
    "function": "2*exp(x)",
    "true_expansion": "x**4/12 + x**3/3 + x**2 + 2*x + 2",
    "lstm_prediction": "x * * 4 / 12 + x * * 3 / 2 + 2 * x * * 2 + x + 4",
    "improved_lstm_prediction": "x * * 4 / 12 + x * * 3 / 3 + x * * 2 + 2 * x + 2",
    "transformer_prediction": "2 * x * * 4 / 3 + 4 * x * * 3 / 3 + 2 * x * * 2 + 2 * x + 1"
  },
  {
    "function": "sinh(x)",
    "true_expansion": "x**3/6 + x",
    "lstm_prediction": "x * * 3 / 2 + x",
    "improved_lstm_prediction": "x * * 3 / 6 + x",
    "transformer_prediction": "x * * 3 / 6 + x"
  },
  {
    "function": "3*tan(x)",
    "true_expansion": "x**3 + 3*x",
    "lstm_prediction": "x * * 3 + 3 * x",
    "improved_lstm_prediction": "x * * 3 + 3 * x",
    "transformer_prediction": "9 * x * * 3 + 3 * x"
  },
  {
    "function": "4*cos(x)",
    "true_expansion": "x**4/6 - 2*x**2 + 4",
    "lstm_prediction": "x * * 2 / 2 + 4",
    "improved_lstm_prediction": "x * * 4 / 6 - 2 * x * * 2 + 4",
    "transformer_prediction": "x * * 4 / 6 - 2 * x * * 2 + 4"
  },
  {
    "function": "(-x**2 - 2*x + 4)*cos(x)",
    "true_expansion": "2*x**4/3 + x**3 - 3*x**2 - 2*x + 4",
    "lstm_prediction": "2 * x * * 4 / 3 - x * * 3 + 4 * x * * 2 - x + 4",
    "improved_lstm_prediction": "5 * x * * 4 / 6 - x * * 3 - x * * 2 - 2 * x + 4",
    "transformer_prediction": "- 11 * x * * 4 / 6 + x * * 3 + 2 * x * * 2 - 4 * x + 4"
  },
  {
    "function": "sqrt(x + 1)",
    "true_expansion": "-5*x**4/128 + x**3/16 - x**2/8 + x/2 + 1",
    "lstm_prediction": "- 5 * x * * 4 / 128 + x * * 3 / 16 - x * * 2 / 8 + x / 2 + 1",
    "improved_lstm_prediction": "- 5 * x * * 4 / 128 + x * * 3 / 16 - x * * 2 / 8 + x / 2 + 1",
    "transformer_prediction": "- 5 * x * * 4 / 128 + x * * 3 / 16 - x * * 2 / 8 + x / 2 + 1"
  },
  {
    "function": "sinh(x) - 3",
    "true_expansion": "x**3/6 + x - 3",
    "lstm_prediction": "x * * 3 / 6 + x - 3",
    "improved_lstm_prediction": "x * * 3 / 6 + x - 3",
    "transformer_prediction": "x * * 3 / 6 + x - 3"
  },
  {
    "function": "x",
    "true_expansion": "x",
    "lstm_prediction": "x * * 2 / 2 + 1",
    "improved_lstm_prediction": "x * * 3 + x",
    "transformer_prediction": "x"
  },
  {
    "function": "sinh(x)",
    "true_expansion": "x**3/6 + x",
    "lstm_prediction": "x * * 3 / 2 + x",
    "improved_lstm_prediction": "x * * 3 / 6 + x",
    "transformer_prediction": "x * * 3 / 6 + x"
  },
  {
    "function": "x + exp(2*x) - 3",
    "true_expansion": "2*x**4/3 + 4*x**3/3 + 2*x**2 + 3*x - 2",
    "lstm_prediction": "2 * x * * 4 / 3 + 4 * x * * 3 / 3 + 2 * x * * 2 + x - 2",
    "improved_lstm_prediction": "2 * x * * 4 / 3 + 4 * x * * 3 / 3 + 2 * x * * 2 + 3 * x - 2",
    "transformer_prediction": "x * * 4 / 12 + x * * 3 / 3 + x * * 2 + 3 * x + 3"
  },
  {
    "function": "sqrt(x + 1)",
    "true_expansion": "-5*x**4/128 + x**3/16 - x**2/8 + x/2 + 1",
    "lstm_prediction": "- 5 * x * * 4 / 128 + x * * 3 / 16 - x * * 2 / 8 + x / 2 + 1",
    "improved_lstm_prediction": "- 5 * x * * 4 / 128 + x * * 3 / 16 - x * * 2 / 8 + x / 2 + 1",
    "transformer_prediction": "- 5 * x * * 4 / 128 + x * * 3 / 16 - x * * 2 / 8 + x / 2 + 1"
  },
  {
    "function": "cos(x)",
    "true_expansion": "x**4/24 - x**2/2 + 1",
    "lstm_prediction": "x * * 2 / 2 + 1",
    "improved_lstm_prediction": "x * * 4 / 24 - x * * 2 / 2 + 1",
    "transformer_prediction": "x * * 4 / 24 - x * * 2 / 2 + 1"
  },
  {
    "function": "sqrt(x + 1)",
    "true_expansion": "-5*x**4/128 + x**3/16 - x**2/8 + x/2 + 1",
    "lstm_prediction": "- 5 * x * * 4 / 128 + x * * 3 / 16 - x * * 2 / 8 + x / 2 + 1",
    "improved_lstm_prediction": "- 5 * x * * 4 / 128 + x * * 3 / 16 - x * * 2 / 8 + x / 2 + 1",
    "transformer_prediction": "- 5 * x * * 4 / 128 + x * * 3 / 16 - x * * 2 / 8 + x / 2 + 1"
  },
  {
    "function": "5*sqrt(x + 1)",
    "true_expansion": "-25*x**4/128 + 5*x**3/16 - 5*x**2/8 + 5*x/2 + 5",
    "lstm_prediction": "- 25 * x * * 4 / 128 + 5 * x * * 3 / 16 - 5 * x * * 2 / 8 + 5 * x / 2 + 5",
    "improved_lstm_prediction": "- 25 * x * * 4 / 128 + 5 * x * * 3 / 16 - 5 * x * * 2 / 8 + 5 * x / 2 + 3",
    "transformer_prediction": "- 25 * x * * 4 / 128 + 5 * x * * 3 / 16 - 5 * x * * 2 / 8 + 5 * x / 2 + 5"
  },
  {
    "function": "4*atan(x)",
    "true_expansion": "-4*x**3/3 + 4*x",
    "lstm_prediction": "- 4 * x * * 3 / 3 + 4 * x",
    "improved_lstm_prediction": "- 4 * x * * 3 / 3 + 4 * x",
    "transformer_prediction": "- 4 * x * * 3 / 3 + 4 * x"
  },
  {
    "function": "-3*x**2 - 3*x + 4*log(x + 1) + 2",
    "true_expansion": "-x**4 + 4*x**3/3 - 5*x**2 + x + 2",
    "lstm_prediction": "- x * * 4 + 4 * x * * 3 / 3 - 5 * x * * 2 / 2 + 4 * x - 2",
    "improved_lstm_prediction": "- x * * 4 + 4 * x * * 3 / 3 - 5 * x * * 2 + x + 2",
    "transformer_prediction": "- x * * 4 + 4 * x * * 3 / 3 - 2 * x * * 2 + 5 * x + 3"
  },
  {
    "function": "4/(1 - x)",
    "true_expansion": "4*x**4 + 4*x**3 + 4*x**2 + 4*x + 4",
    "lstm_prediction": "4 * x * * 4 + 4 * x * * 3 + 4 * x * * 2 + 4 * x + 4",
    "improved_lstm_prediction": "4 * x * * 4 + 4 * x * * 3 + 4 * x * * 2 + 4 * x + 4",
    "transformer_prediction": "4 * x * * 4 + 4 * x * * 3 + 4 * x * * 2 + 4 * x + 4"
  },
  {
    "function": "2*x + log(x + 1) + 1",
    "true_expansion": "-x**4/4 + x**3/3 - x**2/2 + 3*x + 1",
    "lstm_prediction": "- x * * 4 / 4 + x * * 3 / 3 - 5 * x * * 2 / 2 + 4 * x + 1",
    "improved_lstm_prediction": "- x * * 4 / 4 + x * * 3 / 3 - x * * 2 / 2 + 3 * x + 1",
    "transformer_prediction": "- x * * 4 / 4 + x * * 3 / 3 - x * * 2 / 2 + 3 * x + 1"
  },
  {
    "function": "exp(3*x) - 1",
    "true_expansion": "27*x**4/8 + 9*x**3/2 + 9*x**2/2 + 3*x",
    "lstm_prediction": "27 * x * * 4 / 8 + 9 * x * * 3 / 2 + 9 * x * * 2 / 2 + 3 * x",
    "improved_lstm_prediction": "27 * x * * 4 / 8 + 9 * x * * 3 / 2 + 9 * x * * 2 / 2 + 3 * x",
    "transformer_prediction": "27 * x * * 4 / 8 + 9 * x * * 3 / 2 + 9 * x * * 2 / 2 + 3 * x - 2"
  },
  {
    "function": "5*log(x + 1)",
    "true_expansion": "-5*x**4/4 + 5*x**3/3 - 5*x**2/2 + 5*x",
    "lstm_prediction": "- 5 * x * * 4 / 4 + 5 * x * * 3 / 3 - 5 * x * * 2 / 2 + 5 * x",
    "improved_lstm_prediction": "- 5 * x * * 4 / 4 + 5 * x * * 3 / 3 - 5 * x * * 2 / 2 + 5 * x",
    "transformer_prediction": "- 625 * x * * 4 / 4 + 125 * x * * 3 / 3 - 25 * x * * 2 / 2 + 5 * x"
  },
  {
    "function": "sin(x)",
    "true_expansion": "-x**3/6 + x",
    "lstm_prediction": "* x * * 3 / 2 + 5 * x",
    "improved_lstm_prediction": "- x * * 3 / 6 + x",
    "transformer_prediction": "- x * * 3 / 6 + x"
  },
  {
    "function": "2*x",
    "true_expansion": "2*x",
    "lstm_prediction": "2 * x",
    "improved_lstm_prediction": "2 * x * * 2 + 2 * x",
    "transformer_prediction": "2 * x"
  },
  {
    "function": "2*sin(x)",
    "true_expansion": "-x**3/3 + 2*x",
    "lstm_prediction": "x * * 3 / 3 + 2 * x",
    "improved_lstm_prediction": "- x * * 3 / 3 + 2 * x",
    "transformer_prediction": "- 4 * x * * 3 / 3 + 2 * x"
  },
  {
    "function": "5*x",
    "true_expansion": "5*x",
    "lstm_prediction": "5 * x",
    "improved_lstm_prediction": "5 * x * * 3 / 2 + 5 * x",
    "transformer_prediction": "5 * x"
  },
  {
    "function": "atan(x)",
    "true_expansion": "-x**3/3 + x",
    "lstm_prediction": "* x * * 3 / 3 + x",
    "improved_lstm_prediction": "- x * * 3 / 3 + x",
    "transformer_prediction": "- x * * 3 / 3 + x"
  },
  {
    "function": "tan(5*x)",
    "true_expansion": "125*x**3/3 + 5*x",
    "lstm_prediction": "125 * x * * 3 / 3 + 5 * x",
    "improved_lstm_prediction": "125 * x * * 3 / 3 + 5 * x",
    "transformer_prediction": "5 * x * * 3 / 3 + 5 * x"
  },
  {
    "function": "4*exp(x)",
    "true_expansion": "x**4/6 + 2*x**3/3 + 2*x**2 + 4*x + 4",
    "lstm_prediction": "x * * 4 / 6 + 2 * x * * 3 / 3 + 2 * x * * 2 + 4 * x + 4",
    "improved_lstm_prediction": "x * * 4 / 6 + 2 * x * * 3 / 3 + 2 * x * * 2 + 4 * x + 4",
    "transformer_prediction": "32 * x * * 4 / 3 + 32 * x * * 3 / 3 + 8 * x * * 2 + 4 * x + 1"
  },
  {
    "function": "1/(1 - x)",
    "true_expansion": "x**4 + x**3 + x**2 + x + 1",
    "lstm_prediction": "x * * 4 + x * * 3 + x * * 2 + x + 1",
    "improved_lstm_prediction": "x * * 4 + x * * 3 + x * * 2 + x + 1",
    "transformer_prediction": "x * * 4 + x * * 3 + x * * 2 + x + 1"
  },
  {
    "function": "cosh(x)",
    "true_expansion": "x**4/24 + x**2/2 + 1",
    "lstm_prediction": "x * * 2 / 2 + 1",
    "improved_lstm_prediction": "x * * 4 / 24 + x * * 2 / 2 + 1",
    "transformer_prediction": "x * * 4 / 24 + x * * 2 / 2 + 1"
  },
  {
    "function": "sinh(x)",
    "true_expansion": "x**3/6 + x",
    "lstm_prediction": "x * * 3 / 2 + x",
    "improved_lstm_prediction": "x * * 3 / 6 + x",
    "transformer_prediction": "x * * 3 / 6 + x"
  },
  {
    "function": "sinh(x)",
    "true_expansion": "x**3/6 + x",
    "lstm_prediction": "x * * 3 / 2 + x",
    "improved_lstm_prediction": "x * * 3 / 6 + x",
    "transformer_prediction": "x * * 3 / 6 + x"
  },
  {
    "function": "sqrt(x + 1)",
    "true_expansion": "-5*x**4/128 + x**3/16 - x**2/8 + x/2 + 1",
    "lstm_prediction": "- 5 * x * * 4 / 128 + x * * 3 / 16 - x * * 2 / 8 + x / 2 + 1",
    "improved_lstm_prediction": "- 5 * x * * 4 / 128 + x * * 3 / 16 - x * * 2 / 8 + x / 2 + 1",
    "transformer_prediction": "- 5 * x * * 4 / 128 + x * * 3 / 16 - x * * 2 / 8 + x / 2 + 1"
  },
  {
    "function": "tan(5*x)",
    "true_expansion": "125*x**3/3 + 5*x",
    "lstm_prediction": "125 * x * * 3 / 3 + 5 * x",
    "improved_lstm_prediction": "125 * x * * 3 / 3 + 5 * x",
    "transformer_prediction": "5 * x * * 3 / 3 + 5 * x"
  },
  {
    "function": "3*(4 - 3*x)*cosh(x)",
    "true_expansion": "x**4/2 - 9*x**3/2 + 6*x**2 - 9*x + 12",
    "lstm_prediction": "- 27 * x * * 4 / 8 - 27 * x * * 3 / 2 + 27 * x * * 2 / 2 + 12 * x + 3",
    "improved_lstm_prediction": "x * * 4 / 2 - 3 * x * * 3 / 2 - 3 * x * * 2 - 3 * x + 3",
    "transformer_prediction": "- x * * 4 / 3 + 3 * x * * 3 / 2 + 3 * x * * 2 + 4"
  },
  {
    "function": "2*cosh(x) - 1",
    "true_expansion": "x**4/12 + x**2 + 1",
    "lstm_prediction": "x * * 4 / 12 + x * * 2 + 2",
    "improved_lstm_prediction": "x * * 4 / 12 + x * * 2 + 1",
    "transformer_prediction": "2 * x * * 4 / 3 + 2 * x * * 2"
  },
  {
    "function": "2*(4 - 3*x)*sinh(x)",
    "true_expansion": "-x**4 + 4*x**3/3 - 6*x**2 + 8*x",
    "lstm_prediction": "- 2 * x * * 4 / 3 - 8 * x * * 3 + 8 * x * * 2 + 12 * x",
    "improved_lstm_prediction": "- x * * 4 - 8 * x * * 3 / 3 - 8 * x * * 2 + 8 * x",
    "transformer_prediction": "- 8 * x * * 4 - 8 * x * * 3 / 3 - 8 * x * * 2 + 8 * x"
  },
  {
    "function": "cos(x)",
    "true_expansion": "x**4/24 - x**2/2 + 1",
    "lstm_prediction": "x * * 2 / 2 + 1",
    "improved_lstm_prediction": "x * * 4 / 24 - x * * 2 / 2 + 1",
    "transformer_prediction": "x * * 4 / 24 - x * * 2 / 2 + 1"
  },
  {
    "function": "sqrt(x + 1)",
    "true_expansion": "-5*x**4/128 + x**3/16 - x**2/8 + x/2 + 1",
    "lstm_prediction": "- 5 * x * * 4 / 128 + x * * 3 / 16 - x * * 2 / 8 + x / 2 + 1",
    "improved_lstm_prediction": "- 5 * x * * 4 / 128 + x * * 3 / 16 - x * * 2 / 8 + x / 2 + 1",
    "transformer_prediction": "- 5 * x * * 4 / 128 + x * * 3 / 16 - x * * 2 / 8 + x / 2 + 1"
  },
  {
    "function": "atan(x)",
    "true_expansion": "-x**3/3 + x",
    "lstm_prediction": "* x * * 3 / 3 + x",
    "improved_lstm_prediction": "- x * * 3 / 3 + x",
    "transformer_prediction": "- x * * 3 / 3 + x"
  },
  {
    "function": "2*cos(x)",
    "true_expansion": "x**4/12 - x**2 + 2",
    "lstm_prediction": "x * * 2 / 2 + 2",
    "improved_lstm_prediction": "x * * 4 / 12 - x * * 2 + 2",
    "transformer_prediction": "2 * x * * 4 / 3 - 2 * x * * 2 + 1"
  },
  {
    "function": "x",
    "true_expansion": "x",
    "lstm_prediction": "x * * 2 / 2 + 1",
    "improved_lstm_prediction": "x * * 3 + x",
    "transformer_prediction": "x"
  },
  {
    "function": "atan(x)",
    "true_expansion": "-x**3/3 + x",
    "lstm_prediction": "* x * * 3 / 3 + x",
    "improved_lstm_prediction": "- x * * 3 / 3 + x",
    "transformer_prediction": "- x * * 3 / 3 + x"
  },
  {
    "function": "cosh(x)",
    "true_expansion": "x**4/24 + x**2/2 + 1",
    "lstm_prediction": "x * * 2 / 2 + 1",
    "improved_lstm_prediction": "x * * 4 / 24 + x * * 2 / 2 + 1",
    "transformer_prediction": "x * * 4 / 24 + x * * 2 / 2 + 1"
  },
  {
    "function": "2*cosh(x)",
    "true_expansion": "x**4/12 + x**2 + 2",
    "lstm_prediction": "x * * 4 / 8 + 3 * x * * 2 / 2 + 3",
    "improved_lstm_prediction": "x * * 4 / 12 + x * * 2 + 2",
    "transformer_prediction": "2 * x * * 4 / 3 + 2 * x * * 2 + 1"
  },
  {
    "function": "2*sinh(x)",
    "true_expansion": "x**3/3 + 2*x",
    "lstm_prediction": "x * * 3 / 3 + 2 * x",
    "improved_lstm_prediction": "x * * 3 / 3 + 2 * x",
    "transformer_prediction": "4 * x * * 3 / 3 + 2 * x"
  },
  {
    "function": "sqrt(3*x + 1) - 2",
    "true_expansion": "-405*x**4/128 + 27*x**3/16 - 9*x**2/8 + 3*x/2 - 1",
    "lstm_prediction": "- 405 * x * * 4 / 128 + 27 * x * * 3 / 16 - 9 * x * * 2 / 8 + 3 * x / 2 - 1",
    "improved_lstm_prediction": "- 405 * x * * 4 / 128 + 27 * x * * 3 / 16 - 9 * x * * 2 / 8 + 3 * x / 2 - 1",
    "transformer_prediction": "- 15 * x * * 4 / 128 + 3 * x * * 3 / 16 - 3 * x * * 2 / 8 + 3 * x / 2 - 1"
  },
  {
    "function": "tan(x)",
    "true_expansion": "x**3/3 + x",
    "lstm_prediction": "x * * 3 / 3 + x",
    "improved_lstm_prediction": "x * * 3 / 3 + x",
    "transformer_prediction": "x * * 3 / 3 + x"
  },
  {
    "function": "5*x*(2*x**2 + x + 2)",
    "true_expansion": "10*x**3 + 5*x**2 + 10*x",
    "lstm_prediction": "5 * x * * 3 + 10 * x * * 2 + 10 * x",
    "improved_lstm_prediction": "10 * x * * 3 + 10 * x * * 2 + 2 * x",
    "transformer_prediction": "5 * x * * 4 + 10 * x * * 3 + 10 * x * * 2 + 10 * x"
  },
  {
    "function": "4*sinh(x)",
    "true_expansion": "2*x**3/3 + 4*x",
    "lstm_prediction": "2 * x * * 3 / 3 + 4 * x",
    "improved_lstm_prediction": "2 * x * * 3 / 3 + 4 * x",
    "transformer_prediction": "32 * x * * 3 / 3 + 4 * x"
  },
  {
    "function": "2*x**2 + 2*tan(x) - 3",
    "true_expansion": "2*x**3/3 + 2*x**2 + 2*x - 3",
    "lstm_prediction": "2 * x * * 3 / 3 + 2 * x * * 2 + x - 3",
    "improved_lstm_prediction": "2 * x * * 3 / 3 + 2 * x * * 2 + 2 * x - 3",
    "transformer_prediction": "2 * x * * 3 / 3 + 2 * x * * 2 + 2 * x - 3"
  },
  {
    "function": "-2*x + 1/(1 - x)",
    "true_expansion": "x**4 + x**3 + x**2 - x + 1",
    "lstm_prediction": "x * * 4 + x * * 3 + x * * 2 - x",
    "improved_lstm_prediction": "x * * 4 + x * * 3 + x * * 2 - x + 1",
    "transformer_prediction": "x * * 4 + x * * 3 + x * * 2 + 2 * x + 1"
  },
  {
    "function": "4*x",
    "true_expansion": "4*x",
    "lstm_prediction": "4 * x + 1",
    "improved_lstm_prediction": "4 * x",
    "transformer_prediction": "4 * x"
  },
  {
    "function": "4*cosh(x)",
    "true_expansion": "x**4/6 + 2*x**2 + 4",
    "lstm_prediction": "x * * 4 / 6 + 2 * x * * 2 + 4",
    "improved_lstm_prediction": "x * * 4 / 6 + 2 * x * * 2 + 4",
    "transformer_prediction": "x * * 4 / 6 + 2 * x * * 2 + 4"
  },
  {
    "function": "atan(5*x)",
    "true_expansion": "-125*x**3/3 + 5*x",
    "lstm_prediction": "* x * * 3 / 3 + 5 * x",
    "improved_lstm_prediction": "- 125 * x * * 3 / 3 + 5 * x",
    "transformer_prediction": "- 125 * x * * 3 / 3 + 5 * x"
  },
  {
    "function": "x**2 - 2*x + 3*exp(x) - 1",
    "true_expansion": "x**4/8 + x**3/2 + 5*x**2/2 + x + 2",
    "lstm_prediction": "x * * 4 / 8 + x * * 3 / 2 + x * * 2 / 2 + 2 * x",
    "improved_lstm_prediction": "x * * 4 / 8 + x * * 3 / 2 + 5 * x * * 2 / 2 + x + 2",
    "transformer_prediction": "x * * 4 / 12 + x * * 3 / 3 + x * * 2 + 2 * x - 2"
  },
  {
    "function": "2*x**2 + 2*x + 2 + 1/(1 - 2*x)",
    "true_expansion": "16*x**4 + 8*x**3 + 6*x**2 + 4*x + 3",
    "lstm_prediction": "16 * x * * 4 + 8 * x * * 3 + 7 * x * * 2 + 7 * x + 2",
    "improved_lstm_prediction": "16 * x * * 4 + 8 * x * * 3 + 6 * x * * 2 + 6 * x + 3",
    "transformer_prediction": "16 * x * * 4 + 8 * x * * 3 + 6 * x * * 2 + 5 * x + 3"
  },
  {
    "function": "3*x**3 + 2*x**2 + log(x + 1)",
    "true_expansion": "-x**4/4 + 10*x**3/3 + 3*x**2/2 + x",
    "lstm_prediction": "* x * * 4 / 4 + 8 * x * * 3 / 3 + x * * 2 / 2 + 2 * x",
    "improved_lstm_prediction": "- x * * 4 / 4 + 10 * x * * 3 / 3 + x * * 2 / 2 + x",
    "transformer_prediction": "- 3 * x * * 4 / 4 + 2 * x * * 3 + 3 * x * * 2 / 2 + 3 * x"
  },
  {
    "function": "(-3*x**3 - 3*x**2 + 4)*cos(x)",
    "true_expansion": "5*x**4/3 - 3*x**3 - 5*x**2 + 4",
    "lstm_prediction": "- 11 * x * * 4 / 6 + x * * 3 + 2 * x * * 2 + x + 4",
    "improved_lstm_prediction": "- 5 * x * * 4 / 3 + x * * 3 - 3 * x * * 2 + 4",
    "transformer_prediction": "- 11 * x * * 4 / 6 + x * * 3 / 2 + 3 * x * * 2 + 4 * x + 4"
  },
  {
    "function": "(2*x + 1)*sinh(4*x)",
    "true_expansion": "64*x**4/3 + 32*x**3/3 + 8*x**2 + 4*x",
    "lstm_prediction": "32 * x * * 4 / 3 + 32 * x * * 3 / 3 + 4 * x * * 2 + 4 * x",
    "improved_lstm_prediction": "32 * x * * 4 / 3 + 32 * x * * 3 / 3 + 8 * x * * 2 + 4 * x",
    "transformer_prediction": "32 * x * * 4 / 3 + 32 * x * * 3 / 3 + 8 * x * * 2 + 4 * x"
  },
  {
    "function": "exp(x) - 2",
    "true_expansion": "x**4/24 + x**3/6 + x**2/2 + x - 1",
    "lstm_prediction": "x * * 4 / 24 + x * * 3 / 6 + x * * 2 / 2 + x - 1",
    "improved_lstm_prediction": "x * * 4 / 24 + x * * 3 / 6 + x * * 2 / 2 + x - 1",
    "transformer_prediction": "x * * 4 / 24 + x * * 3 / 6 + x * * 2 / 2 + x - 1"
  },
  {
    "function": "sqrt(5*x + 1)",
    "true_expansion": "-3125*x**4/128 + 125*x**3/16 - 25*x**2/8 + 5*x/2 + 1",
    "lstm_prediction": "* x * * 4 / 128 + x * * 3 / 16 - x * * 2 / 8 + x / 2 + 1",
    "improved_lstm_prediction": "- 3125 * x * * 4 / 128 + 125 * x * * 3 / 16 - 25 * x * * 2 / 8 + 5 * x / 2 + 1",
    "transformer_prediction": "- 25 * x * * 4 / 128 + 5 * x * * 3 / 16 - 5 * x * * 2 / 8 + 5 * x / 2 + 5"
  },
  {
    "function": "3*x**2 - x + cos(5*x) - 3",
    "true_expansion": "625*x**4/24 - 19*x**2/2 - x - 2",
    "lstm_prediction": "625 * x * * 4 / 24 - 19 * x * * 2 / 2 - 3 * x + 2",
    "improved_lstm_prediction": "625 * x * * 4 / 24 - 31 * x * * 2 / 2 - x - 2",
    "transformer_prediction": "625 * x * * 4 / 24 - 27 * x * * 2 / 2 - 3 * x + 2"
  },
  {
    "function": "-2*x + sin(4*x) + 2",
    "true_expansion": "-32*x**3/3 + 2*x + 2",
    "lstm_prediction": "- 32 * x * * 3 / 3 + 2 * x + 2",
    "improved_lstm_prediction": "- 32 * x * * 3 / 3 + 2 * x + 2",
    "transformer_prediction": "- 32 * x * * 3 / 3 + 6 * x + 2"
  },
  {
    "function": "atan(x)",
    "true_expansion": "-x**3/3 + x",
    "lstm_prediction": "* x * * 3 / 3 + x",
    "improved_lstm_prediction": "- x * * 3 / 3 + x",
    "transformer_prediction": "- x * * 3 / 3 + x"
  },
  {
    "function": "4*cosh(x)",
    "true_expansion": "x**4/6 + 2*x**2 + 4",
    "lstm_prediction": "x * * 4 / 6 + 2 * x * * 2 + 4",
    "improved_lstm_prediction": "x * * 4 / 6 + 2 * x * * 2 + 4",
    "transformer_prediction": "x * * 4 / 6 + 2 * x * * 2 + 4"
  },
  {
    "function": "log(x + 1)",
    "true_expansion": "-x**4/4 + x**3/3 - x**2/2 + x",
    "lstm_prediction": "- x * * 4 / 4 + x * * 3 / 3 - x * * 2 / 2 + x",
    "improved_lstm_prediction": "- x * * 4 / 4 + x * * 3 / 3 - x * * 2 / 2 + x",
    "transformer_prediction": "- x * * 4 / 4 + x * * 3 / 3 - x * * 2 / 2 + x"
  },
  {
    "function": "tan(3*x)",
    "true_expansion": "9*x**3 + 3*x",
    "lstm_prediction": "9 * x * * 3 + 3 * x",
    "improved_lstm_prediction": "9 * x * * 3 + 3 * x",
    "transformer_prediction": "9 * x * * 3 + 3 * x"
  },
  {
    "function": "cosh(x)",
    "true_expansion": "x**4/24 + x**2/2 + 1",
    "lstm_prediction": "x * * 2 / 2 + 1",
    "improved_lstm_prediction": "x * * 4 / 24 + x * * 2 / 2 + 1",
    "transformer_prediction": "x * * 4 / 24 + x * * 2 / 2 + 1"
  },
  {
    "function": "4*(2*x**2 + 2)*log(x + 1)",
    "true_expansion": "-6*x**4 + 32*x**3/3 - 4*x**2 + 8*x",
    "lstm_prediction": "- 8 * x * * 4 / 3 + 4 * x * * 3 / 3 + 4 * x * * 2 + 4 * x",
    "improved_lstm_prediction": "- 8 * x * * 4 / 3 - 8 * x * * 3 / 3 + 8 * x * * 2 + 8 * x",
    "transformer_prediction": "- 16 * x * * 4 + 40 * x * * 3 / 3 - 8 * x * * 2 + 8 * x"
  },
  {
    "function": "0",
    "true_expansion": "0",
    "lstm_prediction": "* x + 1",
    "improved_lstm_prediction": "0",
    "transformer_prediction": "0"
  },
  {
    "function": "exp(x)",
    "true_expansion": "x**4/24 + x**3/6 + x**2/2 + x + 1",
    "lstm_prediction": "x * * 4 / 24 + x * * 2 / 2 + x + 1",
    "improved_lstm_prediction": "x * * 4 / 24 + x * * 3 / 6 + x * * 2 + x + 1",
    "transformer_prediction": "x * * 4 / 24 + x * * 3 / 6 + x * * 2 / 2 + x + 1"
  },
  {
    "function": "sin(2*x)",
    "true_expansion": "-4*x**3/3 + 2*x",
    "lstm_prediction": "* x * * 3 / 2 + 3 * x",
    "improved_lstm_prediction": "- 4 * x * * 3 / 3 + 2 * x",
    "transformer_prediction": "- 4 * x * * 3 / 3 + 2 * x"
  },
  {
    "function": "-x**2 + 3*x + 4*cos(x) + 2",
    "true_expansion": "x**4/6 - 3*x**2 + 3*x + 6",
    "lstm_prediction": "x * * 4 / 6 - x * * 2 + 6 * x + 6",
    "improved_lstm_prediction": "x * * 4 / 6 - x * * 2 + 3 * x + 6",
    "transformer_prediction": "x * * 4 / 6 + 2 * x * * 3 - 2 * x * * 2 + x + 5"
  },
  {
    "function": "log(x + 1)",
    "true_expansion": "-x**4/4 + x**3/3 - x**2/2 + x",
    "lstm_prediction": "- x * * 4 / 4 + x * * 3 / 3 - x * * 2 / 2 + x",
    "improved_lstm_prediction": "- x * * 4 / 4 + x * * 3 / 3 - x * * 2 / 2 + x",
    "transformer_prediction": "- x * * 4 / 4 + x * * 3 / 3 - x * * 2 / 2 + x"
  },
  {
    "function": "x",
    "true_expansion": "x",
    "lstm_prediction": "x * * 2 / 2 + 1",
    "improved_lstm_prediction": "x * * 3 + x",
    "transformer_prediction": "x"
  },
  {
    "function": "sqrt(2*x + 1)",
    "true_expansion": "-5*x**4/8 + x**3/2 - x**2/2 + x + 1",
    "lstm_prediction": "- 5 * x * * 4 / 8 + x * * 2 / 2 + x + 1",
    "improved_lstm_prediction": "- 5 * x * * 4 / 8 + x * * 3 / 2 - x * * 2 / 2 + x + 1",
    "transformer_prediction": "- 5 * x * * 4 / 64 + x * * 3 / 8 - x * * 2 / 4 + x + 2"
  },
  {
    "function": "4*(-2*x**3 + x**2 - 2*x + 4)*cos(x)",
    "true_expansion": "-4*x**4/3 - 4*x**3 - 4*x**2 - 8*x + 16",
    "lstm_prediction": "- 11 * x * * 4 / 3 - 4 * x * * 3 + 8 * x * * 2 - 8 * x + 8",
    "improved_lstm_prediction": "- 11 * x * * 4 / 3 - 8 * x * * 3 + 4 * x * * 2 - 8 * x + 8",
    "transformer_prediction": "- 11 * x * * 4 / 6 + x * * 3 + 2 * x * * 2 + 8 * x + 4"
  },
  {
    "function": "3*x**2 + 3*x + atan(x) + 3",
    "true_expansion": "-x**3/3 + 3*x**2 + 4*x + 3",
    "lstm_prediction": "- x * * 3 / 3 + 3 * x * * 2 + 4 * x + 3",
    "improved_lstm_prediction": "- x * * 3 / 3 + 3 * x * * 2 + 4 * x + 3",
    "transformer_prediction": "- 2 * x * * 3 / 3 + 3 * x * * 2 + 5 * x + 3"
  },
  {
    "function": "x",
    "true_expansion": "x",
    "lstm_prediction": "x * * 2 / 2 + 1",
    "improved_lstm_prediction": "x * * 3 + x",
    "transformer_prediction": "x"
  },
  {
    "function": "exp(x)",
    "true_expansion": "x**4/24 + x**3/6 + x**2/2 + x + 1",
    "lstm_prediction": "x * * 4 / 24 + x * * 2 / 2 + x + 1",
    "improved_lstm_prediction": "x * * 4 / 24 + x * * 3 / 6 + x * * 2 + x + 1",
    "transformer_prediction": "x * * 4 / 24 + x * * 3 / 6 + x * * 2 / 2 + x + 1"
  },
  {
    "function": "atan(x)",
    "true_expansion": "-x**3/3 + x",
    "lstm_prediction": "* x * * 3 / 3 + x",
    "improved_lstm_prediction": "- x * * 3 / 3 + x",
    "transformer_prediction": "- x * * 3 / 3 + x"
  },
  {
    "function": "2*x**3 + 3*x**2 - x + sin(x)",
    "true_expansion": "11*x**3/6 + 3*x**2",
    "lstm_prediction": "13 * x * * 3 / 6 + 2 * x * * 2 - x",
    "improved_lstm_prediction": "5 * x * * 3 / 6 + 3 * x * * 2",
    "transformer_prediction": "- 17 * x * * 3 / 6 + 3 * x * * 2 + 2 * x"
  },
  {
    "function": "tan(x)",
    "true_expansion": "x**3/3 + x",
    "lstm_prediction": "x * * 3 / 3 + x",
    "improved_lstm_prediction": "x * * 3 / 3 + x",
    "transformer_prediction": "x * * 3 / 3 + x"
  },
  {
    "function": "4*atan(x)",
    "true_expansion": "-4*x**3/3 + 4*x",
    "lstm_prediction": "- 4 * x * * 3 / 3 + 4 * x",
    "improved_lstm_prediction": "- 4 * x * * 3 / 3 + 4 * x",
    "transformer_prediction": "- 4 * x * * 3 / 3 + 4 * x"
  },
  {
    "function": "(1 - 3*x)*sqrt(x + 1)",
    "true_expansion": "-29*x**4/128 + 7*x**3/16 - 13*x**2/8 - 5*x/2 + 1",
    "lstm_prediction": "- 837 * x * * 4 / 128 + 33 * x * * 3 / 16 - 17 * x * * 2 / 8 + x / 2 + 1",
    "improved_lstm_prediction": "- 7 * x * * 4 / 128 + 7 * x * * 3 / 16 - 7 * x * * 2 / 8 - 7 * x / 2 + 1",
    "transformer_prediction": "- 15 * x * * 4 / 128 + 3 * x * * 3 / 16 - 3 * x * * 2 / 8 + 3 * x / 2 + 3"
  },
  {
    "function": "(-3*x**2 + x - 1)*cos(4*x)",
    "true_expansion": "40*x**4/3 - 8*x**3 + 5*x**2 + x - 1",
    "lstm_prediction": "- 136 * x * * 4 / 3 - 8 * x * * 3 + 8 * x * * 2 - x - 1",
    "improved_lstm_prediction": "32 * x * * 4 / 3 - 3 * x * * 3 - 19 * x * * 2 + x - 1",
    "transformer_prediction": "- 11 * x * * 4 / 6 + x * * 3 + x * * 2 - 4 * x + 4"
  },
  {
    "function": "4*sin(x)",
    "true_expansion": "-2*x**3/3 + 4*x",
    "lstm_prediction": "* x * * 3 / 3 + 4 * x",
    "improved_lstm_prediction": "- 2 * x * * 3 / 3 + 4 * x",
    "transformer_prediction": "- 32 * x * * 3 / 3 + 4 * x"
  },
  {
    "function": "cos(4*x)",
    "true_expansion": "32*x**4/3 - 8*x**2 + 1",
    "lstm_prediction": "* x * * 2 + 4",
    "improved_lstm_prediction": "32 * x * * 4 / 3 + 8 * x * * 2 + 1",
    "transformer_prediction": "x * * 4 / 6 - 2 * x * * 2 + 4"
  },
  {
    "function": "4*sinh(2*x)",
    "true_expansion": "16*x**3/3 + 8*x",
    "lstm_prediction": "8 * x * * 3 / 3 + 8 * x",
    "improved_lstm_prediction": "16 * x * * 3 / 3 + 4 * x",
    "transformer_prediction": "32 * x * * 3 / 3 + 8 * x"
  },
  {
    "function": "sinh(x) + 1",
    "true_expansion": "x**3/6 + x + 1",
    "lstm_prediction": "x * * 3 / 6 + x + 1",
    "improved_lstm_prediction": "x * * 3 / 6 + x + 1",
    "transformer_prediction": "x * * 3 / 6 + x + 1"
  },
  {
    "function": "2*x + 2*cos(x) + 3",
    "true_expansion": "x**4/12 - x**2 + 2*x + 5",
    "lstm_prediction": "x * * 4 / 12 + x * * 2 + 3 * x + 2",
    "improved_lstm_prediction": "x * * 4 / 12 - x * * 2 + 2 * x + 5",
    "transformer_prediction": "x * * 4 / 12 - x * * 2 + 5"
  },
  {
    "function": "2*x**3 + x + atan(2*x) + 2",
    "true_expansion": "-2*x**3/3 + 3*x + 2",
    "lstm_prediction": "- 10 * x * * 3 / 3 + 4 * x + 2",
    "improved_lstm_prediction": "- 8 * x * * 3 / 3 + 3 * x + 2",
    "transformer_prediction": "- 2 * x * * 3 / 3 + 2 * x * * 2 + 5 * x + 2"
  },
  {
    "function": "5*exp(x)",
    "true_expansion": "5*x**4/24 + 5*x**3/6 + 5*x**2/2 + 5*x + 5",
    "lstm_prediction": "5 * x * * 4 / 24 + 5 * x * * 3 / 6 + 5 * x * * 2 / 2 + 5 * x + 5",
    "improved_lstm_prediction": "5 * x * * 4 / 24 + 5 * x * * 3 / 6 + 5 * x * * 2 / 2 + 5 * x + 5",
    "transformer_prediction": "625 * x * * 4 / 24 + 125 * x * * 3 / 6 + 25 * x * * 2 / 2 + 5 * x + 1"
  },
  {
    "function": "log(3*x + 1)",
    "true_expansion": "-81*x**4/4 + 9*x**3 - 9*x**2/2 + 3*x",
    "lstm_prediction": "- 81 * x * * 4 / 4 + 9 * x * * 3 - 9 * x * * 2 / 2 + 3 * x",
    "improved_lstm_prediction": "- 81 * x * * 4 / 4 + 9 * x * * 3 - 9 * x * * 2 / 2 + 3 * x",
    "transformer_prediction": "- 3 * x * * 4 / 4 + x * * 3 - 3 * x * * 2 / 2 + 3 * x"
  },
  {
    "function": "-2 + 1/(1 - x)",
    "true_expansion": "x**4 + x**3 + x**2 + x - 1",
    "lstm_prediction": "x * * 4 + x * * 3 + x * * 2 - x",
    "improved_lstm_prediction": "x * * 4 + x * * 3 + x * * 2 + x - 1",
    "transformer_prediction": "2 * x * * 4 + 2 * x * * 3 + 2 * x * * 2 + 2 * x + 1"
  },
  {
    "function": "-x + 2*exp(x) - 2",
    "true_expansion": "x**4/12 + x**3/3 + x**2 + x",
    "lstm_prediction": "x * * 4 / 12 + x * * 3 / 3 + x * * 2 - x - 1",
    "improved_lstm_prediction": "x * * 4 / 12 + x * * 3 / 3 + x * * 2 + x",
    "transformer_prediction": "x * * 4 / 24 + x * * 3 / 6 + x * * 2 / 2 - x + 1"
  },
  {
    "function": "log(4*x + 1)",
    "true_expansion": "-64*x**4 + 64*x**3/3 - 8*x**2 + 4*x",
    "lstm_prediction": "- 64 * x * * 4 + 64 * x * * 3 / 3 - 8 * x * * 2 + 4 * x",
    "improved_lstm_prediction": "- 64 * x * * 4 + 64 * x * * 3 / 3 + 8 * x * * 2 + 4 * x",
    "transformer_prediction": "- 64 * x * * 4 + 64 * x * * 3 / 3 - 8 * x * * 2 + 4 * x"
  },
  {
    "function": "2/(1 - x)",
    "true_expansion": "2*x**4 + 2*x**3 + 2*x**2 + 2*x + 2",
    "lstm_prediction": "2 * x * * 4 + 2 * x * * 2 + 2 * x + 2",
    "improved_lstm_prediction": "2 * x * * 4 + 2 * x * * 3 + 2 * x * * 2 + 2 * x + 2",
    "transformer_prediction": "2 * x * * 4 + 2 * x * * 3 + 2 * x * * 2 + 2 * x + 2"
  },
  {
    "function": "cos(x)",
    "true_expansion": "x**4/24 - x**2/2 + 1",
    "lstm_prediction": "x * * 2 / 2 + 1",
    "improved_lstm_prediction": "x * * 4 / 24 - x * * 2 / 2 + 1",
    "transformer_prediction": "x * * 4 / 24 - x * * 2 / 2 + 1"
  },
  {
    "function": "atan(2*x) + 3",
    "true_expansion": "-8*x**3/3 + 2*x + 3",
    "lstm_prediction": "- 8 * x * * 3 / 2 + 3 * x + 3",
    "improved_lstm_prediction": "- 8 * x * * 3 / 3 + 2 * x + 3",
    "transformer_prediction": "- 2 * x * * 3 / 3 + 2 * x + 3"
  },
  {
    "function": "4*exp(x)",
    "true_expansion": "x**4/6 + 2*x**3/3 + 2*x**2 + 4*x + 4",
    "lstm_prediction": "x * * 4 / 6 + 2 * x * * 3 / 3 + 2 * x * * 2 + 4 * x + 4",
    "improved_lstm_prediction": "x * * 4 / 6 + 2 * x * * 3 / 3 + 2 * x * * 2 + 4 * x + 4",
    "transformer_prediction": "32 * x * * 4 / 3 + 32 * x * * 3 / 3 + 8 * x * * 2 + 4 * x + 1"
  },
  {
    "function": "3*x**2 - 3*x + cos(x) + 2",
    "true_expansion": "x**4/24 + 5*x**2/2 - 3*x + 3",
    "lstm_prediction": "x * * 4 / 24 + 5 * x * * 2 / 2 - 3 * x + 3",
    "improved_lstm_prediction": "x * * 4 / 24 + 5 * x * * 2 / 2 - 3 * x + 3",
    "transformer_prediction": "x * * 4 / 24 + 3 * x * * 3 + 5 * x * * 2 / 2 + 3 * x + 4"
  },
  {
    "function": "(2*x**3 + x**2 - 3*x - 1)*cos(x)",
    "true_expansion": "-13*x**4/24 + 7*x**3/2 + 3*x**2/2 - 3*x - 1",
    "lstm_prediction": "11 * x * * 4 / 24 + 3 * x * * 3 - x * * 2 / 2 - 3 * x - 1",
    "improved_lstm_prediction": "11 * x * * 4 / 24 + x * * 3 + 5 * x * * 2 / 2 - 3 * x - 1",
    "transformer_prediction": "- 3 * x * * 4 / 8 + 3 * x * * 3 / 2 + 3 * x * * 2 / 2 + 3 * x - 1"
  },
  {
    "function": "4*x",
    "true_expansion": "4*x",
    "lstm_prediction": "4 * x + 1",
    "improved_lstm_prediction": "4 * x",
    "transformer_prediction": "4 * x"
  },
  {
    "function": "0",
    "true_expansion": "0",
    "lstm_prediction": "* x + 1",
    "improved_lstm_prediction": "0",
    "transformer_prediction": "0"
  },
  {
    "function": "5/(1 - x)",
    "true_expansion": "5*x**4 + 5*x**3 + 5*x**2 + 5*x + 5",
    "lstm_prediction": "5 * x * * 4 + 5 * x * * 3 + 5 * x * * 2 + 5 * x + 5",
    "improved_lstm_prediction": "5 * x * * 4 + 5 * x * * 3 + 5 * x * * 2 + 5 * x + 5",
    "transformer_prediction": "5 * x * * 4 + 5 * x * * 3 + 5 * x * * 2 + 5 * x + 5"
  },
  {
    "function": "cosh(4*x)",
    "true_expansion": "32*x**4/3 + 8*x**2 + 1",
    "lstm_prediction": "32 * x * * 2 / 2 + 4",
    "improved_lstm_prediction": "32 * x * * 4 / 3 + 8 * x * * 2 + 1",
    "transformer_prediction": "x * * 4 / 6 + 2 * x * * 2 + 4"
  },
  {
    "function": "-8*sqrt(x + 1)",
    "true_expansion": "5*x**4/16 - x**3/2 + x**2 - 4*x - 8",
    "lstm_prediction": "- 25 * x * * 4 / 8 - 5 * x * * 3 / 2 - 5 * x * * 2 / 2 - 5 * x",
    "improved_lstm_prediction": "- 5 * x * * 4 / 64 - 5 * x * * 3 / 8 + 5 * x * * 2 / 8 - 5 * x - 8",
    "transformer_prediction": "- 5 * x * * 4 / 32 + x * * 3 / 8 - x * * 2 / 2 - 2 * x + 8"
  },
  {
    "function": "5*x",
    "true_expansion": "5*x",
    "lstm_prediction": "5 * x",
    "improved_lstm_prediction": "5 * x * * 3 / 2 + 5 * x",
    "transformer_prediction": "5 * x"
  },
  {
    "function": "x + exp(x) + 3",
    "true_expansion": "x**4/24 + x**3/6 + x**2/2 + 2*x + 4",
    "lstm_prediction": "x * * 4 / 24 + x * * 3 / 6 + x * * 2 / 2 + 4 * x + 4",
    "improved_lstm_prediction": "x * * 4 / 24 + x * * 3 / 6 + x * * 2 / 2 + 2 * x + 4",
    "transformer_prediction": "x * * 4 / 24 + x * * 3 / 6 + x * * 2 / 2 + 4 * x + 4"
  },
  {
    "function": "-3*x**3 + x**2 - 3*x + sqrt(2*x + 1) + 3",
    "true_expansion": "-5*x**4/8 - 5*x**3/2 + x**2/2 - 2*x + 4",
    "lstm_prediction": "- 5 * x * * 4 / 8 - x * * 3 - x * * 2 / 2 + 4",
    "improved_lstm_prediction": "- 5 * x * * 4 / 8 - 5 * x * * 3 / 2 + x * * 2 / 2 - 2 * x + 4",
    "transformer_prediction": "- 5 * x * * 4 / 128 + 33 * x * * 3 / 16 + 17 * x * * 2 / 8 + 3 * x / 2 + 4"
  },
  {
    "function": "4*tan(x)",
    "true_expansion": "4*x**3/3 + 4*x",
    "lstm_prediction": "4 * x * * 3 / 3 + 4 * x",
    "improved_lstm_prediction": "4 * x * * 3 / 3 + 4 * x",
    "transformer_prediction": "4 * x * * 3 / 3 + 4 * x"
  },
  {
    "function": "atan(x)",
    "true_expansion": "-x**3/3 + x",
    "lstm_prediction": "* x * * 3 / 3 + x",
    "improved_lstm_prediction": "- x * * 3 / 3 + x",
    "transformer_prediction": "- x * * 3 / 3 + x"
  },
  {
    "function": "3*sin(x)",
    "true_expansion": "-x**3/2 + 3*x",
    "lstm_prediction": "* x * * 3 / 2 + 3 * x",
    "improved_lstm_prediction": "- x * * 3 / 2 + 3 * x",
    "transformer_prediction": "- 9 * x * * 3 / 2 + 3 * x"
  },
  {
    "function": "2*sinh(x)",
    "true_expansion": "x**3/3 + 2*x",
    "lstm_prediction": "x * * 3 / 3 + 2 * x",
    "improved_lstm_prediction": "x * * 3 / 3 + 2 * x",
    "transformer_prediction": "4 * x * * 3 / 3 + 2 * x"
  },
  {
    "function": "sqrt(x + 1)",
    "true_expansion": "-5*x**4/128 + x**3/16 - x**2/8 + x/2 + 1",
    "lstm_prediction": "- 5 * x * * 4 / 128 + x * * 3 / 16 - x * * 2 / 8 + x / 2 + 1",
    "improved_lstm_prediction": "- 5 * x * * 4 / 128 + x * * 3 / 16 - x * * 2 / 8 + x / 2 + 1",
    "transformer_prediction": "- 5 * x * * 4 / 128 + x * * 3 / 16 - x * * 2 / 8 + x / 2 + 1"
  },
  {
    "function": "sqrt(x + 1)",
    "true_expansion": "-5*x**4/128 + x**3/16 - x**2/8 + x/2 + 1",
    "lstm_prediction": "- 5 * x * * 4 / 128 + x * * 3 / 16 - x * * 2 / 8 + x / 2 + 1",
    "improved_lstm_prediction": "- 5 * x * * 4 / 128 + x * * 3 / 16 - x * * 2 / 8 + x / 2 + 1",
    "transformer_prediction": "- 5 * x * * 4 / 128 + x * * 3 / 16 - x * * 2 / 8 + x / 2 + 1"
  },
  {
    "function": "sqrt(2*x + 1) + 2",
    "true_expansion": "-5*x**4/8 + x**3/2 - x**2/2 + x + 3",
    "lstm_prediction": "- 5 * x * * 4 / 8 + x * * 3 / 2 - x * * 2 / 2 + x + 4",
    "improved_lstm_prediction": "- 5 * x * * 4 / 8 + x * * 3 / 2 - x * * 2 / 2 + x + 4",
    "transformer_prediction": "- 5 * x * * 4 / 64 + x * * 3 / 8 - x * * 2 / 4 + x + 2"
  },
  {
    "function": "-5*exp(x)",
    "true_expansion": "-5*x**4/24 - 5*x**3/6 - 5*x**2/2 - 5*x - 5",
    "lstm_prediction": "- 5 * x * * 3 / 24 + 5 * x * * 2 / 2 - 5 * x",
    "improved_lstm_prediction": "- 5 * x * * 4 / 24 - 5 * x * * 3 / 6 - 5 * x * * 2 / 2 - 5 * x - 5",
    "transformer_prediction": "- 5 * x * * 4 / 24 - 5 * x * * 3 / 6 - 5 * x * * 2 / 2 - 5 * x - 5"
  },
  {
    "function": "sin(x)",
    "true_expansion": "-x**3/6 + x",
    "lstm_prediction": "* x * * 3 / 2 + 5 * x",
    "improved_lstm_prediction": "- x * * 3 / 6 + x",
    "transformer_prediction": "- x * * 3 / 6 + x"
  },
  {
    "function": "exp(x) + 3",
    "true_expansion": "x**4/24 + x**3/6 + x**2/2 + x + 4",
    "lstm_prediction": "x * * 4 / 24 + x * * 3 / 6 + x * * 2 / 2 + x + 4",
    "improved_lstm_prediction": "x * * 4 / 24 + x * * 3 / 6 + x * * 2 / 2 + x + 4",
    "transformer_prediction": "x * * 4 / 24 + x * * 3 / 6 + x * * 2 / 2 + x + 4"
  },
  {
    "function": "sqrt(x + 1) - 2",
    "true_expansion": "-5*x**4/128 + x**3/16 - x**2/8 + x/2 - 1",
    "lstm_prediction": "- 5 * x * * 4 / 128 + x * * 3 / 16 - x * * 2 / 8 + x / 2 - 1",
    "improved_lstm_prediction": "- 5 * x * * 4 / 128 + x * * 3 / 16 - x * * 2 / 8 + x / 2 - 1",
    "transformer_prediction": "- 5 * x * * 4 / 128 + x * * 3 / 16 - x * * 2 / 8 + x / 2 - 1"
  },
  {
    "function": "x",
    "true_expansion": "x",
    "lstm_prediction": "x * * 2 / 2 + 1",
    "improved_lstm_prediction": "x * * 3 + x",
    "transformer_prediction": "x"
  },
  {
    "function": "sinh(5*x)",
    "true_expansion": "125*x**3/6 + 5*x",
    "lstm_prediction": "125 * x * * 3 / 6 + 5 * x",
    "improved_lstm_prediction": "125 * x * * 3 / 6 + 5 * x",
    "transformer_prediction": "125 * x * * 3 / 6 + 5 * x"
  },
  {
    "function": "sinh(x) + 2",
    "true_expansion": "x**3/6 + x + 2",
    "lstm_prediction": "x * * 3 / 6 + x + 2",
    "improved_lstm_prediction": "x * * 3 / 6 + x + 2",
    "transformer_prediction": "x * * 3 / 6 + x + 2"
  },
  {
    "function": "exp(3*x)",
    "true_expansion": "27*x**4/8 + 9*x**3/2 + 9*x**2/2 + 3*x + 1",
    "lstm_prediction": "27 * x * * 4 / 8 + 9 * x * * 3 / 2 + 9 * x * * 2 / 2 + 3 * x + 1",
    "improved_lstm_prediction": "81 * x * * 4 / 8 + 9 * x * * 3 + 9 * x * * 2 / 2 + 3 * x + 1",
    "transformer_prediction": "27 * x * * 4 / 8 + 9 * x * * 3 / 2 + 9 * x * * 2 / 2 + 3 * x + 1"
  },
  {
    "function": "atan(3*x)",
    "true_expansion": "-9*x**3 + 3*x",
    "lstm_prediction": "- x * * 3 + 3 * x",
    "improved_lstm_prediction": "- 9 * x * * 3 + 3 * x",
    "transformer_prediction": "- 9 * x * * 3 + 3 * x"
  },
  {
    "function": "3/(1 - x)",
    "true_expansion": "3*x**4 + 3*x**3 + 3*x**2 + 3*x + 3",
    "lstm_prediction": "81 * x * * 4 + 27 * x * * 3 + 9 * x * * 2 + 6 * x + 3",
    "improved_lstm_prediction": "3 * x * * 4 + 3 * x * * 3 + 3 * x * * 2 + 3 * x + 3",
    "transformer_prediction": "3 * x * * 4 + 3 * x * * 3 + 3 * x * * 2 + 3 * x + 3"
  },
  {
    "function": "log(5*x + 1)",
    "true_expansion": "-625*x**4/4 + 125*x**3/3 - 25*x**2/2 + 5*x",
    "lstm_prediction": "- 625 * x * * 4 / 4 + 125 * x * * 3 / 3 - 25 * x * * 2 / 2 + 5 * x",
    "improved_lstm_prediction": "- 625 * x * * 4 / 4 + 125 * x * * 3 / 3 - 25 * x * * 2 / 2 + 5 * x",
    "transformer_prediction": "- 625 * x * * 4 / 4 + 125 * x * * 3 / 3 - 25 * x * * 2 / 2 + 5 * x"
  },
  {
    "function": "-10*atan(x)",
    "true_expansion": "10*x**3/3 - 10*x",
    "lstm_prediction": "5 * x * * 3 / 3 - 5 * x",
    "improved_lstm_prediction": "- 10 * x * * 3 / 3 - 10 * x",
    "transformer_prediction": "5 * x * * 3 / 3 - 5 * x"
  },
  {
    "function": "sinh(x)",
    "true_expansion": "x**3/6 + x",
    "lstm_prediction": "x * * 3 / 2 + x",
    "improved_lstm_prediction": "x * * 3 / 6 + x",
    "transformer_prediction": "x * * 3 / 6 + x"
  },
  {
    "function": "-2*x + tan(3*x) - 2",
    "true_expansion": "9*x**3 + x - 2",
    "lstm_prediction": "9 * x * * 3 - 2 * x + 2",
    "improved_lstm_prediction": "9 * x * * 3 + x - 2",
    "transformer_prediction": "2 * x * * 3 / 3 + 3 * x - 3"
  },
  {
    "function": "x + sin(x) - 1",
    "true_expansion": "-x**3/6 + 2*x - 1",
    "lstm_prediction": "- x * * 3 / 6 + 2 * x - 1",
    "improved_lstm_prediction": "- x * * 3 / 6 + 2 * x - 1",
    "transformer_prediction": "- x * * 3 / 6 + 2 * x - 1"
  },
  {
    "function": "5*x",
    "true_expansion": "5*x",
    "lstm_prediction": "5 * x",
    "improved_lstm_prediction": "5 * x * * 3 / 2 + 5 * x",
    "transformer_prediction": "5 * x"
  },
  {
    "function": "-3*x**2 - 2*x + 3*sin(x) - 3",
    "true_expansion": "-x**3/2 - 3*x**2 + x - 3",
    "lstm_prediction": "- x * * 3 / 2 - 3 * x * * 2 + 3 * x - 3",
    "improved_lstm_prediction": "- x * * 3 / 2 - 3 * x * * 2 + x - 3",
    "transformer_prediction": "- x * * 3 / 2 - 3 * x * * 2 + 2 * x - 3"
  },
  {
    "function": "x + 3",
    "true_expansion": "x + 3",
    "lstm_prediction": "x * * 2 + 6",
    "improved_lstm_prediction": "x * * 2 + x + 3",
    "transformer_prediction": "x + 3"
  },
  {
    "function": "sin(3*x)",
    "true_expansion": "-9*x**3/2 + 3*x",
    "lstm_prediction": "* x * * 3 / 2 + 3 * x",
    "improved_lstm_prediction": "9 * x * * 3 + 3 * x",
    "transformer_prediction": "- 9 * x * * 3 / 2 + 3 * x"
  },
  {
    "function": "atan(5*x)",
    "true_expansion": "-125*x**3/3 + 5*x",
    "lstm_prediction": "* x * * 3 / 3 + 5 * x",
    "improved_lstm_prediction": "- 125 * x * * 3 / 3 + 5 * x",
    "transformer_prediction": "- 125 * x * * 3 / 3 + 5 * x"
  },
  {
    "function": "4*sinh(x)",
    "true_expansion": "2*x**3/3 + 4*x",
    "lstm_prediction": "2 * x * * 3 / 3 + 4 * x",
    "improved_lstm_prediction": "2 * x * * 3 / 3 + 4 * x",
    "transformer_prediction": "32 * x * * 3 / 3 + 4 * x"
  },
  {
    "function": "cosh(2*x)",
    "true_expansion": "2*x**4/3 + 2*x**2 + 1",
    "lstm_prediction": "x * * 2 / 2 + 1",
    "improved_lstm_prediction": "2 * x * * 4 / 3 + 2 * x * * 2 + 1",
    "transformer_prediction": "2 * x * * 4 / 3 + 2 * x * * 2 + 1"
  },
  {
    "function": "3*(1 - 3*x)*exp(x)",
    "true_expansion": "-11*x**4/8 - 4*x**3 - 15*x**2/2 - 6*x + 3",
    "lstm_prediction": "- 3 * x * * 4 / 8 - 3 * x * * 3 - 9 * x * * 2 / 2 + 12 * x + 3",
    "improved_lstm_prediction": "- 3 * x * * 4 / 8 - 3 * x * * 3 - 9 * x * * 2 / 2 + 3 * x + 3",
    "transformer_prediction": "- 3 * x * * 4 / 8 - x * * 3 / 2 + 3 * x * * 2 / 2 + 3 * x - 1"
  },
  {
    "function": "0",
    "true_expansion": "0",
    "lstm_prediction": "* x + 1",
    "improved_lstm_prediction": "0",
    "transformer_prediction": "0"
  },
  {
    "function": "tan(2*x)",
    "true_expansion": "8*x**3/3 + 2*x",
    "lstm_prediction": "8 * x * * 3 / 3 + 2 * x",
    "improved_lstm_prediction": "8 * x * * 3 / 3 + 2 * x",
    "transformer_prediction": "2 * x * * 3 / 3 + 2 * x"
  },
  {
    "function": "3*cosh(x)",
    "true_expansion": "x**4/8 + 3*x**2/2 + 3",
    "lstm_prediction": "x * * 2 / 2 + 3",
    "improved_lstm_prediction": "x * * 4 / 8 + 3 * x * * 2 / 2 + 3",
    "transformer_prediction": "x * * 4 / 8 + 3 * x * * 2 / 2 + 3"
  },
  {
    "function": "tan(x)",
    "true_expansion": "x**3/3 + x",
    "lstm_prediction": "x * * 3 / 3 + x",
    "improved_lstm_prediction": "x * * 3 / 3 + x",
    "transformer_prediction": "x * * 3 / 3 + x"
  },
  {
    "function": "cosh(x)",
    "true_expansion": "x**4/24 + x**2/2 + 1",
    "lstm_prediction": "x * * 2 / 2 + 1",
    "improved_lstm_prediction": "x * * 4 / 24 + x * * 2 / 2 + 1",
    "transformer_prediction": "x * * 4 / 24 + x * * 2 / 2 + 1"
  },
  {
    "function": "3*exp(x)",
    "true_expansion": "x**4/8 + x**3/2 + 3*x**2/2 + 3*x + 3",
    "lstm_prediction": "x * * 3 / 8 + x * * 2 / 2 + 3 * x + 3",
    "improved_lstm_prediction": "x * * 4 / 8 + x * * 3 / 2 + 3 * x * * 2 / 2 + 3 * x + 3",
    "transformer_prediction": "27 * x * * 4 / 8 + 9 * x * * 3 / 2 + 9 * x * * 2 / 2 + 3 * x + 1"
  },
  {
    "function": "-x**3 - 3*x + 5*exp(x) - 1",
    "true_expansion": "5*x**4/24 - x**3/6 + 5*x**2/2 + 2*x + 4",
    "lstm_prediction": "5 * x * * 4 / 24 + 5 * x * * 3 / 6 + 5 * x * * 2 / 2 + 2 * x + 2",
    "improved_lstm_prediction": "5 * x * * 4 / 24 + 2 * x * * 3 / 6 + x * * 2 / 2 + 2 * x + 2",
    "transformer_prediction": "625 * x * * 4 / 24 + 125 * x * * 3 / 6 + 25 * x * * 2 / 2 + 2 * x - 2"
  },
  {
    "function": "-x**2 - x + 4*tan(x) + 1",
    "true_expansion": "4*x**3/3 - x**2 + 3*x + 1",
    "lstm_prediction": "4 * x * * 3 / 3 - x * * 2 + 3 * x + 1",
    "improved_lstm_prediction": "4 * x * * 3 / 3 - x * * 2 + 3 * x + 1",
    "transformer_prediction": "64 * x * * 3 / 3 + x * * 2 + x - 1"
  },
  {
    "function": "cos(x)",
    "true_expansion": "x**4/24 - x**2/2 + 1",
    "lstm_prediction": "x * * 2 / 2 + 1",
    "improved_lstm_prediction": "x * * 4 / 24 - x * * 2 / 2 + 1",
    "transformer_prediction": "x * * 4 / 24 - x * * 2 / 2 + 1"
  },
  {
    "function": "sin(x)",
    "true_expansion": "-x**3/6 + x",
    "lstm_prediction": "* x * * 3 / 2 + 5 * x",
    "improved_lstm_prediction": "- x * * 3 / 6 + x",
    "transformer_prediction": "- x * * 3 / 6 + x"
  },
  {
    "function": "7*x + 2",
    "true_expansion": "7*x + 2",
    "lstm_prediction": "x * * 2 + 6",
    "improved_lstm_prediction": "7 * x * * 2 + 7 * x + 2",
    "transformer_prediction": "5 * x + 2"
  },
  {
    "function": "sqrt(4*x + 1)",
    "true_expansion": "-10*x**4 + 4*x**3 - 2*x**2 + 2*x + 1",
    "lstm_prediction": "- 10 * x * * 4 + 4 * x * * 2 + 2 * x + 1",
    "improved_lstm_prediction": "- 10 * x * * 4 + 4 * x * * 3 - 2 * x * * 2 + 2 * x + 1",
    "transformer_prediction": "- 5 * x * * 4 / 32 + x * * 3 / 4 - x * * 2 / 2 + 2 * x + 4"
  },
  {
    "function": "4*tan(x)",
    "true_expansion": "4*x**3/3 + 4*x",
    "lstm_prediction": "4 * x * * 3 / 3 + 4 * x",
    "improved_lstm_prediction": "4 * x * * 3 / 3 + 4 * x",
    "transformer_prediction": "4 * x * * 3 / 3 + 4 * x"
  },
  {
    "function": "x",
    "true_expansion": "x",
    "lstm_prediction": "x * * 2 / 2 + 1",
    "improved_lstm_prediction": "x * * 3 + x",
    "transformer_prediction": "x"
  },
  {
    "function": "2*cosh(x)",
    "true_expansion": "x**4/12 + x**2 + 2",
    "lstm_prediction": "x * * 4 / 8 + 3 * x * * 2 / 2 + 3",
    "improved_lstm_prediction": "x * * 4 / 12 + x * * 2 + 2",
    "transformer_prediction": "2 * x * * 4 / 3 + 2 * x * * 2 + 1"
  },
  {
    "function": "cos(2*x)",
    "true_expansion": "2*x**4/3 - 2*x**2 + 1",
    "lstm_prediction": "x * * 2 + 4",
    "improved_lstm_prediction": "2 * x * * 4 / 3 + 2 * x * * 2 + 1",
    "transformer_prediction": "2 * x * * 4 / 3 - 2 * x * * 2 + 1"
  },
  {
    "function": "-2 + 4/(1 - x)",
    "true_expansion": "4*x**4 + 4*x**3 + 4*x**2 + 4*x + 2",
    "lstm_prediction": "4 * x * * 4 + 8 * x * * 3 + 4 * x * * 2 + 4 * x + 2",
    "improved_lstm_prediction": "4 * x * * 4 + 4 * x * * 3 + 4 * x * * 2 + 4 * x + 2",
    "transformer_prediction": "4 * x * * 4 + 4 * x * * 3 + 4 * x * * 2 + 4 * x + 2"
  },
  {
    "function": "2*log(x + 1)",
    "true_expansion": "-x**4/2 + 2*x**3/3 - x**2 + 2*x",
    "lstm_prediction": "- x * * 4 / 2 + 2 * x * * 3 / 3 - x * * 2 / 2 + x",
    "improved_lstm_prediction": "- x * * 4 / 2 + 2 * x * * 3 / 3 - x * * 2 + 2 * x",
    "transformer_prediction": "- 4 * x * * 4 + 8 * x * * 3 / 3 - 2 * x * * 2 + 2 * x"
  },
  {
    "function": "3*atan(x)",
    "true_expansion": "-x**3 + 3*x",
    "lstm_prediction": "x * * 3 + 3 * x",
    "improved_lstm_prediction": "- x * * 3 + 3 * x",
    "transformer_prediction": "- 9 * x * * 3 + 3 * x"
  },
  {
    "function": "x",
    "true_expansion": "x",
    "lstm_prediction": "x * * 2 / 2 + 1",
    "improved_lstm_prediction": "x * * 3 + x",
    "transformer_prediction": "x"
  },
  {
    "function": "5*sinh(x)",
    "true_expansion": "5*x**3/6 + 5*x",
    "lstm_prediction": "5 * x * * 3 / 6 + 5 * x",
    "improved_lstm_prediction": "5 * x * * 3 / 6 + 5 * x",
    "transformer_prediction": "125 * x * * 3 / 6 + 5 * x"
  },
  {
    "function": "cosh(4*x)",
    "true_expansion": "32*x**4/3 + 8*x**2 + 1",
    "lstm_prediction": "32 * x * * 2 / 2 + 4",
    "improved_lstm_prediction": "32 * x * * 4 / 3 + 8 * x * * 2 + 1",
    "transformer_prediction": "x * * 4 / 6 + 2 * x * * 2 + 4"
  },
  {
    "function": "sinh(5*x)",
    "true_expansion": "125*x**3/6 + 5*x",
    "lstm_prediction": "125 * x * * 3 / 6 + 5 * x",
    "improved_lstm_prediction": "125 * x * * 3 / 6 + 5 * x",
    "transformer_prediction": "125 * x * * 3 / 6 + 5 * x"
  },
  {
    "function": "cosh(x)",
    "true_expansion": "x**4/24 + x**2/2 + 1",
    "lstm_prediction": "x * * 2 / 2 + 1",
    "improved_lstm_prediction": "x * * 4 / 24 + x * * 2 / 2 + 1",
    "transformer_prediction": "x * * 4 / 24 + x * * 2 / 2 + 1"
  },
  {
    "function": "(3*x**2 + 2*x + 4)*log(x + 1)",
    "true_expansion": "-11*x**4/6 + 10*x**3/3 + 4*x",
    "lstm_prediction": "- 5 * x * * 4 / 3 + x * * 3 / 3 + 4 * x * * 2 + 4 * x",
    "improved_lstm_prediction": "- x * * 4 / 3 + 13 * x * * 3 / 3 + 4 * x * * 2 + 4 * x",
    "transformer_prediction": "- 5 * x * * 4 / 6 + 10 * x * * 3 / 3 - 2 * x * * 2 + 4 * x"
  },
  {
    "function": "tan(2*x)",
    "true_expansion": "8*x**3/3 + 2*x",
    "lstm_prediction": "8 * x * * 3 / 3 + 2 * x",
    "improved_lstm_prediction": "8 * x * * 3 / 3 + 2 * x",
    "transformer_prediction": "2 * x * * 3 / 3 + 2 * x"
  },
  {
    "function": "x - 1",
    "true_expansion": "x - 1",
    "lstm_prediction": "x * * 2 + 1",
    "improved_lstm_prediction": "x * * 2 + x - 1",
    "transformer_prediction": "x - 1"
  },
  {
    "function": "cosh(x)",
    "true_expansion": "x**4/24 + x**2/2 + 1",
    "lstm_prediction": "x * * 2 / 2 + 1",
    "improved_lstm_prediction": "x * * 4 / 24 + x * * 2 / 2 + 1",
    "transformer_prediction": "x * * 4 / 24 + x * * 2 / 2 + 1"
  },
  {
    "function": "2*exp(x)",
    "true_expansion": "x**4/12 + x**3/3 + x**2 + 2*x + 2",
    "lstm_prediction": "x * * 4 / 12 + x * * 3 / 2 + 2 * x * * 2 + x + 4",
    "improved_lstm_prediction": "x * * 4 / 12 + x * * 3 / 3 + x * * 2 + 2 * x + 2",
    "transformer_prediction": "2 * x * * 4 / 3 + 4 * x * * 3 / 3 + 2 * x * * 2 + 2 * x + 1"
  },
  {
    "function": "4*tan(x)",
    "true_expansion": "4*x**3/3 + 4*x",
    "lstm_prediction": "4 * x * * 3 / 3 + 4 * x",
    "improved_lstm_prediction": "4 * x * * 3 / 3 + 4 * x",
    "transformer_prediction": "4 * x * * 3 / 3 + 4 * x"
  },
  {
    "function": "4*(2*x**2 + 2)*sin(x)",
    "true_expansion": "20*x**3/3 + 8*x",
    "lstm_prediction": "- 40 * x * * 4 / 3 + 8 * x * * 3 / 3 + 4 * x * * 2 + 4 * x",
    "improved_lstm_prediction": "- 8 * x * * 3 / 3 + 8 * x",
    "transformer_prediction": "- 8 * x * * 4 / 3 + 8 * x * * 3 / 3 - 8 * x * * 2 + 8 * x"
  },
  {
    "function": "2*atan(x)",
    "true_expansion": "-2*x**3/3 + 2*x",
    "lstm_prediction": "- x * * 3 / 3 + 2 * x",
    "improved_lstm_prediction": "- 2 * x * * 3 / 3 + 2 * x",
    "transformer_prediction": "- 2 * x * * 3 / 3 + 2 * x"
  },
  {
    "function": "4*log(x + 1)",
    "true_expansion": "-x**4 + 4*x**3/3 - 2*x**2 + 4*x",
    "lstm_prediction": "- x * * 4 + 4 * x * * 3 / 3 - 2 * x * * 2 + 4 * x",
    "improved_lstm_prediction": "- x * * 4 + 4 * x * * 3 / 3 + 2 * x * * 2 + 4 * x",
    "transformer_prediction": "- 64 * x * * 4 + 64 * x * * 3 / 3 - 8 * x * * 2 + 4 * x"
  },
  {
    "function": "(2*x**3 + 3*x + 1)*cosh(4*x)",
    "true_expansion": "32*x**4/3 + 26*x**3 + 8*x**2 + 3*x + 1",
    "lstm_prediction": "32 * x * * 4 / 3 + 6 * x * * 3 + 6 * x * * 2 + x + 2",
    "improved_lstm_prediction": "200 * x * * 4 / 3 + 23 * x * * 3 + 23 * x * * 2 + 3 * x + 1",
    "transformer_prediction": "x * * 4 / 6 + x * * 3 + 2 * x * * 2 + 4"
  },
  {
    "function": "1/(1 - 5*x)",
    "true_expansion": "625*x**4 + 125*x**3 + 25*x**2 + 5*x + 1",
    "lstm_prediction": "625 * x * * 4 + 125 * x * * 3 + 25 * x * * 2 + 5 * x + 1",
    "improved_lstm_prediction": "625 * x * * 4 + 125 * x * * 3 + 25 * x * * 2 + 5 * x + 1",
    "transformer_prediction": "625 * x * * 4 + 125 * x * * 3 + 25 * x * * 2 + 5 * x + 1"
  },
  {
    "function": "2*x + sinh(x)",
    "true_expansion": "x**3/6 + 3*x",
    "lstm_prediction": "x * * 3 / 2 + 4 * x",
    "improved_lstm_prediction": "x * * 3 / 6 + 3 * x",
    "transformer_prediction": "x * * 3 / 6 + 3 * x"
  },
  {
    "function": "3*x**2 + 2*x + sqrt(x + 1) + 3",
    "true_expansion": "-5*x**4/128 + x**3/16 + 23*x**2/8 + 5*x/2 + 4",
    "lstm_prediction": "- 5 * x * * 4 / 128 + x * * 3 / 16 + 23 * x * * 2 / 8 + 11 * x / 2 + 2",
    "improved_lstm_prediction": "- 5 * x * * 4 / 128 + x * * 3 / 16 + 7 * x * * 2 / 8 + 5 * x / 2 + 4",
    "transformer_prediction": "- 5 * x * * 4 / 128 + x * * 3 / 16 - x * * 2 / 8 + 3 * x / 2 + 4"
  },
  {
    "function": "2*x",
    "true_expansion": "2*x",
    "lstm_prediction": "2 * x",
    "improved_lstm_prediction": "2 * x * * 2 + 2 * x",
    "transformer_prediction": "2 * x"
  },
  {
    "function": "2*exp(x)",
    "true_expansion": "x**4/12 + x**3/3 + x**2 + 2*x + 2",
    "lstm_prediction": "x * * 4 / 12 + x * * 3 / 2 + 2 * x * * 2 + x + 4",
    "improved_lstm_prediction": "x * * 4 / 12 + x * * 3 / 3 + x * * 2 + 2 * x + 2",
    "transformer_prediction": "2 * x * * 4 / 3 + 4 * x * * 3 / 3 + 2 * x * * 2 + 2 * x + 1"
  },
  {
    "function": "sqrt(5*x + 1)",
    "true_expansion": "-3125*x**4/128 + 125*x**3/16 - 25*x**2/8 + 5*x/2 + 1",
    "lstm_prediction": "* x * * 4 / 128 + x * * 3 / 16 - x * * 2 / 8 + x / 2 + 1",
    "improved_lstm_prediction": "- 3125 * x * * 4 / 128 + 125 * x * * 3 / 16 - 25 * x * * 2 / 8 + 5 * x / 2 + 1",
    "transformer_prediction": "- 25 * x * * 4 / 128 + 5 * x * * 3 / 16 - 5 * x * * 2 / 8 + 5 * x / 2 + 5"
  },
  {
    "function": "sin(5*x)",
    "true_expansion": "-125*x**3/6 + 5*x",
    "lstm_prediction": "* x * * 3 / 2 + 5 * x",
    "improved_lstm_prediction": "- 125 * x * * 3 / 6 + 5 * x",
    "transformer_prediction": "- 125 * x * * 3 / 6 + 5 * x"
  },
  {
    "function": "sinh(4*x)",
    "true_expansion": "32*x**3/3 + 4*x",
    "lstm_prediction": "32 * x * * 3 / 2 + 4 * x",
    "improved_lstm_prediction": "32 * x * * 3 / 3 + 4 * x",
    "transformer_prediction": "32 * x * * 3 / 3 + 4 * x"
  },
  {
    "function": "exp(x)",
    "true_expansion": "x**4/24 + x**3/6 + x**2/2 + x + 1",
    "lstm_prediction": "x * * 4 / 24 + x * * 2 / 2 + x + 1",
    "improved_lstm_prediction": "x * * 4 / 24 + x * * 3 / 6 + x * * 2 + x + 1",
    "transformer_prediction": "x * * 4 / 24 + x * * 3 / 6 + x * * 2 / 2 + x + 1"
  },
  {
    "function": "-x**2 + atan(4*x) + 1",
    "true_expansion": "-64*x**3/3 - x**2 + 4*x + 1",
    "lstm_prediction": "- 64 * x * * 3 / 3 - x * * 2 + 3 * x + 1",
    "improved_lstm_prediction": "- 64 * x * * 3 / 3 - x * * 2 + 4 * x + 1",
    "transformer_prediction": "- 4 * x * * 3 / 3 + 2 * x * * 2 + 5 * x + 1"
  },
  {
    "function": "exp(x)",
    "true_expansion": "x**4/24 + x**3/6 + x**2/2 + x + 1",
    "lstm_prediction": "x * * 4 / 24 + x * * 2 / 2 + x + 1",
    "improved_lstm_prediction": "x * * 4 / 24 + x * * 3 / 6 + x * * 2 + x + 1",
    "transformer_prediction": "x * * 4 / 24 + x * * 3 / 6 + x * * 2 / 2 + x + 1"
  },
  {
    "function": "sinh(x)",
    "true_expansion": "x**3/6 + x",
    "lstm_prediction": "x * * 3 / 2 + x",
    "improved_lstm_prediction": "x * * 3 / 6 + x",
    "transformer_prediction": "x * * 3 / 6 + x"
  },
  {
    "function": "tan(x)",
    "true_expansion": "x**3/3 + x",
    "lstm_prediction": "x * * 3 / 3 + x",
    "improved_lstm_prediction": "x * * 3 / 3 + x",
    "transformer_prediction": "x * * 3 / 3 + x"
  },
  {
    "function": "sqrt(x + 1) + 1",
    "true_expansion": "-5*x**4/128 + x**3/16 - x**2/8 + x/2 + 2",
    "lstm_prediction": "- 5 * x * * 4 / 128 + x * * 3 / 16 - x * * 2 / 8 + x / 2 + 2",
    "improved_lstm_prediction": "- 5 * x * * 4 / 128 + x * * 3 / 16 - x * * 2 / 8 + x / 2 + 2",
    "transformer_prediction": "- 5 * x * * 4 / 128 + x * * 3 / 16 - x * * 2 / 8 + x / 2 + 2"
  },
  {
    "function": "2/(1 - x)",
    "true_expansion": "2*x**4 + 2*x**3 + 2*x**2 + 2*x + 2",
    "lstm_prediction": "2 * x * * 4 + 2 * x * * 2 + 2 * x + 2",
    "improved_lstm_prediction": "2 * x * * 4 + 2 * x * * 3 + 2 * x * * 2 + 2 * x + 2",
    "transformer_prediction": "2 * x * * 4 + 2 * x * * 3 + 2 * x * * 2 + 2 * x + 2"
  },
  {
    "function": "tan(x)",
    "true_expansion": "x**3/3 + x",
    "lstm_prediction": "x * * 3 / 3 + x",
    "improved_lstm_prediction": "x * * 3 / 3 + x",
    "transformer_prediction": "x * * 3 / 3 + x"
  },
  {
    "function": "5*x + 2",
    "true_expansion": "5*x + 2",
    "lstm_prediction": "5 * x + 2",
    "improved_lstm_prediction": "5 * x * * 2 + 5 * x + 2",
    "transformer_prediction": "5 * x + 2"
  },
  {
    "function": "sin(2*x)",
    "true_expansion": "-4*x**3/3 + 2*x",
    "lstm_prediction": "* x * * 3 / 2 + 3 * x",
    "improved_lstm_prediction": "- 4 * x * * 3 / 3 + 2 * x",
    "transformer_prediction": "- 4 * x * * 3 / 3 + 2 * x"
  },
  {
    "function": "1/(1 - x)",
    "true_expansion": "x**4 + x**3 + x**2 + x + 1",
    "lstm_prediction": "x * * 4 + x * * 3 + x * * 2 + x + 1",
    "improved_lstm_prediction": "x * * 4 + x * * 3 + x * * 2 + x + 1",
    "transformer_prediction": "x * * 4 + x * * 3 + x * * 2 + x + 1"
  },
  {
    "function": "tan(x)",
    "true_expansion": "x**3/3 + x",
    "lstm_prediction": "x * * 3 / 3 + x",
    "improved_lstm_prediction": "x * * 3 / 3 + x",
    "transformer_prediction": "x * * 3 / 3 + x"
  },
  {
    "function": "log(x + 1)",
    "true_expansion": "-x**4/4 + x**3/3 - x**2/2 + x",
    "lstm_prediction": "- x * * 4 / 4 + x * * 3 / 3 - x * * 2 / 2 + x",
    "improved_lstm_prediction": "- x * * 4 / 4 + x * * 3 / 3 - x * * 2 / 2 + x",
    "transformer_prediction": "- x * * 4 / 4 + x * * 3 / 3 - x * * 2 / 2 + x"
  },
  {
    "function": "atan(x)",
    "true_expansion": "-x**3/3 + x",
    "lstm_prediction": "* x * * 3 / 3 + x",
    "improved_lstm_prediction": "- x * * 3 / 3 + x",
    "transformer_prediction": "- x * * 3 / 3 + x"
  },
  {
    "function": "2*(3*x + 1)/(1 - x)",
    "true_expansion": "8*x**4 + 8*x**3 + 8*x**2 + 8*x + 2",
    "lstm_prediction": "8 * x * * 4 + 8 * x * * 3 + 2 * x * * 2 + 2 * x + 4",
    "improved_lstm_prediction": "10 * x * * 4 + 10 * x * * 3 + 10 * x * * 2 + 10 * x + 6",
    "transformer_prediction": "3 * x * * 4 + 3 * x * * 3 + 3 * x * * 2 + 3 * x + 3"
  },
  {
    "function": "sin(x)",
    "true_expansion": "-x**3/6 + x",
    "lstm_prediction": "* x * * 3 / 2 + 5 * x",
    "improved_lstm_prediction": "- x * * 3 / 6 + x",
    "transformer_prediction": "- x * * 3 / 6 + x"
  },
  {
    "function": "cosh(x)",
    "true_expansion": "x**4/24 + x**2/2 + 1",
    "lstm_prediction": "x * * 2 / 2 + 1",
    "improved_lstm_prediction": "x * * 4 / 24 + x * * 2 / 2 + 1",
    "transformer_prediction": "x * * 4 / 24 + x * * 2 / 2 + 1"
  },
  {
    "function": "cosh(x)",
    "true_expansion": "x**4/24 + x**2/2 + 1",
    "lstm_prediction": "x * * 2 / 2 + 1",
    "improved_lstm_prediction": "x * * 4 / 24 + x * * 2 / 2 + 1",
    "transformer_prediction": "x * * 4 / 24 + x * * 2 / 2 + 1"
  },
  {
    "function": "cos(3*x)",
    "true_expansion": "27*x**4/8 - 9*x**2/2 + 1",
    "lstm_prediction": "* x * * 2 / 2 + 1",
    "improved_lstm_prediction": "27 * x * * 4 / 8 + 9 * x * * 2 / 2 + 1",
    "transformer_prediction": "x * * 4 / 8 - 3 * x * * 2 / 2 + 3"
  },
  {
    "function": "sqrt(5*x + 1) - 3",
    "true_expansion": "-3125*x**4/128 + 125*x**3/16 - 25*x**2/8 + 5*x/2 - 2",
    "lstm_prediction": "- 3125 * x * * 4 / 128 + 125 * x * * 3 / 16 - 25 * x * * 2 / 8 + 5 * x / 2 - 2",
    "improved_lstm_prediction": "- 3125 * x * * 4 / 128 + 125 * x * * 3 / 16 - 25 * x * * 2 / 8 + 5 * x / 2 + 2",
    "transformer_prediction": "- 25 * x * * 4 / 128 + 5 * x * * 3 / 16 - 5 * x * * 2 / 8 + 5 * x / 2 + 2"
  },
  {
    "function": "2*x**2 - x + log(5*x + 1)",
    "true_expansion": "-625*x**4/4 + 125*x**3/3 - 21*x**2/2 + 4*x",
    "lstm_prediction": "625 * x * * 4 / 4 + 125 * x * * 3 / 3 + 25 * x * * 2 / 2 + 5 * x",
    "improved_lstm_prediction": "- 625 * x * * 4 / 4 + 125 * x * * 3 / 3 - 27 * x * * 2 / 2 + 4 * x",
    "transformer_prediction": "- 625 * x * * 4 / 4 + 125 * x * * 3 / 3 - 25 * x * * 2 / 2 + 3 * x"
  },
  {
    "function": "-3*x**3 - 2*x**2 + sinh(x) + 1",
    "true_expansion": "-17*x**3/6 - 2*x**2 + x + 1",
    "lstm_prediction": "- 17 * x * * 3 / 6 - 2 * x * * 2 + x + 1",
    "improved_lstm_prediction": "- 17 * x * * 3 / 6 - 2 * x * * 2 + x + 1",
    "transformer_prediction": "- 17 * x * * 3 / 6 + 2 * x * * 2 + 2 * x - 1"
  },
  {
    "function": "2*(-3*x - 1)*sqrt(x + 1)",
    "true_expansion": "-19*x**4/64 + 5*x**3/8 - 11*x**2/4 - 7*x - 2",
    "lstm_prediction": "- 23 * x * * 4 / 64 + 5 * x * * 3 - 5 * x * * 2 / 4 - 2 * x + 4",
    "improved_lstm_prediction": "- 13 * x * * 4 / 64 + 5 * x * * 3 / 8 - 7 * x * * 2 / 4 - 6 * x - 2",
    "transformer_prediction": "- 15 * x * * 4 / 128 + 3 * x * * 3 / 16 - 3 * x * * 2 / 8 - 3 * x / 2 - 3"
  },
  {
    "function": "sinh(x)",
    "true_expansion": "x**3/6 + x",
    "lstm_prediction": "x * * 3 / 2 + x",
    "improved_lstm_prediction": "x * * 3 / 6 + x",
    "transformer_prediction": "x * * 3 / 6 + x"
  },
  {
    "function": "(-2*x - 2)*sqrt(2*x + 1)",
    "true_expansion": "x**4/4 - x**2 - 4*x - 2",
    "lstm_prediction": "x * * 4 / 64 - x * * 2 / 4 - 2 * x - 2",
    "improved_lstm_prediction": "x * * 4 / 4 - x * * 2 - x - 2",
    "transformer_prediction": "- 5 * x * * 4 / 64 + x * * 3 / 8 - x * * 2 / 4 - x - 2"
  },
  {
    "function": "tan(4*x)",
    "true_expansion": "64*x**3/3 + 4*x",
    "lstm_prediction": "64 * x * * 3 / 3 + 4 * x",
    "improved_lstm_prediction": "64 * x * * 3 / 3 + 4 * x",
    "transformer_prediction": "4 * x * * 3 / 3 + 4 * x"
  },
  {
    "function": "4*sinh(x) + 3",
    "true_expansion": "2*x**3/3 + 4*x + 3",
    "lstm_prediction": "2 * x * * 3 / 3 + 6 * x + 3",
    "improved_lstm_prediction": "2 * x * * 3 / 3 + 4 * x + 3",
    "transformer_prediction": "32 * x * * 3 / 3 + 4 * x + 3"
  },
  {
    "function": "tan(x)",
    "true_expansion": "x**3/3 + x",
    "lstm_prediction": "x * * 3 / 3 + x",
    "improved_lstm_prediction": "x * * 3 / 3 + x",
    "transformer_prediction": "x * * 3 / 3 + x"
  },
  {
    "function": "atan(x)",
    "true_expansion": "-x**3/3 + x",
    "lstm_prediction": "* x * * 3 / 3 + x",
    "improved_lstm_prediction": "- x * * 3 / 3 + x",
    "transformer_prediction": "- x * * 3 / 3 + x"
  },
  {
    "function": "x**2 + 2*x + sin(x) - 1",
    "true_expansion": "-x**3/6 + x**2 + 3*x - 1",
    "lstm_prediction": "- x * * 3 / 6 + x * * 2 + 4 * x - 1",
    "improved_lstm_prediction": "- x * * 3 / 6 + x * * 2 + 3 * x - 1",
    "transformer_prediction": "- x * * 3 / 6 + 2 * x * * 2 + 3 * x + 1"
  },
  {
    "function": "cos(x)",
    "true_expansion": "x**4/24 - x**2/2 + 1",
    "lstm_prediction": "x * * 2 / 2 + 1",
    "improved_lstm_prediction": "x * * 4 / 24 - x * * 2 / 2 + 1",
    "transformer_prediction": "x * * 4 / 24 - x * * 2 / 2 + 1"
  },
  {
    "function": "2*atan(x)",
    "true_expansion": "-2*x**3/3 + 2*x",
    "lstm_prediction": "- x * * 3 / 3 + 2 * x",
    "improved_lstm_prediction": "- 2 * x * * 3 / 3 + 2 * x",
    "transformer_prediction": "- 2 * x * * 3 / 3 + 2 * x"
  },
  {
    "function": "cosh(x)",
    "true_expansion": "x**4/24 + x**2/2 + 1",
    "lstm_prediction": "x * * 2 / 2 + 1",
    "improved_lstm_prediction": "x * * 4 / 24 + x * * 2 / 2 + 1",
    "transformer_prediction": "x * * 4 / 24 + x * * 2 / 2 + 1"
  },
  {
    "function": "sqrt(x + 1)",
    "true_expansion": "-5*x**4/128 + x**3/16 - x**2/8 + x/2 + 1",
    "lstm_prediction": "- 5 * x * * 4 / 128 + x * * 3 / 16 - x * * 2 / 8 + x / 2 + 1",
    "improved_lstm_prediction": "- 5 * x * * 4 / 128 + x * * 3 / 16 - x * * 2 / 8 + x / 2 + 1",
    "transformer_prediction": "- 5 * x * * 4 / 128 + x * * 3 / 16 - x * * 2 / 8 + x / 2 + 1"
  },
  {
    "function": "(2*x + 2)*sqrt(3*x + 1)",
    "true_expansion": "-189*x**4/64 + 9*x**3/8 + 3*x**2/4 + 5*x + 2",
    "lstm_prediction": "- 837 * x * * 4 / 64 + 63 * x * * 3 - 27 * x * * 2 / 4 + 6 * x + 2",
    "improved_lstm_prediction": "- 2625 * x * * 4 / 64 + 17 * x * * 3 / 4 + 37 * x * * 2 / 4 + 5 * x + 2",
    "transformer_prediction": "- 5 * x * * 4 / 64 + x * * 3 / 8 - x * * 2 / 4 + x + 2"
  },
  {
    "function": "3*sqrt(x + 1)",
    "true_expansion": "-15*x**4/128 + 3*x**3/16 - 3*x**2/8 + 3*x/2 + 3",
    "lstm_prediction": "- 15 * x * * 4 / 128 + 3 * x * * 3 / 16 - 3 * x * * 2 / 8 + 3 * x / 2 + 1",
    "improved_lstm_prediction": "- 15 * x * * 4 / 128 + 3 * x * * 3 / 16 + 3 * x * * 2 / 8 + 3 * x / 2 + 3",
    "transformer_prediction": "- 15 * x * * 4 / 128 + 3 * x * * 3 / 16 - 3 * x * * 2 / 8 + 3 * x / 2 + 3"
  },
  {
    "function": "2*atan(x)",
    "true_expansion": "-2*x**3/3 + 2*x",
    "lstm_prediction": "- x * * 3 / 3 + 2 * x",
    "improved_lstm_prediction": "- 2 * x * * 3 / 3 + 2 * x",
    "transformer_prediction": "- 2 * x * * 3 / 3 + 2 * x"
  },
  {
    "function": "log(3*x + 1)",
    "true_expansion": "-81*x**4/4 + 9*x**3 - 9*x**2/2 + 3*x",
    "lstm_prediction": "- 81 * x * * 4 / 4 + 9 * x * * 3 - 9 * x * * 2 / 2 + 3 * x",
    "improved_lstm_prediction": "- 81 * x * * 4 / 4 + 9 * x * * 3 - 9 * x * * 2 / 2 + 3 * x",
    "transformer_prediction": "- 3 * x * * 4 / 4 + x * * 3 - 3 * x * * 2 / 2 + 3 * x"
  },
  {
    "function": "2*x**3 - 3*x**2 + 3*x + cos(x) - 1",
    "true_expansion": "x**4/24 + 2*x**3 - 7*x**2/2 + 3*x",
    "lstm_prediction": "x * * 4 / 24 + 2 * x * * 3 - 5 * x * * 2 / 2 + 3 * x",
    "improved_lstm_prediction": "x * * 4 / 24 + 2 * x * * 3 - 7 * x * * 2 / 2 + 3 * x",
    "transformer_prediction": "x * * 4 / 24 + 3 * x * * 3 + 5 * x * * 2 / 2 + 3 * x + 2"
  },
  {
    "function": "2*(-3*x**3 + 3*x**2 - x + 1)/(1 - x)",
    "true_expansion": "6*x**2 + 2",
    "lstm_prediction": "14 * x * * 4 + 14 * x * * 3 + 12 * x * * 2 + 4 * x",
    "improved_lstm_prediction": "- 6 * x * * 4 + 2 * x * * 3 + 2 * x * * 2 + 2",
    "transformer_prediction": "- 3 * x * * 4 - 3 * x * * 3 - 3 * x * * 2 + 3 * x + 3"
  },
  {
    "function": "1/(1 - x)",
    "true_expansion": "x**4 + x**3 + x**2 + x + 1",
    "lstm_prediction": "x * * 4 + x * * 3 + x * * 2 + x + 1",
    "improved_lstm_prediction": "x * * 4 + x * * 3 + x * * 2 + x + 1",
    "transformer_prediction": "x * * 4 + x * * 3 + x * * 2 + x + 1"
  },
  {
    "function": "cosh(3*x)",
    "true_expansion": "27*x**4/8 + 9*x**2/2 + 1",
    "lstm_prediction": "63 * x * * 2 / 2 + 1",
    "improved_lstm_prediction": "27 * x * * 4 / 8 + 9 * x * * 2 / 2 + 1",
    "transformer_prediction": "x * * 4 / 8 + 3 * x * * 2 / 2 + 3"
  },
  {
    "function": "3*cosh(x)",
    "true_expansion": "x**4/8 + 3*x**2/2 + 3",
    "lstm_prediction": "x * * 2 / 2 + 3",
    "improved_lstm_prediction": "x * * 4 / 8 + 3 * x * * 2 / 2 + 3",
    "transformer_prediction": "x * * 4 / 8 + 3 * x * * 2 / 2 + 3"
  },
  {
    "function": "sin(x)",
    "true_expansion": "-x**3/6 + x",
    "lstm_prediction": "* x * * 3 / 2 + 5 * x",
    "improved_lstm_prediction": "- x * * 3 / 6 + x",
    "transformer_prediction": "- x * * 3 / 6 + x"
  },
  {
    "function": "3*x + 5/(1 - x)",
    "true_expansion": "5*x**4 + 5*x**3 + 5*x**2 + 8*x + 5",
    "lstm_prediction": "5 * x * * 4 + 5 * x * * 3 + 7 * x * * 2 + 6 * x + 2",
    "improved_lstm_prediction": "5 * x * * 4 + 5 * x * * 3 + 5 * x * * 2 + 8 * x + 8",
    "transformer_prediction": "625 * x * * 4 + 125 * x * * 3 + 25 * x * * 2 + 5 * x + 2"
  },
  {
    "function": "x",
    "true_expansion": "x",
    "lstm_prediction": "x * * 2 / 2 + 1",
    "improved_lstm_prediction": "x * * 3 + x",
    "transformer_prediction": "x"
  },
  {
    "function": "2/(1 - x)",
    "true_expansion": "2*x**4 + 2*x**3 + 2*x**2 + 2*x + 2",
    "lstm_prediction": "2 * x * * 4 + 2 * x * * 2 + 2 * x + 2",
    "improved_lstm_prediction": "2 * x * * 4 + 2 * x * * 3 + 2 * x * * 2 + 2 * x + 2",
    "transformer_prediction": "2 * x * * 4 + 2 * x * * 3 + 2 * x * * 2 + 2 * x + 2"
  },
  {
    "function": "cos(2*x)",
    "true_expansion": "2*x**4/3 - 2*x**2 + 1",
    "lstm_prediction": "x * * 2 + 4",
    "improved_lstm_prediction": "2 * x * * 4 / 3 + 2 * x * * 2 + 1",
    "transformer_prediction": "2 * x * * 4 / 3 - 2 * x * * 2 + 1"
  },
  {
    "function": "1/(1 - x)",
    "true_expansion": "x**4 + x**3 + x**2 + x + 1",
    "lstm_prediction": "x * * 4 + x * * 3 + x * * 2 + x + 1",
    "improved_lstm_prediction": "x * * 4 + x * * 3 + x * * 2 + x + 1",
    "transformer_prediction": "x * * 4 + x * * 3 + x * * 2 + x + 1"
  },
  {
    "function": "x",
    "true_expansion": "x",
    "lstm_prediction": "x * * 2 / 2 + 1",
    "improved_lstm_prediction": "x * * 3 + x",
    "transformer_prediction": "x"
  },
  {
    "function": "(-3*x**2 + x - 1)*atan(3*x)",
    "true_expansion": "-9*x**4 + 3*x**2 - 3*x",
    "lstm_prediction": "- 27 * x * * 4 - 8 * x * * 3 / 2 - 6 * x * * 2 - 3 * x",
    "improved_lstm_prediction": "9 * x * * 4 - 9 * x * * 3 + 3 * x * * 2 - 3 * x",
    "transformer_prediction": "- 2 * x * * 4 - 2 * x * * 3 / 3 + 3 * x * * 2 + x"
  },
  {
    "function": "cos(3*x)",
    "true_expansion": "27*x**4/8 - 9*x**2/2 + 1",
    "lstm_prediction": "* x * * 2 / 2 + 1",
    "improved_lstm_prediction": "27 * x * * 4 / 8 + 9 * x * * 2 / 2 + 1",
    "transformer_prediction": "x * * 4 / 8 - 3 * x * * 2 / 2 + 3"
  },
  {
    "function": "tan(x)",
    "true_expansion": "x**3/3 + x",
    "lstm_prediction": "x * * 3 / 3 + x",
    "improved_lstm_prediction": "x * * 3 / 3 + x",
    "transformer_prediction": "x * * 3 / 3 + x"
  },
  {
    "function": "1/(1 - x)",
    "true_expansion": "x**4 + x**3 + x**2 + x + 1",
    "lstm_prediction": "x * * 4 + x * * 3 + x * * 2 + x + 1",
    "improved_lstm_prediction": "x * * 4 + x * * 3 + x * * 2 + x + 1",
    "transformer_prediction": "x * * 4 + x * * 3 + x * * 2 + x + 1"
  },
  {
    "function": "cos(2*x)",
    "true_expansion": "2*x**4/3 - 2*x**2 + 1",
    "lstm_prediction": "x * * 2 + 4",
    "improved_lstm_prediction": "2 * x * * 4 / 3 + 2 * x * * 2 + 1",
    "transformer_prediction": "2 * x * * 4 / 3 - 2 * x * * 2 + 1"
  },
  {
    "function": "5*log(x + 1)",
    "true_expansion": "-5*x**4/4 + 5*x**3/3 - 5*x**2/2 + 5*x",
    "lstm_prediction": "- 5 * x * * 4 / 4 + 5 * x * * 3 / 3 - 5 * x * * 2 / 2 + 5 * x",
    "improved_lstm_prediction": "- 5 * x * * 4 / 4 + 5 * x * * 3 / 3 - 5 * x * * 2 / 2 + 5 * x",
    "transformer_prediction": "- 625 * x * * 4 / 4 + 125 * x * * 3 / 3 - 25 * x * * 2 / 2 + 5 * x"
  },
  {
    "function": "5*(-x**3 + 2*x**2 + 2*x - 1)*sin(x)",
    "true_expansion": "-20*x**4/3 + 65*x**3/6 + 10*x**2 - 5*x",
    "lstm_prediction": "- 85 * x * * 4 / 6 + 10 * x * * 3 / 3 + 5 * x * * 2 - 5 * x",
    "improved_lstm_prediction": "- 85 * x * * 4 / 6 + 10 * x * * 3 / 3 + 10 * x * * 2 - 5 * x",
    "transformer_prediction": "- 5 * x * * 4 / 6 + 25 * x * * 3 / 6 + 10 * x * * 2 + 10 * x"
  },
  {
    "function": "exp(x)",
    "true_expansion": "x**4/24 + x**3/6 + x**2/2 + x + 1",
    "lstm_prediction": "x * * 4 / 24 + x * * 2 / 2 + x + 1",
    "improved_lstm_prediction": "x * * 4 / 24 + x * * 3 / 6 + x * * 2 + x + 1",
    "transformer_prediction": "x * * 4 / 24 + x * * 3 / 6 + x * * 2 / 2 + x + 1"
  },
  {
    "function": "0",
    "true_expansion": "0",
    "lstm_prediction": "* x + 1",
    "improved_lstm_prediction": "0",
    "transformer_prediction": "0"
  },
  {
    "function": "sinh(x)",
    "true_expansion": "x**3/6 + x",
    "lstm_prediction": "x * * 3 / 2 + x",
    "improved_lstm_prediction": "x * * 3 / 6 + x",
    "transformer_prediction": "x * * 3 / 6 + x"
  },
  {
    "function": "5*sin(x)",
    "true_expansion": "-5*x**3/6 + 5*x",
    "lstm_prediction": "* x * * 3 / 6 + 5 * x",
    "improved_lstm_prediction": "5 * x * * 3 / 6 + 5 * x",
    "transformer_prediction": "- 125 * x * * 3 / 6 + 5 * x"
  },
  {
    "function": "1/(1 - x)",
    "true_expansion": "x**4 + x**3 + x**2 + x + 1",
    "lstm_prediction": "x * * 4 + x * * 3 + x * * 2 + x + 1",
    "improved_lstm_prediction": "x * * 4 + x * * 3 + x * * 2 + x + 1",
    "transformer_prediction": "x * * 4 + x * * 3 + x * * 2 + x + 1"
  },
  {
    "function": "sinh(x)",
    "true_expansion": "x**3/6 + x",
    "lstm_prediction": "x * * 3 / 2 + x",
    "improved_lstm_prediction": "x * * 3 / 6 + x",
    "transformer_prediction": "x * * 3 / 6 + x"
  },
  {
    "function": "sqrt(x + 1)",
    "true_expansion": "-5*x**4/128 + x**3/16 - x**2/8 + x/2 + 1",
    "lstm_prediction": "- 5 * x * * 4 / 128 + x * * 3 / 16 - x * * 2 / 8 + x / 2 + 1",
    "improved_lstm_prediction": "- 5 * x * * 4 / 128 + x * * 3 / 16 - x * * 2 / 8 + x / 2 + 1",
    "transformer_prediction": "- 5 * x * * 4 / 128 + x * * 3 / 16 - x * * 2 / 8 + x / 2 + 1"
  },
  {
    "function": "atan(x)",
    "true_expansion": "-x**3/3 + x",
    "lstm_prediction": "* x * * 3 / 3 + x",
    "improved_lstm_prediction": "- x * * 3 / 3 + x",
    "transformer_prediction": "- x * * 3 / 3 + x"
  },
  {
    "function": "-x**2 + x + 4*atan(x)",
    "true_expansion": "-4*x**3/3 - x**2 + 5*x",
    "lstm_prediction": "- 4 * x * * 3 / 3 - x * * 2 + 4 * x",
    "improved_lstm_prediction": "- 4 * x * * 3 / 3 - x * * 2 + 5 * x",
    "transformer_prediction": "- 4 * x * * 3 / 3 + x * * 2 + 5 * x + 2"
  },
  {
    "function": "4*(3*x - 2)*tan(x)",
    "true_expansion": "4*x**4 - 8*x**3/3 + 12*x**2 - 8*x",
    "lstm_prediction": "- 8 * x * * 4 / 3 - 8 * x * * 3 / 3 - 8 * x * * 2 + 8 * x",
    "improved_lstm_prediction": "- 4 * x * * 4 + 8 * x * * 3 / 3 + 8 * x * * 2 + 8 * x",
    "transformer_prediction": "- 64 * x * * 4 - 12 * x * * 3 / 3 - 12 * x * * 2 + 8 * x"
  },
  {
    "function": "3*x + 4*tan(x) + 3",
    "true_expansion": "4*x**3/3 + 7*x + 3",
    "lstm_prediction": "4 * x * * 3 / 3 + 5 * x + 5",
    "improved_lstm_prediction": "4 * x * * 3 / 3 + 7 * x + 3",
    "transformer_prediction": "64 * x * * 3 / 3 + 4 * x + 3"
  },
  {
    "function": "x",
    "true_expansion": "x",
    "lstm_prediction": "x * * 2 / 2 + 1",
    "improved_lstm_prediction": "x * * 3 + x",
    "transformer_prediction": "x"
  },
  {
    "function": "x - 1",
    "true_expansion": "x - 1",
    "lstm_prediction": "x * * 2 + 1",
    "improved_lstm_prediction": "x * * 2 + x - 1",
    "transformer_prediction": "x - 1"
  },
  {
    "function": "sqrt(3*x + 1)*(x**2 - 2*x + 1)",
    "true_expansion": "-981*x**4/128 + 87*x**3/16 - 25*x**2/8 - x/2 + 1",
    "lstm_prediction": "- 711 * x * * 4 / 128 + 51 * x * * 3 / 16 + 33 * x * * 2 / 8 - x / 2 + 1",
    "improved_lstm_prediction": "- 117 * x * * 4 / 128 + 87 * x * * 3 / 16 + 13 * x * * 2 / 8 - x / 2 + 1",
    "transformer_prediction": "- 15 * x * * 4 / 128 + 3 * x * * 3 / 16 + 3 * x * * 2 / 8 + 3 * x / 2 + 3"
  },
  {
    "function": "2*x**3 + x**2 + 3*x + 2*sqrt(x + 1)",
    "true_expansion": "-5*x**4/64 + 17*x**3/8 + 3*x**2/4 + 4*x + 2",
    "lstm_prediction": "- 5 * x * * 4 / 64 + 17 * x * * 3 / 8 + 3 * x * * 2 / 4 + 2 * x + 1",
    "improved_lstm_prediction": "- 5 * x * * 4 / 64 + 13 * x * * 3 / 8 + 3 * x * * 2 / 4 + 5 * x + 2",
    "transformer_prediction": "- 5 * x * * 4 / 128 + 17 * x * * 3 / 16 + 17 * x * * 2 / 8 + 3 * x / 2 + 3"
  },
  {
    "function": "sinh(3*x)",
    "true_expansion": "9*x**3/2 + 3*x",
    "lstm_prediction": "9 * x * * 2 / 2 + 1",
    "improved_lstm_prediction": "9 * x * * 3 / 2 + 3 * x",
    "transformer_prediction": "9 * x * * 3 / 2 + 3 * x"
  },
  {
    "function": "sqrt(2*x + 1)",
    "true_expansion": "-5*x**4/8 + x**3/2 - x**2/2 + x + 1",
    "lstm_prediction": "- 5 * x * * 4 / 8 + x * * 2 / 2 + x + 1",
    "improved_lstm_prediction": "- 5 * x * * 4 / 8 + x * * 3 / 2 - x * * 2 / 2 + x + 1",
    "transformer_prediction": "- 5 * x * * 4 / 64 + x * * 3 / 8 - x * * 2 / 4 + x + 2"
  },
  {
    "function": "4*cosh(x)",
    "true_expansion": "x**4/6 + 2*x**2 + 4",
    "lstm_prediction": "x * * 4 / 6 + 2 * x * * 2 + 4",
    "improved_lstm_prediction": "x * * 4 / 6 + 2 * x * * 2 + 4",
    "transformer_prediction": "x * * 4 / 6 + 2 * x * * 2 + 4"
  },
  {
    "function": "3/(1 - x)",
    "true_expansion": "3*x**4 + 3*x**3 + 3*x**2 + 3*x + 3",
    "lstm_prediction": "81 * x * * 4 + 27 * x * * 3 + 9 * x * * 2 + 6 * x + 3",
    "improved_lstm_prediction": "3 * x * * 4 + 3 * x * * 3 + 3 * x * * 2 + 3 * x + 3",
    "transformer_prediction": "3 * x * * 4 + 3 * x * * 3 + 3 * x * * 2 + 3 * x + 3"
  },
  {
    "function": "atan(x)",
    "true_expansion": "-x**3/3 + x",
    "lstm_prediction": "* x * * 3 / 3 + x",
    "improved_lstm_prediction": "- x * * 3 / 3 + x",
    "transformer_prediction": "- x * * 3 / 3 + x"
  },
  {
    "function": "-3*x**3 - x**2 - 3*x + 4*exp(x) - 2",
    "true_expansion": "x**4/6 - 7*x**3/3 + x**2 + x + 2",
    "lstm_prediction": "x * * 4 / 6 - 3 * x * * 3 / 3 + x * * 2 + 2 * x - 2",
    "improved_lstm_prediction": "x * * 4 / 6 - x * * 3 / 3 + x * * 2 + x + 4",
    "transformer_prediction": "x * * 4 / 6 + 2 * x * * 3 / 3 + x * * 2 + x + 3"
  },
  {
    "function": "cosh(4*x)",
    "true_expansion": "32*x**4/3 + 8*x**2 + 1",
    "lstm_prediction": "32 * x * * 2 / 2 + 4",
    "improved_lstm_prediction": "32 * x * * 4 / 3 + 8 * x * * 2 + 1",
    "transformer_prediction": "x * * 4 / 6 + 2 * x * * 2 + 4"
  },
  {
    "function": "-x**3 + 3*x**2 - 3*x + sqrt(x + 1) - 1",
    "true_expansion": "-5*x**4/128 - 15*x**3/16 + 23*x**2/8 - 5*x/2",
    "lstm_prediction": "- 5 * x * * 4 / 128 - 15 * x * * 3 / 16 + 17 * x * * 2 / 8 - x / 2 + 1",
    "improved_lstm_prediction": "- 5 * x * * 4 / 128 - 15 * x * * 3 / 16 + 7 * x * * 2 / 8 - 5 * x / 2",
    "transformer_prediction": "- 5 * x * * 4 / 128 + 33 * x * * 3 / 16 - 9 * x * * 2 / 8 - 3 * x / 2 + 2"
  },
  {
    "function": "3*(3*x**3 + 2*x**2 - 3*x - 1)*cosh(x)",
    "true_expansion": "23*x**4/8 + 9*x**3/2 + 9*x**2/2 - 9*x - 3",
    "lstm_prediction": "23 * x * * 4 / 8 + 3 * x * * 3 / 2 + 3 * x * * 2 / 2 - 3 * x - 1",
    "improved_lstm_prediction": "23 * x * * 4 / 8 + 9 * x * * 3 / 2 + 9 * x * * 2 / 2 - 9 * x - 3",
    "transformer_prediction": "- 3 * x * * 4 / 8 + 3 * x * * 3 / 2 + 3 * x * * 2 / 2 + 3 * x + 3"
  },
  {
    "function": "5*sqrt(x + 1)",
    "true_expansion": "-25*x**4/128 + 5*x**3/16 - 5*x**2/8 + 5*x/2 + 5",
    "lstm_prediction": "- 25 * x * * 4 / 128 + 5 * x * * 3 / 16 - 5 * x * * 2 / 8 + 5 * x / 2 + 5",
    "improved_lstm_prediction": "- 25 * x * * 4 / 128 + 5 * x * * 3 / 16 - 5 * x * * 2 / 8 + 5 * x / 2 + 3",
    "transformer_prediction": "- 25 * x * * 4 / 128 + 5 * x * * 3 / 16 - 5 * x * * 2 / 8 + 5 * x / 2 + 5"
  },
  {
    "function": "(4 - x)*tan(x)",
    "true_expansion": "-x**4/3 + 4*x**3/3 - x**2 + 4*x",
    "lstm_prediction": "- 4 * x * * 4 / 3 - 4 * x * * 3 / 3 - x * * 2 + 4 * x",
    "improved_lstm_prediction": "- 4 * x * * 4 / 3 + 4 * x * * 3 / 3 - x * * 2 + 4 * x",
    "transformer_prediction": "- 64 * x * * 4 / 3 + 64 * x * * 3 / 3 - 8 * x * * 2 + 4 * x"
  },
  {
    "function": "x",
    "true_expansion": "x",
    "lstm_prediction": "x * * 2 / 2 + 1",
    "improved_lstm_prediction": "x * * 3 + x",
    "transformer_prediction": "x"
  },
  {
    "function": "3*x + 4*tan(x) - 2",
    "true_expansion": "4*x**3/3 + 7*x - 2",
    "lstm_prediction": "4 * x * * 3 / 3 + 5 * x - 2",
    "improved_lstm_prediction": "4 * x * * 3 / 3 + 7 * x - 2",
    "transformer_prediction": "64 * x * * 3 / 3 + 4 * x - 3"
  },
  {
    "function": "sqrt(3*x + 1)",
    "true_expansion": "-405*x**4/128 + 27*x**3/16 - 9*x**2/8 + 3*x/2 + 1",
    "lstm_prediction": "- 405 * x * * 4 / 128 + 27 * x * * 3 / 16 - 9 * x * * 2 / 8 + 3 * x / 2 + 1",
    "improved_lstm_prediction": "- 405 * x * * 4 / 128 + 27 * x * * 3 / 16 - 9 * x * * 2 / 8 + 3 * x / 2 + 1",
    "transformer_prediction": "- 15 * x * * 4 / 128 + 3 * x * * 3 / 16 - 3 * x * * 2 / 8 + 3 * x / 2 + 3"
  },
  {
    "function": "sin(x)",
    "true_expansion": "-x**3/6 + x",
    "lstm_prediction": "* x * * 3 / 2 + 5 * x",
    "improved_lstm_prediction": "- x * * 3 / 6 + x",
    "transformer_prediction": "- x * * 3 / 6 + x"
  },
  {
    "function": "4*log(x + 1)",
    "true_expansion": "-x**4 + 4*x**3/3 - 2*x**2 + 4*x",
    "lstm_prediction": "- x * * 4 + 4 * x * * 3 / 3 - 2 * x * * 2 + 4 * x",
    "improved_lstm_prediction": "- x * * 4 + 4 * x * * 3 / 3 + 2 * x * * 2 + 4 * x",
    "transformer_prediction": "- 64 * x * * 4 + 64 * x * * 3 / 3 - 8 * x * * 2 + 4 * x"
  },
  {
    "function": "5*cosh(x)",
    "true_expansion": "5*x**4/24 + 5*x**2/2 + 5",
    "lstm_prediction": "5 * x * * 3 / 6 + 5 * x",
    "improved_lstm_prediction": "5 * x * * 4 / 24 + 5 * x * * 2 / 2 + 5",
    "transformer_prediction": "625 * x * * 4 / 24 + 25 * x * * 2 / 2 + 1"
  },
  {
    "function": "4*sinh(x)",
    "true_expansion": "2*x**3/3 + 4*x",
    "lstm_prediction": "2 * x * * 3 / 3 + 4 * x",
    "improved_lstm_prediction": "2 * x * * 3 / 3 + 4 * x",
    "transformer_prediction": "32 * x * * 3 / 3 + 4 * x"
  },
  {
    "function": "sinh(x)",
    "true_expansion": "x**3/6 + x",
    "lstm_prediction": "x * * 3 / 2 + x",
    "improved_lstm_prediction": "x * * 3 / 6 + x",
    "transformer_prediction": "x * * 3 / 6 + x"
  },
  {
    "function": "2*exp(x)",
    "true_expansion": "x**4/12 + x**3/3 + x**2 + 2*x + 2",
    "lstm_prediction": "x * * 4 / 12 + x * * 3 / 2 + 2 * x * * 2 + x + 4",
    "improved_lstm_prediction": "x * * 4 / 12 + x * * 3 / 3 + x * * 2 + 2 * x + 2",
    "transformer_prediction": "2 * x * * 4 / 3 + 4 * x * * 3 / 3 + 2 * x * * 2 + 2 * x + 1"
  },
  {
    "function": "2*(x**3 + 3*x - 1)*exp(x)",
    "true_expansion": "35*x**4/12 + 14*x**3/3 + 5*x**2 + 4*x - 2",
    "lstm_prediction": "23 * x * * 4 / 6 + 14 * x * * 3 / 3 + 4 * x * * 2 - 2 * x",
    "improved_lstm_prediction": "17 * x * * 4 / 6 + 13 * x * * 3 / 3 + 4 * x * * 2 + 6 * x - 2",
    "transformer_prediction": "- 3 * x * * 4 / 8 - x * * 3 / 3 + 3 * x * * 2 / 2 + 3 * x + 1"
  },
  {
    "function": "tan(5*x)",
    "true_expansion": "125*x**3/3 + 5*x",
    "lstm_prediction": "125 * x * * 3 / 3 + 5 * x",
    "improved_lstm_prediction": "125 * x * * 3 / 3 + 5 * x",
    "transformer_prediction": "5 * x * * 3 / 3 + 5 * x"
  },
  {
    "function": "2*x + cosh(x) + 3",
    "true_expansion": "x**4/24 + x**2/2 + 2*x + 4",
    "lstm_prediction": "x * * 4 / 24 + x * * 2 / 2 + 4",
    "improved_lstm_prediction": "x * * 4 / 24 + x * * 2 / 2 + 2 * x + 4",
    "transformer_prediction": "x * * 4 / 24 + x * * 2 / 2 + 4"
  },
  {
    "function": "exp(x)",
    "true_expansion": "x**4/24 + x**3/6 + x**2/2 + x + 1",
    "lstm_prediction": "x * * 4 / 24 + x * * 2 / 2 + x + 1",
    "improved_lstm_prediction": "x * * 4 / 24 + x * * 3 / 6 + x * * 2 + x + 1",
    "transformer_prediction": "x * * 4 / 24 + x * * 3 / 6 + x * * 2 / 2 + x + 1"
  },
  {
    "function": "2*x**3 - x",
    "true_expansion": "2*x**3 - x",
    "lstm_prediction": "2 * x * * 3 - 2 * x",
    "improved_lstm_prediction": "10 * x * * 4 - 2 * x * * 3 - x",
    "transformer_prediction": "- 6 * x * * 2 + 6 * x"
  },
  {
    "function": "5*cos(x)",
    "true_expansion": "5*x**4/24 - 5*x**2/2 + 5",
    "lstm_prediction": "5 * x * * 3 / 8 + 5 * x / 2 + 5",
    "improved_lstm_prediction": "5 * x * * 4 / 24 + 5 * x * * 2 / 2 + 5",
    "transformer_prediction": "5 * x * * 4 / 24 - 5 * x * * 2 / 2 + 5"
  },
  {
    "function": "2*x",
    "true_expansion": "2*x",
    "lstm_prediction": "2 * x",
    "improved_lstm_prediction": "2 * x * * 2 + 2 * x",
    "transformer_prediction": "2 * x"
  },
  {
    "function": "exp(x)",
    "true_expansion": "x**4/24 + x**3/6 + x**2/2 + x + 1",
    "lstm_prediction": "x * * 4 / 24 + x * * 2 / 2 + x + 1",
    "improved_lstm_prediction": "x * * 4 / 24 + x * * 3 / 6 + x * * 2 + x + 1",
    "transformer_prediction": "x * * 4 / 24 + x * * 3 / 6 + x * * 2 / 2 + x + 1"
  },
  {
    "function": "(2*x**2 - 2*x - 1)*exp(x)",
    "true_expansion": "5*x**4/8 + 5*x**3/6 - x**2/2 - 3*x - 1",
    "lstm_prediction": "- 19 * x * * 4 / 24 + 8 * x * * 3 / 3 + 5 * x * * 2 / 2 - 2 * x - 1",
    "improved_lstm_prediction": "- 19 * x * * 4 / 24 + 4 * x * * 3 / 3 - 5 * x * * 2 / 2 - x - 1",
    "transformer_prediction": "- 5 * x * * 4 / 12 - 13 * x * * 3 / 6 - 4 * x * * 2 - 4 * x - 2"
  },
  {
    "function": "log(x + 1)",
    "true_expansion": "-x**4/4 + x**3/3 - x**2/2 + x",
    "lstm_prediction": "- x * * 4 / 4 + x * * 3 / 3 - x * * 2 / 2 + x",
    "improved_lstm_prediction": "- x * * 4 / 4 + x * * 3 / 3 - x * * 2 / 2 + x",
    "transformer_prediction": "- x * * 4 / 4 + x * * 3 / 3 - x * * 2 / 2 + x"
  },
  {
    "function": "tan(x)",
    "true_expansion": "x**3/3 + x",
    "lstm_prediction": "x * * 3 / 3 + x",
    "improved_lstm_prediction": "x * * 3 / 3 + x",
    "transformer_prediction": "x * * 3 / 3 + x"
  },
  {
    "function": "sinh(x)",
    "true_expansion": "x**3/6 + x",
    "lstm_prediction": "x * * 3 / 2 + x",
    "improved_lstm_prediction": "x * * 3 / 6 + x",
    "transformer_prediction": "x * * 3 / 6 + x"
  },
  {
    "function": "x",
    "true_expansion": "x",
    "lstm_prediction": "x * * 2 / 2 + 1",
    "improved_lstm_prediction": "x * * 3 + x",
    "transformer_prediction": "x"
  },
  {
    "function": "exp(3*x)",
    "true_expansion": "27*x**4/8 + 9*x**3/2 + 9*x**2/2 + 3*x + 1",
    "lstm_prediction": "27 * x * * 4 / 8 + 9 * x * * 3 / 2 + 9 * x * * 2 / 2 + 3 * x + 1",
    "improved_lstm_prediction": "81 * x * * 4 / 8 + 9 * x * * 3 + 9 * x * * 2 / 2 + 3 * x + 1",
    "transformer_prediction": "27 * x * * 4 / 8 + 9 * x * * 3 / 2 + 9 * x * * 2 / 2 + 3 * x + 1"
  },
  {
    "function": "5*x - 1",
    "true_expansion": "5*x - 1",
    "lstm_prediction": "5 * x - 1",
    "improved_lstm_prediction": "5 * x * * 2 + 5 * x - 1",
    "transformer_prediction": "5 * x - 1"
  },
  {
    "function": "2*cos(x)",
    "true_expansion": "x**4/12 - x**2 + 2",
    "lstm_prediction": "x * * 2 / 2 + 2",
    "improved_lstm_prediction": "x * * 4 / 12 - x * * 2 + 2",
    "transformer_prediction": "2 * x * * 4 / 3 - 2 * x * * 2 + 1"
  },
  {
    "function": "sin(4*x)",
    "true_expansion": "-32*x**3/3 + 4*x",
    "lstm_prediction": "* * x * * 3 / 3 + 4 * x",
    "improved_lstm_prediction": "32 * 32 * x * * 3 / 3 + 4 * x",
    "transformer_prediction": "- 32 * x * * 3 / 3 + 4 * x"
  },
  {
    "function": "-2*x + sin(5*x) + 1",
    "true_expansion": "-125*x**3/6 + 3*x + 1",
    "lstm_prediction": "- 125 * x * * 3 / 6 + 3 * x + 1",
    "improved_lstm_prediction": "- 125 * x * * 3 / 6 + 3 * x + 1",
    "transformer_prediction": "- 125 * x * * 3 / 6 + 3 * x + 1"
  },
  {
    "function": "5*cos(x)",
    "true_expansion": "5*x**4/24 - 5*x**2/2 + 5",
    "lstm_prediction": "5 * x * * 3 / 8 + 5 * x / 2 + 5",
    "improved_lstm_prediction": "5 * x * * 4 / 24 + 5 * x * * 2 / 2 + 5",
    "transformer_prediction": "5 * x * * 4 / 24 - 5 * x * * 2 / 2 + 5"
  },
  {
    "function": "1/(1 - x)",
    "true_expansion": "x**4 + x**3 + x**2 + x + 1",
    "lstm_prediction": "x * * 4 + x * * 3 + x * * 2 + x + 1",
    "improved_lstm_prediction": "x * * 4 + x * * 3 + x * * 2 + x + 1",
    "transformer_prediction": "x * * 4 + x * * 3 + x * * 2 + x + 1"
  },
  {
    "function": "log(x + 1)",
    "true_expansion": "-x**4/4 + x**3/3 - x**2/2 + x",
    "lstm_prediction": "- x * * 4 / 4 + x * * 3 / 3 - x * * 2 / 2 + x",
    "improved_lstm_prediction": "- x * * 4 / 4 + x * * 3 / 3 - x * * 2 / 2 + x",
    "transformer_prediction": "- x * * 4 / 4 + x * * 3 / 3 - x * * 2 / 2 + x"
  },
  {
    "function": "sin(x)",
    "true_expansion": "-x**3/6 + x",
    "lstm_prediction": "* x * * 3 / 2 + 5 * x",
    "improved_lstm_prediction": "- x * * 3 / 6 + x",
    "transformer_prediction": "- x * * 3 / 6 + x"
  },
  {
    "function": "sqrt(5*x + 1)",
    "true_expansion": "-3125*x**4/128 + 125*x**3/16 - 25*x**2/8 + 5*x/2 + 1",
    "lstm_prediction": "* x * * 4 / 128 + x * * 3 / 16 - x * * 2 / 8 + x / 2 + 1",
    "improved_lstm_prediction": "- 3125 * x * * 4 / 128 + 125 * x * * 3 / 16 - 25 * x * * 2 / 8 + 5 * x / 2 + 1",
    "transformer_prediction": "- 25 * x * * 4 / 128 + 5 * x * * 3 / 16 - 5 * x * * 2 / 8 + 5 * x / 2 + 5"
  },
  {
    "function": "sin(4*x)",
    "true_expansion": "-32*x**3/3 + 4*x",
    "lstm_prediction": "* * x * * 3 / 3 + 4 * x",
    "improved_lstm_prediction": "32 * 32 * x * * 3 / 3 + 4 * x",
    "transformer_prediction": "- 32 * x * * 3 / 3 + 4 * x"
  },
  {
    "function": "-2*x**2 - x + 3*sinh(x) - 2",
    "true_expansion": "x**3/2 - 2*x**2 + 2*x - 2",
    "lstm_prediction": "x * * 3 / 2 - 2 * x * * 2 + x - 2",
    "improved_lstm_prediction": "x * * 3 / 2 - 2 * x * * 2 + 2 * x - 2",
    "transformer_prediction": "x * * 3 / 3 - 2 * x * * 2 + 2 * x - 2"
  },
  {
    "function": "0",
    "true_expansion": "0",
    "lstm_prediction": "* x + 1",
    "improved_lstm_prediction": "0",
    "transformer_prediction": "0"
  },
  {
    "function": "-x**3 - 2*x**2 + 3*x + 3*sin(x) + 2",
    "true_expansion": "-3*x**3/2 - 2*x**2 + 6*x + 2",
    "lstm_prediction": "- x * * 3 / 2 - 2 * x * * 2 + 5 * x + 2",
    "improved_lstm_prediction": "- x * * 3 - 2 * x * * 2 + 6 * x + 2",
    "transformer_prediction": "- 17 * x * * 3 / 6 + 2 * x * * 2 + 4 * x + 3"
  },
  {
    "function": "sqrt(x + 1)",
    "true_expansion": "-5*x**4/128 + x**3/16 - x**2/8 + x/2 + 1",
    "lstm_prediction": "- 5 * x * * 4 / 128 + x * * 3 / 16 - x * * 2 / 8 + x / 2 + 1",
    "improved_lstm_prediction": "- 5 * x * * 4 / 128 + x * * 3 / 16 - x * * 2 / 8 + x / 2 + 1",
    "transformer_prediction": "- 5 * x * * 4 / 128 + x * * 3 / 16 - x * * 2 / 8 + x / 2 + 1"
  },
  {
    "function": "-2 + 1/(1 - 2*x)",
    "true_expansion": "16*x**4 + 8*x**3 + 4*x**2 + 2*x - 1",
    "lstm_prediction": "16 * x * * 4 + 8 * x * * 3 + 4 * x * * 2 + x",
    "improved_lstm_prediction": "16 * x * * 4 + 8 * x * * 3 + 4 * x * * 2 + 2 * x - 1",
    "transformer_prediction": "2 * x * * 4 + 2 * x * * 3 + 2 * x * * 2 + 2 * x + 1"
  },
  {
    "function": "4*(x**2 + x - 2)*atan(x)",
    "true_expansion": "-4*x**4/3 + 20*x**3/3 + 4*x**2 - 8*x",
    "lstm_prediction": "8 * x * * 4 / 3 + 4 * x * * 3 / 3 + 4 * x * * 2 - 8 * x",
    "improved_lstm_prediction": "- 2 * x * * 4 / 3 + 8 * x * * 3 / 3 + 4 * x * * 2 - 8 * x",
    "transformer_prediction": "- 40 * x * * 4 / 3 + 40 * x * * 3 / 3 - 8 * x * * 2 + 4 * x"
  },
  {
    "function": "log(4*x + 1)",
    "true_expansion": "-64*x**4 + 64*x**3/3 - 8*x**2 + 4*x",
    "lstm_prediction": "- 64 * x * * 4 + 64 * x * * 3 / 3 - 8 * x * * 2 + 4 * x",
    "improved_lstm_prediction": "- 64 * x * * 4 + 64 * x * * 3 / 3 + 8 * x * * 2 + 4 * x",
    "transformer_prediction": "- 64 * x * * 4 + 64 * x * * 3 / 3 - 8 * x * * 2 + 4 * x"
  },
  {
    "function": "atan(x)",
    "true_expansion": "-x**3/3 + x",
    "lstm_prediction": "* x * * 3 / 3 + x",
    "improved_lstm_prediction": "- x * * 3 / 3 + x",
    "transformer_prediction": "- x * * 3 / 3 + x"
  },
  {
    "function": "3/(1 - x)",
    "true_expansion": "3*x**4 + 3*x**3 + 3*x**2 + 3*x + 3",
    "lstm_prediction": "81 * x * * 4 + 27 * x * * 3 + 9 * x * * 2 + 6 * x + 3",
    "improved_lstm_prediction": "3 * x * * 4 + 3 * x * * 3 + 3 * x * * 2 + 3 * x + 3",
    "transformer_prediction": "3 * x * * 4 + 3 * x * * 3 + 3 * x * * 2 + 3 * x + 3"
  },
  {
    "function": "log(2*x + 1)",
    "true_expansion": "-4*x**4 + 8*x**3/3 - 2*x**2 + 2*x",
    "lstm_prediction": "- 4 * x * * 4 + 8 * x * * 3 / 3 - 2 * x * * 2 + 2 * x",
    "improved_lstm_prediction": "- 4 * x * * 4 + 8 * x * * 3 / 3 - 2 * x * * 2 + 2 * x",
    "transformer_prediction": "- 4 * x * * 4 + 8 * x * * 3 / 3 - 2 * x * * 2 + 2 * x"
  },
  {
    "function": "(-x**2 + 2*x + 3)*tan(5*x)",
    "true_expansion": "250*x**4/3 + 120*x**3 + 10*x**2 + 15*x",
    "lstm_prediction": "- 130 * x * * 4 / 3 + 10 * x * * 3 + 10 * x * * 2 + 12 * x",
    "improved_lstm_prediction": "130 * x * * 4 + 170 * x * * 3 + 15 * x * * 2 + 15 * x",
    "transformer_prediction": "5 * x * * 4 / 3 + 10 * x * * 3 / 3 + 10 * x * * 2 + 10 * x"
  },
  {
    "function": "log(x + 1)",
    "true_expansion": "-x**4/4 + x**3/3 - x**2/2 + x",
    "lstm_prediction": "- x * * 4 / 4 + x * * 3 / 3 - x * * 2 / 2 + x",
    "improved_lstm_prediction": "- x * * 4 / 4 + x * * 3 / 3 - x * * 2 / 2 + x",
    "transformer_prediction": "- x * * 4 / 4 + x * * 3 / 3 - x * * 2 / 2 + x"
  },
  {
    "function": "2*x + sinh(x) - 1",
    "true_expansion": "x**3/6 + 3*x - 1",
    "lstm_prediction": "x * * 3 / 6 + 3 * x - 1",
    "improved_lstm_prediction": "x * * 3 / 6 + 3 * x - 1",
    "transformer_prediction": "x * * 3 / 6 + 3 * x - 1"
  },
  {
    "function": "x**3 - x**2 - 2*x + atan(x) - 1",
    "true_expansion": "2*x**3/3 - x**2 - x - 1",
    "lstm_prediction": "5 * x * * 3 / 3 - x * * 2 - x - 1",
    "improved_lstm_prediction": "4 * x * * 3 / 3 - x * * 2 - x - 1",
    "transformer_prediction": "- 10 * x * * 3 / 3 - 2 * x * * 2 + 2 * x - 1"
  },
  {
    "function": "5*tan(x)",
    "true_expansion": "5*x**3/3 + 5*x",
    "lstm_prediction": "5 * x * * 3 / 3 + 5 * x",
    "improved_lstm_prediction": "5 * x * * 3 / 3 + 5 * x",
    "transformer_prediction": "5 * x * * 3 / 3 + 5 * x"
  },
  {
    "function": "4*cosh(x)",
    "true_expansion": "x**4/6 + 2*x**2 + 4",
    "lstm_prediction": "x * * 4 / 6 + 2 * x * * 2 + 4",
    "improved_lstm_prediction": "x * * 4 / 6 + 2 * x * * 2 + 4",
    "transformer_prediction": "x * * 4 / 6 + 2 * x * * 2 + 4"
  },
  {
    "function": "1/(1 - x)",
    "true_expansion": "x**4 + x**3 + x**2 + x + 1",
    "lstm_prediction": "x * * 4 + x * * 3 + x * * 2 + x + 1",
    "improved_lstm_prediction": "x * * 4 + x * * 3 + x * * 2 + x + 1",
    "transformer_prediction": "x * * 4 + x * * 3 + x * * 2 + x + 1"
  },
  {
    "function": "sinh(x)",
    "true_expansion": "x**3/6 + x",
    "lstm_prediction": "x * * 3 / 2 + x",
    "improved_lstm_prediction": "x * * 3 / 6 + x",
    "transformer_prediction": "x * * 3 / 6 + x"
  },
  {
    "function": "-x + sinh(x) - 3",
    "true_expansion": "x**3/6 - 3",
    "lstm_prediction": "x * * 3 / 6 + x - 3",
    "improved_lstm_prediction": "x * * 3 / 6 - 3",
    "transformer_prediction": "x * * 3 / 6 - 2 * x - 3"
  },
  {
    "function": "2*atan(x)",
    "true_expansion": "-2*x**3/3 + 2*x",
    "lstm_prediction": "- x * * 3 / 3 + 2 * x",
    "improved_lstm_prediction": "- 2 * x * * 3 / 3 + 2 * x",
    "transformer_prediction": "- 2 * x * * 3 / 3 + 2 * x"
  },
  {
    "function": "2*x**2 - x + sin(x) + 2",
    "true_expansion": "-x**3/6 + 2*x**2 + 2",
    "lstm_prediction": "x * * 3 / 6 + 2 * x * * 2 - x + 2",
    "improved_lstm_prediction": "- x * * 3 / 6 + 2 * x * * 2 + 2",
    "transformer_prediction": "- x * * 3 / 6 + 2 * x * * 2 + 3 * x + 2"
  },
  {
    "function": "log(4*x + 1)",
    "true_expansion": "-64*x**4 + 64*x**3/3 - 8*x**2 + 4*x",
    "lstm_prediction": "- 64 * x * * 4 + 64 * x * * 3 / 3 - 8 * x * * 2 + 4 * x",
    "improved_lstm_prediction": "- 64 * x * * 4 + 64 * x * * 3 / 3 + 8 * x * * 2 + 4 * x",
    "transformer_prediction": "- 64 * x * * 4 + 64 * x * * 3 / 3 - 8 * x * * 2 + 4 * x"
  },
  {
    "function": "-x**3 - 2*x**2 + 3*x + tan(5*x) - 2",
    "true_expansion": "122*x**3/3 - 2*x**2 + 8*x - 2",
    "lstm_prediction": "58 * x * * 3 / 3 - 2 * x * * 2 + 6 * x - 2",
    "improved_lstm_prediction": "- 131 * x * * 3 / 3 - 2 * x * * 2 + 8 * x - 2",
    "transformer_prediction": "5 * x * * 3 / 3 - 3 * x * * 2 + 3 * x + 3"
  },
  {
    "function": "exp(3*x)",
    "true_expansion": "27*x**4/8 + 9*x**3/2 + 9*x**2/2 + 3*x + 1",
    "lstm_prediction": "27 * x * * 4 / 8 + 9 * x * * 3 / 2 + 9 * x * * 2 / 2 + 3 * x + 1",
    "improved_lstm_prediction": "81 * x * * 4 / 8 + 9 * x * * 3 + 9 * x * * 2 / 2 + 3 * x + 1",
    "transformer_prediction": "27 * x * * 4 / 8 + 9 * x * * 3 / 2 + 9 * x * * 2 / 2 + 3 * x + 1"
  },
  {
    "function": "tan(x)",
    "true_expansion": "x**3/3 + x",
    "lstm_prediction": "x * * 3 / 3 + x",
    "improved_lstm_prediction": "x * * 3 / 3 + x",
    "transformer_prediction": "x * * 3 / 3 + x"
  },
  {
    "function": "3/(1 - x)",
    "true_expansion": "3*x**4 + 3*x**3 + 3*x**2 + 3*x + 3",
    "lstm_prediction": "81 * x * * 4 + 27 * x * * 3 + 9 * x * * 2 + 6 * x + 3",
    "improved_lstm_prediction": "3 * x * * 4 + 3 * x * * 3 + 3 * x * * 2 + 3 * x + 3",
    "transformer_prediction": "3 * x * * 4 + 3 * x * * 3 + 3 * x * * 2 + 3 * x + 3"
  },
  {
    "function": "-2*x + atan(5*x) + 1",
    "true_expansion": "-125*x**3/3 + 3*x + 1",
    "lstm_prediction": "- 125 * x * * 3 / 3 + 3 * x + 1",
    "improved_lstm_prediction": "- 125 * x * * 3 / 3 + 3 * x + 1",
    "transformer_prediction": "- 125 * x * * 3 / 3 + 6 * x + 1"
  },
  {
    "function": "sin(x) + 3",
    "true_expansion": "-x**3/6 + x + 3",
    "lstm_prediction": "* x * * 3 / 6 + 5 * x + 3",
    "improved_lstm_prediction": "- x * * 3 / 6 + x + 3",
    "transformer_prediction": "- x * * 3 / 6 + x + 3"
  },
  {
    "function": "3*(1 - 3*x)*sinh(x)",
    "true_expansion": "-3*x**4/2 + x**3/2 - 9*x**2 + 3*x",
    "lstm_prediction": "- 3 * x * * 4 / 2 - 9 * x * * 3 + 9 * x * * 2 + 6 * x",
    "improved_lstm_prediction": "- x * * 4 / 2 - x * * 3 - 3 * x * * 2 + 3 * x",
    "transformer_prediction": "- 9 * x * * 4 / 2 + 9 * x * * 3 / 2 + 9 * x * * 2 + 3 * x"
  },
  {
    "function": "sin(2*x)",
    "true_expansion": "-4*x**3/3 + 2*x",
    "lstm_prediction": "* x * * 3 / 2 + 3 * x",
    "improved_lstm_prediction": "- 4 * x * * 3 / 3 + 2 * x",
    "transformer_prediction": "- 4 * x * * 3 / 3 + 2 * x"
  },
  {
    "function": "sinh(x)",
    "true_expansion": "x**3/6 + x",
    "lstm_prediction": "x * * 3 / 2 + x",
    "improved_lstm_prediction": "x * * 3 / 6 + x",
    "transformer_prediction": "x * * 3 / 6 + x"
  },
  {
    "function": "3*sqrt(x + 1)",
    "true_expansion": "-15*x**4/128 + 3*x**3/16 - 3*x**2/8 + 3*x/2 + 3",
    "lstm_prediction": "- 15 * x * * 4 / 128 + 3 * x * * 3 / 16 - 3 * x * * 2 / 8 + 3 * x / 2 + 1",
    "improved_lstm_prediction": "- 15 * x * * 4 / 128 + 3 * x * * 3 / 16 + 3 * x * * 2 / 8 + 3 * x / 2 + 3",
    "transformer_prediction": "- 15 * x * * 4 / 128 + 3 * x * * 3 / 16 - 3 * x * * 2 / 8 + 3 * x / 2 + 3"
  },
  {
    "function": "-x**3 + 4*x + 2",
    "true_expansion": "-x**3 + 4*x + 2",
    "lstm_prediction": "- x * * 3 + 4 * x + 2",
    "improved_lstm_prediction": "- x * * 3 + 4 * x + 2",
    "transformer_prediction": "- 3 * x * * 2 + 4 * x + 3"
  },
  {
    "function": "-x**3 - x**2 + x + sinh(4*x) + 3",
    "true_expansion": "29*x**3/3 - x**2 + 5*x + 3",
    "lstm_prediction": "32 * x * * 3 / 3 - x * * 2 + 7 * x + 3",
    "improved_lstm_prediction": "32 * x * * 3 / 3 - x * * 2 + 5 * x + 3",
    "transformer_prediction": "32 * x * * 3 / 3 + 3 * x * * 2 + x + 3"
  },
  {
    "function": "log(x + 1)",
    "true_expansion": "-x**4/4 + x**3/3 - x**2/2 + x",
    "lstm_prediction": "- x * * 4 / 4 + x * * 3 / 3 - x * * 2 / 2 + x",
    "improved_lstm_prediction": "- x * * 4 / 4 + x * * 3 / 3 - x * * 2 / 2 + x",
    "transformer_prediction": "- x * * 4 / 4 + x * * 3 / 3 - x * * 2 / 2 + x"
  },
  {
    "function": "1/(1 - x)",
    "true_expansion": "x**4 + x**3 + x**2 + x + 1",
    "lstm_prediction": "x * * 4 + x * * 3 + x * * 2 + x + 1",
    "improved_lstm_prediction": "x * * 4 + x * * 3 + x * * 2 + x + 1",
    "transformer_prediction": "x * * 4 + x * * 3 + x * * 2 + x + 1"
  },
  {
    "function": "4/(1 - x)",
    "true_expansion": "4*x**4 + 4*x**3 + 4*x**2 + 4*x + 4",
    "lstm_prediction": "4 * x * * 4 + 4 * x * * 3 + 4 * x * * 2 + 4 * x + 4",
    "improved_lstm_prediction": "4 * x * * 4 + 4 * x * * 3 + 4 * x * * 2 + 4 * x + 4",
    "transformer_prediction": "4 * x * * 4 + 4 * x * * 3 + 4 * x * * 2 + 4 * x + 4"
  },
  {
    "function": "sinh(x)",
    "true_expansion": "x**3/6 + x",
    "lstm_prediction": "x * * 3 / 2 + x",
    "improved_lstm_prediction": "x * * 3 / 6 + x",
    "transformer_prediction": "x * * 3 / 6 + x"
  },
  {
    "function": "(x + 4)*sin(5*x)",
    "true_expansion": "-125*x**4/6 - 250*x**3/3 + 5*x**2 + 20*x",
    "lstm_prediction": "- 625 * x * * 4 / 3 + 125 * x * * 3 / 6 - 25 * x * * 2 + 20 * x",
    "improved_lstm_prediction": "- 1825 * x * * 4 / 3 - 20 * x * * 3 / 3 + 45 * x * * 2 + 20 * x",
    "transformer_prediction": "- 5 * x * * 4 / 6 + 20 * x * * 3 / 3 - 10 * x * * 2 + 20 * x"
  },
  {
    "function": "3*x + 2*log(x + 1) + 2",
    "true_expansion": "-x**4/2 + 2*x**3/3 - x**2 + 5*x + 2",
    "lstm_prediction": "- x * * 4 / 2 + 2 * x * * 3 / 3 - x * * 2 + 3 * x + 2",
    "improved_lstm_prediction": "- x * * 4 / 2 + 2 * x * * 3 / 3 + x * * 2 + 5 * x + 2",
    "transformer_prediction": "- 4 * x * * 4 + 8 * x * * 3 / 3 - 2 * x * * 2 + 2 * x + 3"
  },
  {
    "function": "cos(3*x)",
    "true_expansion": "27*x**4/8 - 9*x**2/2 + 1",
    "lstm_prediction": "* x * * 2 / 2 + 1",
    "improved_lstm_prediction": "27 * x * * 4 / 8 + 9 * x * * 2 / 2 + 1",
    "transformer_prediction": "x * * 4 / 8 - 3 * x * * 2 / 2 + 3"
  },
  {
    "function": "5*(-x**2 + 2*x - 1)*exp(x)",
    "true_expansion": "-25*x**4/24 - 5*x**3/6 + 5*x**2/2 + 5*x - 5",
    "lstm_prediction": "- 85 * x * * 4 / 12 - 25 * x * * 3 / 3 + 25 * x * * 2 / 2 - 10 * x",
    "improved_lstm_prediction": "- 15 * x * * 4 / 24 + 25 * x * * 3 / 6 + 25 * x * * 2 / 2 - 5 * x - 5",
    "transformer_prediction": "- 25 * x * * 4 / 24 - 25 * x * * 3 / 6 - 5 * x * * 2 / 2 - 5 * x - 5"
  },
  {
    "function": "3*x**2 - 3*x + sin(x) + 3",
    "true_expansion": "-x**3/6 + 3*x**2 - 2*x + 3",
    "lstm_prediction": "- x * * 3 / 6 + 3 * x * * 2 - x + 3",
    "improved_lstm_prediction": "- x * * 3 / 6 + 3 * x * * 2 - 2 * x + 3",
    "transformer_prediction": "- x * * 3 / 2 + 3 * x * * 2 + 4 * x + 3"
  },
  {
    "function": "2*x + tan(x)",
    "true_expansion": "x**3/3 + 3*x",
    "lstm_prediction": "x * * 3 / 3 + 4 * x",
    "improved_lstm_prediction": "x * * 3 / 3 + 3 * x",
    "transformer_prediction": "x * * 3 / 3 + 3 * x"
  },
  {
    "function": "cos(5*x)",
    "true_expansion": "625*x**4/24 - 25*x**2/2 + 1",
    "lstm_prediction": "* x * * 2 / 2 + 1",
    "improved_lstm_prediction": "625 * x * * 4 / 24 - 25 * x * * 2 / 2 + 1",
    "transformer_prediction": "5 * x * * 4 / 24 - 5 * x * * 2 / 2 + 5"
  },
  {
    "function": "3*x + 3*cos(x) - 2",
    "true_expansion": "x**4/8 - 3*x**2/2 + 3*x + 1",
    "lstm_prediction": "x * * 4 / 8 + 3 * x * * 2 / 2 + 3",
    "improved_lstm_prediction": "x * * 4 / 8 - 3 * x * * 2 / 2 + 3 * x + 1",
    "transformer_prediction": "x * * 4 / 12 - x * * 2 + 3 * x + 5"
  },
  {
    "function": "cosh(2*x)",
    "true_expansion": "2*x**4/3 + 2*x**2 + 1",
    "lstm_prediction": "x * * 2 / 2 + 1",
    "improved_lstm_prediction": "2 * x * * 4 / 3 + 2 * x * * 2 + 1",
    "transformer_prediction": "2 * x * * 4 / 3 + 2 * x * * 2 + 1"
  },
  {
    "function": "2*cosh(x)",
    "true_expansion": "x**4/12 + x**2 + 2",
    "lstm_prediction": "x * * 4 / 8 + 3 * x * * 2 / 2 + 3",
    "improved_lstm_prediction": "x * * 4 / 12 + x * * 2 + 2",
    "transformer_prediction": "2 * x * * 4 / 3 + 2 * x * * 2 + 1"
  },
  {
    "function": "-3*x**3 - 2*x + 3*tan(x) + 2",
    "true_expansion": "-2*x**3 + x + 2",
    "lstm_prediction": "- 3 * x * * 3 - 2 * x + 2",
    "improved_lstm_prediction": "- 3 * x * * 3 + x + 2",
    "transformer_prediction": "- 2 * x * * 3 / 3 + 3 * x * * 2 + 4 * x - 3"
  },
  {
    "function": "2*x + cosh(4*x) - 2",
    "true_expansion": "32*x**4/3 + 8*x**2 + 2*x - 1",
    "lstm_prediction": "32 * x * * 4 / 3 + 8 * x * * 2 + 3 * x - 1",
    "improved_lstm_prediction": "32 * x * * 4 / 3 + 8 * x * * 2 + 2 * x - 1",
    "transformer_prediction": "x * * 4 / 6 + 2 * x * * 2 + 2"
  },
  {
    "function": "20*cos(x)",
    "true_expansion": "5*x**4/6 - 10*x**2 + 20",
    "lstm_prediction": "5 * x * * 4 / 8 - 15 * x / 2 + 5",
    "improved_lstm_prediction": "5 * x * * 4 / 6 + 2 * x * * 2 + 10",
    "transformer_prediction": "5 * x * * 4 / 6 - 15 * x * * 2 + 15"
  },
  {
    "function": "5*sqrt(x + 1)*(2*x**3 + 2*x**2 + x - 2)",
    "true_expansion": "285*x**4/64 + 55*x**3/4 + 55*x**2/4 - 10",
    "lstm_prediction": "145 * x * * 4 / 128 + 145 * x * * 3 / 16 + 175 * x * * 2 / 8 - 15 * x / 2 + 5",
    "improved_lstm_prediction": "145 * x * * 4 / 64 + 15 * x * * 3 / 8 + 15 * x * * 2 / 4 + 15 * x - 10",
    "transformer_prediction": "- 25 * x * * 4 / 64 + 25 * x * * 3 / 8 + 15 * x * * 2 / 4 + 15 * x + 15"
  },
  {
    "function": "2*x",
    "true_expansion": "2*x",
    "lstm_prediction": "2 * x",
    "improved_lstm_prediction": "2 * x * * 2 + 2 * x",
    "transformer_prediction": "2 * x"
  },
  {
    "function": "(-2*x**2 - 2*x + 3)*sin(x)",
    "true_expansion": "x**4/3 - 5*x**3/2 - 2*x**2 + 3*x",
    "lstm_prediction": "x * * 4 / 2 - x * * 3 / 3 - 3 * x * * 2 + 2 * x",
    "improved_lstm_prediction": "x * * 4 / 3 - 3 * x * * 3 / 2 - 2 * x * * 2 + 3 * x",
    "transformer_prediction": "- x * * 4 / 2 + x * * 3 / 3 + 3 * x * * 2 + 2 * x"
  },
  {
    "function": "x",
    "true_expansion": "x",
    "lstm_prediction": "x * * 2 / 2 + 1",
    "improved_lstm_prediction": "x * * 3 + x",
    "transformer_prediction": "x"
  },
  {
    "function": "3*x**2 + 2*x + sin(4*x) + 3",
    "true_expansion": "-32*x**3/3 + 3*x**2 + 6*x + 3",
    "lstm_prediction": "- 32 * x * * 3 / 3 + 3 * x * * 2 + 5 * x + 3",
    "improved_lstm_prediction": "- 32 * x * * 3 / 3 + 3 * x * * 2 + 6 * x + 3",
    "transformer_prediction": "- 2 * x * * 3 / 3 + 3 * x * * 2 + 7 * x + 3"
  },
  {
    "function": "log(3*x + 1)",
    "true_expansion": "-81*x**4/4 + 9*x**3 - 9*x**2/2 + 3*x",
    "lstm_prediction": "- 81 * x * * 4 / 4 + 9 * x * * 3 - 9 * x * * 2 / 2 + 3 * x",
    "improved_lstm_prediction": "- 81 * x * * 4 / 4 + 9 * x * * 3 - 9 * x * * 2 / 2 + 3 * x",
    "transformer_prediction": "- 3 * x * * 4 / 4 + x * * 3 - 3 * x * * 2 / 2 + 3 * x"
  },
  {
    "function": "atan(x) - 2",
    "true_expansion": "-x**3/3 + x - 2",
    "lstm_prediction": "- x * * 3 / 3 + x - 2",
    "improved_lstm_prediction": "- x * * 3 / 3 + x - 2",
    "transformer_prediction": "- x * * 3 / 3 + x - 2"
  },
  {
    "function": "4*x - 1",
    "true_expansion": "4*x - 1",
    "lstm_prediction": "4 * x - 1",
    "improved_lstm_prediction": "4 * x - 1",
    "transformer_prediction": "4 * x - 1"
  },
  {
    "function": "x",
    "true_expansion": "x",
    "lstm_prediction": "x * * 2 / 2 + 1",
    "improved_lstm_prediction": "x * * 3 + x",
    "transformer_prediction": "x"
  },
  {
    "function": "4*sin(x)",
    "true_expansion": "-2*x**3/3 + 4*x",
    "lstm_prediction": "* x * * 3 / 3 + 4 * x",
    "improved_lstm_prediction": "- 2 * x * * 3 / 3 + 4 * x",
    "transformer_prediction": "- 32 * x * * 3 / 3 + 4 * x"
  },
  {
    "function": "x",
    "true_expansion": "x",
    "lstm_prediction": "x * * 2 / 2 + 1",
    "improved_lstm_prediction": "x * * 3 + x",
    "transformer_prediction": "x"
  },
  {
    "function": "(-2*x**2 + 3*x)*cos(3*x)",
    "true_expansion": "9*x**4 - 27*x**3/2 - 2*x**2 + 3*x",
    "lstm_prediction": "- 27 * x * * 4 / 2 + 10 * x * * 3 - 9 * x * * 2 + 3 * x",
    "improved_lstm_prediction": "9 * x * * 4 / 2 - 9 * x * * 3 / 2 - 3 * x * * 2 + 3 * x",
    "transformer_prediction": "- 3 * x * * 4 / 2 + 3 * x * * 3 / 2 + 3 * x * * 2 + 3 * x + 3"
  },
  {
    "function": "tan(x)",
    "true_expansion": "x**3/3 + x",
    "lstm_prediction": "x * * 3 / 3 + x",
    "improved_lstm_prediction": "x * * 3 / 3 + x",
    "transformer_prediction": "x * * 3 / 3 + x"
  },
  {
    "function": "sqrt(x + 1)",
    "true_expansion": "-5*x**4/128 + x**3/16 - x**2/8 + x/2 + 1",
    "lstm_prediction": "- 5 * x * * 4 / 128 + x * * 3 / 16 - x * * 2 / 8 + x / 2 + 1",
    "improved_lstm_prediction": "- 5 * x * * 4 / 128 + x * * 3 / 16 - x * * 2 / 8 + x / 2 + 1",
    "transformer_prediction": "- 5 * x * * 4 / 128 + x * * 3 / 16 - x * * 2 / 8 + x / 2 + 1"
  },
  {
    "function": "exp(5*x)",
    "true_expansion": "625*x**4/24 + 125*x**3/6 + 25*x**2/2 + 5*x + 1",
    "lstm_prediction": "625 * x * * 4 / 24 + 125 * x * * 2 / 2 + 5 * x + 1",
    "improved_lstm_prediction": "625 * x * * 4 / 24 + 125 * x * * 3 / 6 + 25 * x * * 2 + 5 * x + 1",
    "transformer_prediction": "625 * x * * 4 / 24 + 125 * x * * 3 / 6 + 25 * x * * 2 / 2 + 5 * x + 1"
  },
  {
    "function": "6*sin(x)",
    "true_expansion": "-x**3 + 6*x",
    "lstm_prediction": "x * * 3 + 6 * x",
    "improved_lstm_prediction": "- x * * 3 + 6 * x",
    "transformer_prediction": "- x * * 3 + 6 * x"
  },
  {
    "function": "5*sinh(x)",
    "true_expansion": "5*x**3/6 + 5*x",
    "lstm_prediction": "5 * x * * 3 / 6 + 5 * x",
    "improved_lstm_prediction": "5 * x * * 3 / 6 + 5 * x",
    "transformer_prediction": "125 * x * * 3 / 6 + 5 * x"
  },
  {
    "function": "sqrt(x + 1)*(2*x**2 + x + 1)",
    "true_expansion": "-29*x**4/128 + 15*x**3/16 + 19*x**2/8 + 3*x/2 + 1",
    "lstm_prediction": "- 119 * x * * 4 / 128 + 17 * x * * 3 / 16 - x * * 2 / 8 + x / 2 + 1",
    "improved_lstm_prediction": "- 19 * x * * 4 / 128 + 17 * x * * 3 / 16 + 7 * x * * 2 / 8 + 5 * x / 2 + 1",
    "transformer_prediction": "- 5 * x * * 4 / 64 + x * * 3 / 8 - x * * 2 / 4 + x + 2"
  },
  {
    "function": "(x**3 - x**2 - 3*x - 1)*exp(3*x)",
    "true_expansion": "-147*x**4/8 - 20*x**3 - 29*x**2/2 - 6*x - 1",
    "lstm_prediction": "- 81 * x * * 4 / 8 - 27 * x * * 3 / 2 + 15 * x * * 2 / 2 - 3 * x",
    "improved_lstm_prediction": "- 135 * x * * 4 / 8 - 5 * x * * 3 / 2 - 5 * x * * 2 / 2 - 3 * x - 1",
    "transformer_prediction": "- 3 * x * * 4 / 8 - x * * 3 / 3 - 3 * x * * 2 / 2 - 3 * x - 1"
  },
  {
    "function": "5*(x**2 + x - 1)*log(x + 1)",
    "true_expansion": "5*x**4/12 + 5*x**3/6 + 15*x**2/2 - 5*x",
    "lstm_prediction": "25 * x * * 4 / 4 - 5 * x * * 3 / 3 + 5 * x * * 2 / 2 - 5 * x",
    "improved_lstm_prediction": "25 * x * * 4 / 4 - 25 * x * * 3 / 3 + 5 * x * * 2 / 2 - x",
    "transformer_prediction": "- 5 * x * * 4 / 12 + 5 * x * * 3 / 3 - 5 * x * * 2 / 2 + 5 * x"
  },
  {
    "function": "tan(2*x)",
    "true_expansion": "8*x**3/3 + 2*x",
    "lstm_prediction": "8 * x * * 3 / 3 + 2 * x",
    "improved_lstm_prediction": "8 * x * * 3 / 3 + 2 * x",
    "transformer_prediction": "2 * x * * 3 / 3 + 2 * x"
  },
  {
    "function": "atan(4*x)",
    "true_expansion": "-64*x**3/3 + 4*x",
    "lstm_prediction": "- 64 * x * * 3 / 3 + 4 * x",
    "improved_lstm_prediction": "- 64 * x * * 3 / 3 + 4 * x",
    "transformer_prediction": "- 4 * x * * 3 / 3 + 4 * x"
  },
  {
    "function": "5*(-x**2 + 3*x + 1)*cosh(x)",
    "true_expansion": "-55*x**4/24 + 15*x**3/2 - 5*x**2/2 + 15*x + 5",
    "lstm_prediction": "- 25 * x * * 4 / 24 + 5 * x * * 3 + 15 * x * * 2 / 2 + 15",
    "improved_lstm_prediction": "37 * x * * 4 / 24 + 5 * x * * 3 / 2 + 5 * x * * 2 / 2 + 5 * x + 5",
    "transformer_prediction": "5 * x * * 4 / 24 + 15 * x * * 3 / 2 + 15 * x * * 2 / 2 + 15 * x + 5"
  },
  {
    "function": "(x**3 + 2*x**2 - 3*x + 4)*log(2*x + 1)",
    "true_expansion": "-26*x**4 + 62*x**3/3 - 14*x**2 + 8*x",
    "lstm_prediction": "- 10 * x * * 4 + 8 * x * * 3 / 3 - 4 * x * * 2 + 8 * x",
    "improved_lstm_prediction": "- 58 * x * * 4 + 34 * x * * 3 / 3 - 8 * x * * 2 + 8 * x",
    "transformer_prediction": "- 5 * x * * 4 / 6 + 10 * x * * 3 / 3 - 5 * x * * 2 + 4 * x"
  },
  {
    "function": "cos(x)",
    "true_expansion": "x**4/24 - x**2/2 + 1",
    "lstm_prediction": "x * * 2 / 2 + 1",
    "improved_lstm_prediction": "x * * 4 / 24 - x * * 2 / 2 + 1",
    "transformer_prediction": "x * * 4 / 24 - x * * 2 / 2 + 1"
  },
  {
    "function": "2*x + exp(3*x) - 2",
    "true_expansion": "27*x**4/8 + 9*x**3/2 + 9*x**2/2 + 5*x - 1",
    "lstm_prediction": "27 * x * * 4 / 8 + 9 * x * * 3 / 2 + 9 * x * * 2 / 2 + 3 * x - 1",
    "improved_lstm_prediction": "27 * x * * 4 / 8 + 9 * x * * 3 / 2 + 9 * x * * 2 / 2 + 5 * x - 1",
    "transformer_prediction": "x * * 4 / 12 + x * * 3 / 3 + x * * 2 + 2 * x + 5"
  },
  {
    "function": "5*(3 - 2*x)*cos(x)",
    "true_expansion": "5*x**4/8 + 5*x**3 - 15*x**2/2 - 10*x + 15",
    "lstm_prediction": "25 * x * * 4 / 8 - 15 * x * * 3 / 2 + 15 * x * * 2 / 2 + 15 * x + 15",
    "improved_lstm_prediction": "5 * x * * 4 / 24 - 15 * x * * 3 / 2 + 5 * x * * 2 / 2 - 5 * x + 5",
    "transformer_prediction": "- 5 * x * * 4 / 12 + 15 * x * * 3 / 2 + 15 * x * * 2 - 15 * x + 15"
  },
  {
    "function": "x + sin(x) - 3",
    "true_expansion": "-x**3/6 + 2*x - 3",
    "lstm_prediction": "- x * * 3 / 6 + 2 * x - 3",
    "improved_lstm_prediction": "- x * * 3 / 6 + 2 * x - 3",
    "transformer_prediction": "- x * * 3 / 6 - 2 * x + 3"
  },
  {
    "function": "4*exp(x)",
    "true_expansion": "x**4/6 + 2*x**3/3 + 2*x**2 + 4*x + 4",
    "lstm_prediction": "x * * 4 / 6 + 2 * x * * 3 / 3 + 2 * x * * 2 + 4 * x + 4",
    "improved_lstm_prediction": "x * * 4 / 6 + 2 * x * * 3 / 3 + 2 * x * * 2 + 4 * x + 4",
    "transformer_prediction": "32 * x * * 4 / 3 + 32 * x * * 3 / 3 + 8 * x * * 2 + 4 * x + 1"
  },
  {
    "function": "1/(1 - x)",
    "true_expansion": "x**4 + x**3 + x**2 + x + 1",
    "lstm_prediction": "x * * 4 + x * * 3 + x * * 2 + x + 1",
    "improved_lstm_prediction": "x * * 4 + x * * 3 + x * * 2 + x + 1",
    "transformer_prediction": "x * * 4 + x * * 3 + x * * 2 + x + 1"
  },
  {
    "function": "5*(x**3 - x**2 - x + 3)/(1 - x)",
    "true_expansion": "10*x**4 + 10*x**3 + 5*x**2 + 10*x + 15",
    "lstm_prediction": "- 5 * x * * 4 - 5 * x * * 3 - 5 * x * * 2 + 15 * x + 5",
    "improved_lstm_prediction": "- 5 * x * * 4 - 5 * x * * 3 - 5 * x * * 2 + 5 * x + 5",
    "transformer_prediction": "- 25 * x * * 4 - 15 * x * * 3 - 15 * x * * 2 - 15 * x + 15"
  },
  {
    "function": "exp(x)",
    "true_expansion": "x**4/24 + x**3/6 + x**2/2 + x + 1",
    "lstm_prediction": "x * * 4 / 24 + x * * 2 / 2 + x + 1",
    "improved_lstm_prediction": "x * * 4 / 24 + x * * 3 / 6 + x * * 2 + x + 1",
    "transformer_prediction": "x * * 4 / 24 + x * * 3 / 6 + x * * 2 / 2 + x + 1"
  },
  {
    "function": "3*sinh(x)",
    "true_expansion": "x**3/2 + 3*x",
    "lstm_prediction": "x * * 3 / 2 + 3 * x",
    "improved_lstm_prediction": "x * * 3 / 2 + 3 * x",
    "transformer_prediction": "9 * x * * 3 / 2 + 3 * x"
  },
  {
    "function": "1/(1 - x)",
    "true_expansion": "x**4 + x**3 + x**2 + x + 1",
    "lstm_prediction": "x * * 4 + x * * 3 + x * * 2 + x + 1",
    "improved_lstm_prediction": "x * * 4 + x * * 3 + x * * 2 + x + 1",
    "transformer_prediction": "x * * 4 + x * * 3 + x * * 2 + x + 1"
  },
  {
    "function": "cos(2*x)",
    "true_expansion": "2*x**4/3 - 2*x**2 + 1",
    "lstm_prediction": "x * * 2 + 4",
    "improved_lstm_prediction": "2 * x * * 4 / 3 + 2 * x * * 2 + 1",
    "transformer_prediction": "2 * x * * 4 / 3 - 2 * x * * 2 + 1"
  },
  {
    "function": "atan(5*x)",
    "true_expansion": "-125*x**3/3 + 5*x",
    "lstm_prediction": "* x * * 3 / 3 + 5 * x",
    "improved_lstm_prediction": "- 125 * x * * 3 / 3 + 5 * x",
    "transformer_prediction": "- 125 * x * * 3 / 3 + 5 * x"
  },
  {
    "function": "-3*x*cosh(x)",
    "true_expansion": "-3*x**3/2 - 3*x",
    "lstm_prediction": "- x * * 3 - 3 * x * * 2",
    "improved_lstm_prediction": "- x * * 3 / 2 - 3 * x * * 2",
    "transformer_prediction": "- 3 * x * * 4 / 2 - 3 * x * * 3 / 2 - 3 * x * * 2 - 3 * x"
  },
  {
    "function": "3/(1 - x)",
    "true_expansion": "3*x**4 + 3*x**3 + 3*x**2 + 3*x + 3",
    "lstm_prediction": "81 * x * * 4 + 27 * x * * 3 + 9 * x * * 2 + 6 * x + 3",
    "improved_lstm_prediction": "3 * x * * 4 + 3 * x * * 3 + 3 * x * * 2 + 3 * x + 3",
    "transformer_prediction": "3 * x * * 4 + 3 * x * * 3 + 3 * x * * 2 + 3 * x + 3"
  },
  {
    "function": "4*x*(-x**3 + x**2 + 4)",
    "true_expansion": "-4*x**4 + 4*x**3 + 16*x",
    "lstm_prediction": "- 8 * x * * 4 + 8 * x * * 3 / 3 - 4 * x * * 2 + 4 * x",
    "improved_lstm_prediction": "- 8 * x * * 4 + 8 * x * * 3 + 8 * x * * 2 + 8 * x",
    "transformer_prediction": "- 4 * x * * 4 + 4 * x * * 3 + 4 * x * * 2 + 4 * x"
  },
  {
    "function": "exp(x)",
    "true_expansion": "x**4/24 + x**3/6 + x**2/2 + x + 1",
    "lstm_prediction": "x * * 4 / 24 + x * * 2 / 2 + x + 1",
    "improved_lstm_prediction": "x * * 4 / 24 + x * * 3 / 6 + x * * 2 + x + 1",
    "transformer_prediction": "x * * 4 / 24 + x * * 3 / 6 + x * * 2 / 2 + x + 1"
  },
  {
    "function": "log(x + 1)",
    "true_expansion": "-x**4/4 + x**3/3 - x**2/2 + x",
    "lstm_prediction": "- x * * 4 / 4 + x * * 3 / 3 - x * * 2 / 2 + x",
    "improved_lstm_prediction": "- x * * 4 / 4 + x * * 3 / 3 - x * * 2 / 2 + x",
    "transformer_prediction": "- x * * 4 / 4 + x * * 3 / 3 - x * * 2 / 2 + x"
  },
  {
    "function": "sin(x)",
    "true_expansion": "-x**3/6 + x",
    "lstm_prediction": "* x * * 3 / 2 + 5 * x",
    "improved_lstm_prediction": "- x * * 3 / 6 + x",
    "transformer_prediction": "- x * * 3 / 6 + x"
  },
  {
    "function": "cos(x)",
    "true_expansion": "x**4/24 - x**2/2 + 1",
    "lstm_prediction": "x * * 2 / 2 + 1",
    "improved_lstm_prediction": "x * * 4 / 24 - x * * 2 / 2 + 1",
    "transformer_prediction": "x * * 4 / 24 - x * * 2 / 2 + 1"
  },
  {
    "function": "(2 - 3*x)*sqrt(4*x + 1)",
    "true_expansion": "-32*x**4 + 14*x**3 - 10*x**2 + x + 2",
    "lstm_prediction": "- 162 * x * * 4 + 128 * x * * 3 / 16 - 12 * x * * 2 + 7 * x + 2",
    "improved_lstm_prediction": "- 52 * x * * 4 + 24 * x * * 3 - 8 * x * * 2 + x + 4",
    "transformer_prediction": "- 5 * x * * 4 / 32 + 5 * x * * 3 / 8 - 3 * x * * 2 / 2 + 9 * x + 4"
  },
  {
    "function": "(-3*x**2 - 2*x + 2)*tan(4*x)",
    "true_expansion": "-128*x**4/3 + 92*x**3/3 - 8*x**2 + 8*x",
    "lstm_prediction": "- 128 * x * * 4 / 3 - 128 * x * * 3 / 3 + 8 * x * * 2 + 8 * x",
    "improved_lstm_prediction": "92 * x * * 4 / 3 - 280 * x * * 3 / 3 - 8 * x * * 2 + 8 * x",
    "transformer_prediction": "- 40 * x * * 4 / 3 + 40 * x * * 3 / 3 - 8 * x * * 2 + 8 * x"
  },
  {
    "function": "sinh(x)",
    "true_expansion": "x**3/6 + x",
    "lstm_prediction": "x * * 3 / 2 + x",
    "improved_lstm_prediction": "x * * 3 / 6 + x",
    "transformer_prediction": "x * * 3 / 6 + x"
  },
  {
    "function": "-2*exp(5*x)",
    "true_expansion": "-625*x**4/12 - 125*x**3/3 - 25*x**2 - 10*x - 2",
    "lstm_prediction": "625 * x * * 4 / 12 - 25 * x * * 3 / 3 + 25 * x * * 2 / 2 - 5 * x - 2",
    "improved_lstm_prediction": "- 175 * x * * 4 / 12 - 175 * x * * 3 / 3 - 25 * x * * 2 - 10 * x - 2",
    "transformer_prediction": "- 5 * x * * 4 / 12 - 5 * x * * 3 / 3 - 5 * x * * 2 - 10 * x - 10"
  },
  {
    "function": "-x**3 - x**2 - x + 2*sin(x)",
    "true_expansion": "-4*x**3/3 - x**2 + x",
    "lstm_prediction": "- x * * 3 / 3 - x * * 2 + 2 * x",
    "improved_lstm_prediction": "- 2 * x * * 3 / 3 - x * * 2 + x",
    "transformer_prediction": "- x * * 3 / 6 - 2 * x * * 2 + 2 * x"
  },
  {
    "function": "-x + sqrt(x + 1) - 1",
    "true_expansion": "-5*x**4/128 + x**3/16 - x**2/8 - x/2",
    "lstm_prediction": "- 5 * x * * 4 / 128 + x * * 3 / 16 - x * * 2 / 8 - 5 * x / 2",
    "improved_lstm_prediction": "- 5 * x * * 4 / 128 + x * * 3 / 16 - x * * 2 / 8 - x / 2",
    "transformer_prediction": "- 5 * x * * 4 / 128 + x * * 3 / 16 - x * * 2 / 8 - x / 2 - 1"
  },
  {
    "function": "5*cosh(x)",
    "true_expansion": "5*x**4/24 + 5*x**2/2 + 5",
    "lstm_prediction": "5 * x * * 3 / 6 + 5 * x",
    "improved_lstm_prediction": "5 * x * * 4 / 24 + 5 * x * * 2 / 2 + 5",
    "transformer_prediction": "625 * x * * 4 / 24 + 25 * x * * 2 / 2 + 1"
  },
  {
    "function": "5*atan(x)",
    "true_expansion": "-5*x**3/3 + 5*x",
    "lstm_prediction": "5 * x * * 3 / 3 + 5 * x",
    "improved_lstm_prediction": "5 * x * * 3 / 3 + 5 * x",
    "transformer_prediction": "- 125 * x * * 3 / 3 + 5 * x"
  },
  {
    "function": "cosh(5*x)",
    "true_expansion": "625*x**4/24 + 25*x**2/2 + 1",
    "lstm_prediction": "2525 * x * * 2 / 2 + 5",
    "improved_lstm_prediction": "625 * x * * 4 / 24 + 25 * x * * 2 / 2 + 1",
    "transformer_prediction": "625 * x * * 4 / 24 + 25 * x * * 2 / 2 + 1"
  },
  {
    "function": "4*x",
    "true_expansion": "4*x",
    "lstm_prediction": "4 * x + 1",
    "improved_lstm_prediction": "4 * x",
    "transformer_prediction": "4 * x"
  },
  {
    "function": "log(x + 1)",
    "true_expansion": "-x**4/4 + x**3/3 - x**2/2 + x",
    "lstm_prediction": "- x * * 4 / 4 + x * * 3 / 3 - x * * 2 / 2 + x",
    "improved_lstm_prediction": "- x * * 4 / 4 + x * * 3 / 3 - x * * 2 / 2 + x",
    "transformer_prediction": "- x * * 4 / 4 + x * * 3 / 3 - x * * 2 / 2 + x"
  },
  {
    "function": "tan(5*x)",
    "true_expansion": "125*x**3/3 + 5*x",
    "lstm_prediction": "125 * x * * 3 / 3 + 5 * x",
    "improved_lstm_prediction": "125 * x * * 3 / 3 + 5 * x",
    "transformer_prediction": "5 * x * * 3 / 3 + 5 * x"
  },
  {
    "function": "-3*x + cosh(x) + 1",
    "true_expansion": "x**4/24 + x**2/2 - 3*x + 2",
    "lstm_prediction": "x * * 4 / 8 + x * * 2 / 2 - 3 * x + 4",
    "improved_lstm_prediction": "x * * 4 / 24 + x * * 2 / 2 - 3 * x + 2",
    "transformer_prediction": "x * * 4 / 24 + x * * 2 / 2 + 3 * x + 2"
  },
  {
    "function": "exp(x)",
    "true_expansion": "x**4/24 + x**3/6 + x**2/2 + x + 1",
    "lstm_prediction": "x * * 4 / 24 + x * * 2 / 2 + x + 1",
    "improved_lstm_prediction": "x * * 4 / 24 + x * * 3 / 6 + x * * 2 + x + 1",
    "transformer_prediction": "x * * 4 / 24 + x * * 3 / 6 + x * * 2 / 2 + x + 1"
  },
  {
    "function": "2*x + 3*sin(x) - 3",
    "true_expansion": "-x**3/2 + 5*x - 3",
    "lstm_prediction": "- x * * 3 / 2 + 4 * x - 3",
    "improved_lstm_prediction": "- x * * 3 + 5 * x - 3",
    "transformer_prediction": "- x * * 3 / 2 + 3 * x - 3"
  },
  {
    "function": "atan(x)",
    "true_expansion": "-x**3/3 + x",
    "lstm_prediction": "* x * * 3 / 3 + x",
    "improved_lstm_prediction": "- x * * 3 / 3 + x",
    "transformer_prediction": "- x * * 3 / 3 + x"
  },
  {
    "function": "(-x**2 - 2*x - 1)*sinh(2*x)",
    "true_expansion": "-8*x**4/3 - 10*x**3/3 - 4*x**2 - 2*x",
    "lstm_prediction": "- 8 * x * * 4 / 3 - 4 * x * * 3 / 3 - 4 * x * * 2 - 4 * x",
    "improved_lstm_prediction": "- 14 * x * * 4 / 3 - 4 * x * * 3 / 3 - 4 * x * * 2 - 4 * x",
    "transformer_prediction": "- x * * 4 / 3 - x * * 3 / 6 - 2 * x * * 2 - x"
  },
  {
    "function": "cos(x)",
    "true_expansion": "x**4/24 - x**2/2 + 1",
    "lstm_prediction": "x * * 2 / 2 + 1",
    "improved_lstm_prediction": "x * * 4 / 24 - x * * 2 / 2 + 1",
    "transformer_prediction": "x * * 4 / 24 - x * * 2 / 2 + 1"
  },
  {
    "function": "sqrt(x + 1)",
    "true_expansion": "-5*x**4/128 + x**3/16 - x**2/8 + x/2 + 1",
    "lstm_prediction": "- 5 * x * * 4 / 128 + x * * 3 / 16 - x * * 2 / 8 + x / 2 + 1",
    "improved_lstm_prediction": "- 5 * x * * 4 / 128 + x * * 3 / 16 - x * * 2 / 8 + x / 2 + 1",
    "transformer_prediction": "- 5 * x * * 4 / 128 + x * * 3 / 16 - x * * 2 / 8 + x / 2 + 1"
  },
  {
    "function": "1/(1 - x)",
    "true_expansion": "x**4 + x**3 + x**2 + x + 1",
    "lstm_prediction": "x * * 4 + x * * 3 + x * * 2 + x + 1",
    "improved_lstm_prediction": "x * * 4 + x * * 3 + x * * 2 + x + 1",
    "transformer_prediction": "x * * 4 + x * * 3 + x * * 2 + x + 1"
  },
  {
    "function": "12*exp(x)",
    "true_expansion": "x**4/2 + 2*x**3 + 6*x**2 + 12*x + 12",
    "lstm_prediction": "x * * 4 + 46 * x * * 3 / 3 + 20 * x * * 2 + 20 * x + 8",
    "improved_lstm_prediction": "x * * 4 / 3 + 3 * x * * 3 + 12 * x * * 2 + 12 * x + 12",
    "transformer_prediction": "x * * 4 / 6 + 2 * x * * 3 / 3 + 6 * x * * 2 + 8 * x + 12"
  },
  {
    "function": "1/(1 - x)",
    "true_expansion": "x**4 + x**3 + x**2 + x + 1",
    "lstm_prediction": "x * * 4 + x * * 3 + x * * 2 + x + 1",
    "improved_lstm_prediction": "x * * 4 + x * * 3 + x * * 2 + x + 1",
    "transformer_prediction": "x * * 4 + x * * 3 + x * * 2 + x + 1"
  },
  {
    "function": "5*x*(3*x**2 - 2*x + 4)",
    "true_expansion": "15*x**3 - 10*x**2 + 20*x",
    "lstm_prediction": "- 10 * x * * 3 - 10 * x * * 2 + 20 * x",
    "improved_lstm_prediction": "15 * x * * 3 - 15 * x * * 2 + 10 * x",
    "transformer_prediction": "- 10 * x * * 4 + 10 * x * * 3 + 15 * x * * 2 + 20 * x"
  },
  {
    "function": "(3*x**3 - 2*x**2 + x + 1)*sin(2*x)",
    "true_expansion": "14*x**4/3 - 16*x**3/3 + 2*x**2 + 2*x",
    "lstm_prediction": "10 * x * * 4 / 3 + 14 * x * * 3 / 3 + 2 * x * * 2 + 2 * x",
    "improved_lstm_prediction": "26 * x * * 4 / 3 - 8 * x * * 3 / 3 + 2 * x * * 2 + 2 * x",
    "transformer_prediction": "- x * * 4 / 2 + x * * 3 / 6 + 3 * x * * 2 + x"
  },
  {
    "function": "sin(2*x)",
    "true_expansion": "-4*x**3/3 + 2*x",
    "lstm_prediction": "* x * * 3 / 2 + 3 * x",
    "improved_lstm_prediction": "- 4 * x * * 3 / 3 + 2 * x",
    "transformer_prediction": "- 4 * x * * 3 / 3 + 2 * x"
  },
  {
    "function": "exp(2*x) + 1",
    "true_expansion": "2*x**4/3 + 4*x**3/3 + 2*x**2 + 2*x + 2",
    "lstm_prediction": "2 * x * * 4 / 3 + 4 * x * * 3 / 3 + 2 * x * * 2 + 2 * x + 4",
    "improved_lstm_prediction": "2 * x * * 4 / 3 + 4 * x * * 3 / 3 + 2 * x * * 2 + 2 * x + 2",
    "transformer_prediction": "x * * 4 / 12 + x * * 3 / 3 + x * * 2 + 2 * x + 2"
  },
  {
    "function": "-cosh(2*x)",
    "true_expansion": "-2*x**4/3 - 2*x**2 - 1",
    "lstm_prediction": "- x * * 3 / 3 - 2 * x",
    "improved_lstm_prediction": "- 8 * x * * 3 / 3 - 2 * x * * 2 - 1",
    "transformer_prediction": "- x * * 4 / 12 - x * * 2 - 2"
  },
  {
    "function": "3*(-3*x**3 - 3*x**2 + x + 1)*atan(x)",
    "true_expansion": "-10*x**4 - 10*x**3 + 3*x**2 + 3*x",
    "lstm_prediction": "- 5 * x * * 4 - 10 * x * * 3 / 3 - 6 * x * * 2 + 6 * x",
    "improved_lstm_prediction": "- 10 * x * * 4 - 10 * x * * 3 / 3 + 3 * x * * 2 + 3 * x",
    "transformer_prediction": "- 2 * x * * 4 - 10 * x * * 3 / 3 + 3 * x * * 2 + x"
  },
  {
    "function": "x",
    "true_expansion": "x",
    "lstm_prediction": "x * * 2 / 2 + 1",
    "improved_lstm_prediction": "x * * 3 + x",
    "transformer_prediction": "x"
  },
  {
    "function": "sin(2*x)",
    "true_expansion": "-4*x**3/3 + 2*x",
    "lstm_prediction": "* x * * 3 / 2 + 3 * x",
    "improved_lstm_prediction": "- 4 * x * * 3 / 3 + 2 * x",
    "transformer_prediction": "- 4 * x * * 3 / 3 + 2 * x"
  },
  {
    "function": "3*atan(x)",
    "true_expansion": "-x**3 + 3*x",
    "lstm_prediction": "x * * 3 + 3 * x",
    "improved_lstm_prediction": "- x * * 3 + 3 * x",
    "transformer_prediction": "- 9 * x * * 3 + 3 * x"
  },
  {
    "function": "2*x**3 + x**2 + tan(x) + 1",
    "true_expansion": "7*x**3/3 + x**2 + x + 1",
    "lstm_prediction": "8 * x * * 3 / 3 + 2 * x * * 2 + 2 * x + 1",
    "improved_lstm_prediction": "5 * x * * 3 / 3 + x * * 2 + x + 1",
    "transformer_prediction": "5 * x * * 3 / 3 + 2 * x * * 2 + 3 * x + 1"
  },
  {
    "function": "-3*x**3 - 3*x**2 - 3*x + sinh(3*x)",
    "true_expansion": "3*x**3/2 - 3*x**2",
    "lstm_prediction": "- 17 * x * * 3 / 2 - 2 * x * * 2 + x",
    "improved_lstm_prediction": "9 * x * * 3 - 3 * x * * 2",
    "transformer_prediction": "- 19 * x * * 3 / 2 + 3 * x * * 2 + 3 * x - 3"
  },
  {
    "function": "1/(1 - 3*x)",
    "true_expansion": "81*x**4 + 27*x**3 + 9*x**2 + 3*x + 1",
    "lstm_prediction": "81 * x * * 4 + 27 * x * * 3 + 9 * x * * 2 + 3 * x + 1",
    "improved_lstm_prediction": "81 * x * * 4 + 27 * x * * 3 + 9 * x * * 2 + 3 * x + 1",
    "transformer_prediction": "81 * x * * 4 + 27 * x * * 3 + 9 * x * * 2 + 3 * x + 1"
  },
  {
    "function": "exp(x)",
    "true_expansion": "x**4/24 + x**3/6 + x**2/2 + x + 1",
    "lstm_prediction": "x * * 4 / 24 + x * * 2 / 2 + x + 1",
    "improved_lstm_prediction": "x * * 4 / 24 + x * * 3 / 6 + x * * 2 + x + 1",
    "transformer_prediction": "x * * 4 / 24 + x * * 3 / 6 + x * * 2 / 2 + x + 1"
  },
  {
    "function": "1/(1 - 3*x)",
    "true_expansion": "81*x**4 + 27*x**3 + 9*x**2 + 3*x + 1",
    "lstm_prediction": "81 * x * * 4 + 27 * x * * 3 + 9 * x * * 2 + 3 * x + 1",
    "improved_lstm_prediction": "81 * x * * 4 + 27 * x * * 3 + 9 * x * * 2 + 3 * x + 1",
    "transformer_prediction": "81 * x * * 4 + 27 * x * * 3 + 9 * x * * 2 + 3 * x + 1"
  },
  {
    "function": "3*x",
    "true_expansion": "3*x",
    "lstm_prediction": "3 * x",
    "improved_lstm_prediction": "3 * x * * 2 + 3 * x",
    "transformer_prediction": "3 * x"
  },
  {
    "function": "sqrt(x + 1)",
    "true_expansion": "-5*x**4/128 + x**3/16 - x**2/8 + x/2 + 1",
    "lstm_prediction": "- 5 * x * * 4 / 128 + x * * 3 / 16 - x * * 2 / 8 + x / 2 + 1",
    "improved_lstm_prediction": "- 5 * x * * 4 / 128 + x * * 3 / 16 - x * * 2 / 8 + x / 2 + 1",
    "transformer_prediction": "- 5 * x * * 4 / 128 + x * * 3 / 16 - x * * 2 / 8 + x / 2 + 1"
  },
  {
    "function": "x",
    "true_expansion": "x",
    "lstm_prediction": "x * * 2 / 2 + 1",
    "improved_lstm_prediction": "x * * 3 + x",
    "transformer_prediction": "x"
  },
  {
    "function": "2*atan(x) - 2",
    "true_expansion": "-2*x**3/3 + 2*x - 2",
    "lstm_prediction": "- 2 * x * * 3 / 3 + 2 * x - 2",
    "improved_lstm_prediction": "- 2 * x * * 3 / 3 + 2 * x - 2",
    "transformer_prediction": "- 2 * x * * 3 / 3 + 2 * x - 2"
  },
  {
    "function": "cosh(2*x)",
    "true_expansion": "2*x**4/3 + 2*x**2 + 1",
    "lstm_prediction": "x * * 2 / 2 + 1",
    "improved_lstm_prediction": "2 * x * * 4 / 3 + 2 * x * * 2 + 1",
    "transformer_prediction": "2 * x * * 4 / 3 + 2 * x * * 2 + 1"
  },
  {
    "function": "x*(x**2 - x + 4)",
    "true_expansion": "x**3 - x**2 + 4*x",
    "lstm_prediction": "x * * 4 + x * * 3 + 2 * x * * 2 + 6 * x",
    "improved_lstm_prediction": "x * * 3 + x * * 2 + 4 * x",
    "transformer_prediction": "- 4 * x * * 3 + 4 * x * * 2 + 4 * x"
  },
  {
    "function": "log(x + 1)",
    "true_expansion": "-x**4/4 + x**3/3 - x**2/2 + x",
    "lstm_prediction": "- x * * 4 / 4 + x * * 3 / 3 - x * * 2 / 2 + x",
    "improved_lstm_prediction": "- x * * 4 / 4 + x * * 3 / 3 - x * * 2 / 2 + x",
    "transformer_prediction": "- x * * 4 / 4 + x * * 3 / 3 - x * * 2 / 2 + x"
  },
  {
    "function": "sinh(x)",
    "true_expansion": "x**3/6 + x",
    "lstm_prediction": "x * * 3 / 2 + x",
    "improved_lstm_prediction": "x * * 3 / 6 + x",
    "transformer_prediction": "x * * 3 / 6 + x"
  },
  {
    "function": "1/(1 - x)",
    "true_expansion": "x**4 + x**3 + x**2 + x + 1",
    "lstm_prediction": "x * * 4 + x * * 3 + x * * 2 + x + 1",
    "improved_lstm_prediction": "x * * 4 + x * * 3 + x * * 2 + x + 1",
    "transformer_prediction": "x * * 4 + x * * 3 + x * * 2 + x + 1"
  },
  {
    "function": "2/(1 - x)",
    "true_expansion": "2*x**4 + 2*x**3 + 2*x**2 + 2*x + 2",
    "lstm_prediction": "2 * x * * 4 + 2 * x * * 2 + 2 * x + 2",
    "improved_lstm_prediction": "2 * x * * 4 + 2 * x * * 3 + 2 * x * * 2 + 2 * x + 2",
    "transformer_prediction": "2 * x * * 4 + 2 * x * * 3 + 2 * x * * 2 + 2 * x + 2"
  },
  {
    "function": "x + log(5*x + 1) + 2",
    "true_expansion": "-625*x**4/4 + 125*x**3/3 - 25*x**2/2 + 6*x + 2",
    "lstm_prediction": "- 625 * x * * 4 / 4 + 125 * x * * 3 / 3 - 25 * x * * 2 / 2 + 6 * x + 2",
    "improved_lstm_prediction": "- 625 * x * * 4 / 4 + 125 * x * * 3 / 3 - 25 * x * * 2 / 2 + 6 * x + 2",
    "transformer_prediction": "- 625 * x * * 4 / 4 + 125 * x * * 3 / 3 - 25 * x * * 2 / 2 + 5 * x + 2"
  },
  {
    "function": "cosh(5*x)",
    "true_expansion": "625*x**4/24 + 25*x**2/2 + 1",
    "lstm_prediction": "2525 * x * * 2 / 2 + 5",
    "improved_lstm_prediction": "625 * x * * 4 / 24 + 25 * x * * 2 / 2 + 1",
    "transformer_prediction": "625 * x * * 4 / 24 + 25 * x * * 2 / 2 + 1"
  },
  {
    "function": "2*sinh(x)",
    "true_expansion": "x**3/3 + 2*x",
    "lstm_prediction": "x * * 3 / 3 + 2 * x",
    "improved_lstm_prediction": "x * * 3 / 3 + 2 * x",
    "transformer_prediction": "4 * x * * 3 / 3 + 2 * x"
  },
  {
    "function": "2*sqrt(x + 1)",
    "true_expansion": "-5*x**4/64 + x**3/8 - x**2/4 + x + 2",
    "lstm_prediction": "- 5 * x * * 4 / 64 + x * * 3 / 8 - x * * 2 / 4 + x + 2",
    "improved_lstm_prediction": "- 5 * x * * 4 / 64 + x * * 3 / 8 - x * * 2 / 4 + x + 2",
    "transformer_prediction": "- 5 * x * * 4 / 64 + x * * 3 / 8 - x * * 2 / 4 + x + 2"
  },
  {
    "function": "(-x**3 + x**2 + 2*x - 1)/(1 - 2*x)",
    "true_expansion": "2*x**4 + x**3 + x**2 - 1",
    "lstm_prediction": "- 24 * x * * 4 - 12 * x * * 3 + 8 * x * * 2 + 2 * x - 1",
    "improved_lstm_prediction": "- 8 * x * * 4 - 8 * x * * 3 + 6 * x * * 2 - 4 * x - 1",
    "transformer_prediction": "- 5 * x * * 4 - 5 * x * * 3 - 5 * x * * 2 - 5 * x + 2"
  },
  {
    "function": "2*x + 4*cos(x) - 3",
    "true_expansion": "x**4/6 - 2*x**2 + 2*x + 1",
    "lstm_prediction": "x * * 4 / 6 - 2 * x * * 2 + x + 2",
    "improved_lstm_prediction": "x * * 4 / 6 - 2 * x * * 2 + 2 * x + 6",
    "transformer_prediction": "x * * 4 / 6 - 2 * x * * 2 + 5"
  },
  {
    "function": "x**3 - 3*x**2 + x + exp(x) + 1",
    "true_expansion": "x**4/24 + 7*x**3/6 - 5*x**2/2 + 2*x + 2",
    "lstm_prediction": "x * * 4 / 24 + 7 * x * * 3 / 6 - 7 * x * * 2 / 2 + 4 * x + 2",
    "improved_lstm_prediction": "x * * 4 / 24 + 7 * x * * 3 / 6 - 7 * x * * 2 / 2 + 2 * x + 2",
    "transformer_prediction": "x * * 4 / 24 + x * * 3 / 6 + 3 * x * * 2 / 2 + 4 * x + 2"
  },
  {
    "function": "1/(1 - x)",
    "true_expansion": "x**4 + x**3 + x**2 + x + 1",
    "lstm_prediction": "x * * 4 + x * * 3 + x * * 2 + x + 1",
    "improved_lstm_prediction": "x * * 4 + x * * 3 + x * * 2 + x + 1",
    "transformer_prediction": "x * * 4 + x * * 3 + x * * 2 + x + 1"
  },
  {
    "function": "sinh(x)",
    "true_expansion": "x**3/6 + x",
    "lstm_prediction": "x * * 3 / 2 + x",
    "improved_lstm_prediction": "x * * 3 / 6 + x",
    "transformer_prediction": "x * * 3 / 6 + x"
  },
  {
    "function": "sin(4*x)",
    "true_expansion": "-32*x**3/3 + 4*x",
    "lstm_prediction": "* * x * * 3 / 3 + 4 * x",
    "improved_lstm_prediction": "32 * 32 * x * * 3 / 3 + 4 * x",
    "transformer_prediction": "- 32 * x * * 3 / 3 + 4 * x"
  },
  {
    "function": "sinh(3*x)",
    "true_expansion": "9*x**3/2 + 3*x",
    "lstm_prediction": "9 * x * * 2 / 2 + 1",
    "improved_lstm_prediction": "9 * x * * 3 / 2 + 3 * x",
    "transformer_prediction": "9 * x * * 3 / 2 + 3 * x"
  },
  {
    "function": "2*x**3 - x**2 - x + 2",
    "true_expansion": "2*x**3 - x**2 - x + 2",
    "lstm_prediction": "2 * x * * 3 - 2 * x * * 2 - x + 2",
    "improved_lstm_prediction": "2 * x * * 3 - x * * 2 - x + 2",
    "transformer_prediction": "- 2 * x * * 3 + 2 * x * * 2 + 2 * x - 2"
  },
  {
    "function": "-3*x**3 + 2*x**2 - x + 1 + 1/(1 - 4*x)",
    "true_expansion": "256*x**4 + 61*x**3 + 18*x**2 + 3*x + 2",
    "lstm_prediction": "256 * x * * 4 + 14 * x * * 3 + x * * 2 + 4 * x + 2",
    "improved_lstm_prediction": "256 * x * * 4 + 127 * x * * 3 + 11 * x * * 2 + 3 * x + 2",
    "transformer_prediction": "256 * x * * 4 + 64 * x * * 3 + 11 * x * * 2 + x + 3"
  },
  {
    "function": "(2*x**2 - 2*x + 2)*cosh(x)",
    "true_expansion": "13*x**4/12 - x**3 + 3*x**2 - 2*x + 2",
    "lstm_prediction": "- 11 * x * * 4 / 12 + x * * 2 - 2",
    "improved_lstm_prediction": "x * * 4 / 6 - x * * 3 + x * * 2 - 2 * x + 2",
    "transformer_prediction": "- 5 * x * * 4 / 12 + 2 * x * * 3 + 2 * x * * 2 + 2 * x + 2"
  },
  {
    "function": "4*atan(x)",
    "true_expansion": "-4*x**3/3 + 4*x",
    "lstm_prediction": "- 4 * x * * 3 / 3 + 4 * x",
    "improved_lstm_prediction": "- 4 * x * * 3 / 3 + 4 * x",
    "transformer_prediction": "- 4 * x * * 3 / 3 + 4 * x"
  },
  {
    "function": "2/(1 - x)",
    "true_expansion": "2*x**4 + 2*x**3 + 2*x**2 + 2*x + 2",
    "lstm_prediction": "2 * x * * 4 + 2 * x * * 2 + 2 * x + 2",
    "improved_lstm_prediction": "2 * x * * 4 + 2 * x * * 3 + 2 * x * * 2 + 2 * x + 2",
    "transformer_prediction": "2 * x * * 4 + 2 * x * * 3 + 2 * x * * 2 + 2 * x + 2"
  },
  {
    "function": "-2*x**2 + 2*x + 3",
    "true_expansion": "-2*x**2 + 2*x + 3",
    "lstm_prediction": "2 * x * * 2 + 5 * x + 3",
    "improved_lstm_prediction": "- 2 * x * * 2 + 2 * x + 3",
    "transformer_prediction": "- 2 * x * * 3 + 2 * x * * 2 + 2 * x + 2"
  },
  {
    "function": "atan(x)",
    "true_expansion": "-x**3/3 + x",
    "lstm_prediction": "* x * * 3 / 3 + x",
    "improved_lstm_prediction": "- x * * 3 / 3 + x",
    "transformer_prediction": "- x * * 3 / 3 + x"
  },
  {
    "function": "3*sin(x)",
    "true_expansion": "-x**3/2 + 3*x",
    "lstm_prediction": "* x * * 3 / 2 + 3 * x",
    "improved_lstm_prediction": "- x * * 3 / 2 + 3 * x",
    "transformer_prediction": "- 9 * x * * 3 / 2 + 3 * x"
  },
  {
    "function": "15/(1 - x)",
    "true_expansion": "15*x**4 + 15*x**3 + 15*x**2 + 15*x + 15",
    "lstm_prediction": "30 * x * * 4 + 30 * x * * 3 + 15 * x * * 2 + 15 * x + 5",
    "improved_lstm_prediction": "10 * x * * 4 + 3 * x * * 3 + 3 * x * * 2 + 3 * x + 3",
    "transformer_prediction": "5 * x * * 4 + 5 * x * * 3 + 5 * x * * 2 + 15 * x + 15"
  },
  {
    "function": "-2*x**3 + x**2 + 1 + 1/(1 - 2*x)",
    "true_expansion": "16*x**4 + 6*x**3 + 5*x**2 + 2*x + 2",
    "lstm_prediction": "16 * x * * 4 + 11 * x * * 3 + 3 * x * * 2 + 3 * x + 2",
    "improved_lstm_prediction": "16 * x * * 4 + 7 * x * * 3 + 5 * x * * 2 + 2 * x + 2",
    "transformer_prediction": "81 * x * * 4 + 27 * x * * 3 + 11 * x * * 2 + 3 * x + 3"
  },
  {
    "function": "2*x**3 + 2*x**2 - 3*x + sinh(x) + 2",
    "true_expansion": "13*x**3/6 + 2*x**2 - 2*x + 2",
    "lstm_prediction": "13 * x * * 3 / 6 + 2 * x * * 2 - x + 2",
    "improved_lstm_prediction": "13 * x * * 3 / 6 + 2 * x * * 2 - 2 * x + 2",
    "transformer_prediction": "- 17 * x * * 3 / 6 + 2 * x * * 2 + 4 * x + 2"
  },
  {
    "function": "2*x*(-x**3 + 3*x**2 - x + 1)",
    "true_expansion": "-2*x**4 + 6*x**3 - 2*x**2 + 2*x",
    "lstm_prediction": "- 6 * x * * 4 + 2 * x * * 3 - 2 * x * * 2 + x",
    "improved_lstm_prediction": "- 6 * x * * 4 + 6 * x * * 3 - 2 * x * * 2 + 2 * x",
    "transformer_prediction": "- 3 * x * * 4 + 2 * x * * 3 + 3 * x * * 2 + 2 * x"
  },
  {
    "function": "cosh(x)",
    "true_expansion": "x**4/24 + x**2/2 + 1",
    "lstm_prediction": "x * * 2 / 2 + 1",
    "improved_lstm_prediction": "x * * 4 / 24 + x * * 2 / 2 + 1",
    "transformer_prediction": "x * * 4 / 24 + x * * 2 / 2 + 1"
  },
  {
    "function": "2*cos(5*x)",
    "true_expansion": "625*x**4/12 - 25*x**2 + 2",
    "lstm_prediction": "625 * x * * 4 / 8 + 9 * x * * 2 / 2 + 3",
    "improved_lstm_prediction": "625 * x * * 4 / 12 - 25 * x * * 2 + 2",
    "transformer_prediction": "5 * x * * 4 / 12 - 5 * x * * 2 + 10"
  },
  {
    "function": "cosh(x)",
    "true_expansion": "x**4/24 + x**2/2 + 1",
    "lstm_prediction": "x * * 2 / 2 + 1",
    "improved_lstm_prediction": "x * * 4 / 24 + x * * 2 / 2 + 1",
    "transformer_prediction": "x * * 4 / 24 + x * * 2 / 2 + 1"
  },
  {
    "function": "tan(x)",
    "true_expansion": "x**3/3 + x",
    "lstm_prediction": "x * * 3 / 3 + x",
    "improved_lstm_prediction": "x * * 3 / 3 + x",
    "transformer_prediction": "x * * 3 / 3 + x"
  },
  {
    "function": "exp(x)",
    "true_expansion": "x**4/24 + x**3/6 + x**2/2 + x + 1",
    "lstm_prediction": "x * * 4 / 24 + x * * 2 / 2 + x + 1",
    "improved_lstm_prediction": "x * * 4 / 24 + x * * 3 / 6 + x * * 2 + x + 1",
    "transformer_prediction": "x * * 4 / 24 + x * * 3 / 6 + x * * 2 / 2 + x + 1"
  },
  {
    "function": "tan(x)",
    "true_expansion": "x**3/3 + x",
    "lstm_prediction": "x * * 3 / 3 + x",
    "improved_lstm_prediction": "x * * 3 / 3 + x",
    "transformer_prediction": "x * * 3 / 3 + x"
  },
  {
    "function": "3*log(x + 1)",
    "true_expansion": "-3*x**4/4 + x**3 - 3*x**2/2 + 3*x",
    "lstm_prediction": "- 3 * x * * 4 / 4 + x * * 3 - 3 * x * * 2 / 2 + 3 * x",
    "improved_lstm_prediction": "- 3 * x * * 4 / 4 + x * * 3 - 3 * x * * 2 / 2 + 3 * x",
    "transformer_prediction": "- 3 * x * * 4 / 4 + x * * 3 - 3 * x * * 2 / 2 + 3 * x"
  },
  {
    "function": "sin(x)",
    "true_expansion": "-x**3/6 + x",
    "lstm_prediction": "* x * * 3 / 2 + 5 * x",
    "improved_lstm_prediction": "- x * * 3 / 6 + x",
    "transformer_prediction": "- x * * 3 / 6 + x"
  },
  {
    "function": "log(3*x + 1)",
    "true_expansion": "-81*x**4/4 + 9*x**3 - 9*x**2/2 + 3*x",
    "lstm_prediction": "- 81 * x * * 4 / 4 + 9 * x * * 3 - 9 * x * * 2 / 2 + 3 * x",
    "improved_lstm_prediction": "- 81 * x * * 4 / 4 + 9 * x * * 3 - 9 * x * * 2 / 2 + 3 * x",
    "transformer_prediction": "- 3 * x * * 4 / 4 + x * * 3 - 3 * x * * 2 / 2 + 3 * x"
  },
  {
    "function": "3*x*(2*x + 1)",
    "true_expansion": "6*x**2 + 3*x",
    "lstm_prediction": "- 6 * x * * 2 + 6 * x",
    "improved_lstm_prediction": "6 * x * * 3 + 9 * x * * 2 + 3 * x",
    "transformer_prediction": "6 * x * * 3 + 6 * x * * 2 + 3 * x"
  },
  {
    "function": "x + sinh(4*x) + 3",
    "true_expansion": "32*x**3/3 + 5*x + 3",
    "lstm_prediction": "32 * x * * 3 / 3 + 6 * x + 3",
    "improved_lstm_prediction": "32 * x * * 3 / 3 + 5 * x + 3",
    "transformer_prediction": "32 * x * * 3 / 3 + 4 * x + 3"
  },
  {
    "function": "x + sin(x) + 2",
    "true_expansion": "-x**3/6 + 2*x + 2",
    "lstm_prediction": "x * * 3 / 6 + 2 * x + 2",
    "improved_lstm_prediction": "- x * * 3 / 6 + 2 * x + 2",
    "transformer_prediction": "- x * * 3 / 6 + 3 * x + 2"
  },
  {
    "function": "cosh(x)",
    "true_expansion": "x**4/24 + x**2/2 + 1",
    "lstm_prediction": "x * * 2 / 2 + 1",
    "improved_lstm_prediction": "x * * 4 / 24 + x * * 2 / 2 + 1",
    "transformer_prediction": "x * * 4 / 24 + x * * 2 / 2 + 1"
  },
  {
    "function": "atan(x)",
    "true_expansion": "-x**3/3 + x",
    "lstm_prediction": "* x * * 3 / 3 + x",
    "improved_lstm_prediction": "- x * * 3 / 3 + x",
    "transformer_prediction": "- x * * 3 / 3 + x"
  },
  {
    "function": "4*tan(x)",
    "true_expansion": "4*x**3/3 + 4*x",
    "lstm_prediction": "4 * x * * 3 / 3 + 4 * x",
    "improved_lstm_prediction": "4 * x * * 3 / 3 + 4 * x",
    "transformer_prediction": "4 * x * * 3 / 3 + 4 * x"
  },
  {
    "function": "4/(1 - x)",
    "true_expansion": "4*x**4 + 4*x**3 + 4*x**2 + 4*x + 4",
    "lstm_prediction": "4 * x * * 4 + 4 * x * * 3 + 4 * x * * 2 + 4 * x + 4",
    "improved_lstm_prediction": "4 * x * * 4 + 4 * x * * 3 + 4 * x * * 2 + 4 * x + 4",
    "transformer_prediction": "4 * x * * 4 + 4 * x * * 3 + 4 * x * * 2 + 4 * x + 4"
  },
  {
    "function": "1/(1 - x)",
    "true_expansion": "x**4 + x**3 + x**2 + x + 1",
    "lstm_prediction": "x * * 4 + x * * 3 + x * * 2 + x + 1",
    "improved_lstm_prediction": "x * * 4 + x * * 3 + x * * 2 + x + 1",
    "transformer_prediction": "x * * 4 + x * * 3 + x * * 2 + x + 1"
  },
  {
    "function": "x",
    "true_expansion": "x",
    "lstm_prediction": "x * * 2 / 2 + 1",
    "improved_lstm_prediction": "x * * 3 + x",
    "transformer_prediction": "x"
  },
  {
    "function": "2*sinh(x)",
    "true_expansion": "x**3/3 + 2*x",
    "lstm_prediction": "x * * 3 / 3 + 2 * x",
    "improved_lstm_prediction": "x * * 3 / 3 + 2 * x",
    "transformer_prediction": "4 * x * * 3 / 3 + 2 * x"
  },
  {
    "function": "5*x + 2",
    "true_expansion": "5*x + 2",
    "lstm_prediction": "5 * x + 2",
    "improved_lstm_prediction": "5 * x * * 2 + 5 * x + 2",
    "transformer_prediction": "5 * x + 2"
  },
  {
    "function": "4*atan(x)",
    "true_expansion": "-4*x**3/3 + 4*x",
    "lstm_prediction": "- 4 * x * * 3 / 3 + 4 * x",
    "improved_lstm_prediction": "- 4 * x * * 3 / 3 + 4 * x",
    "transformer_prediction": "- 4 * x * * 3 / 3 + 4 * x"
  },
  {
    "function": "sin(2*x)",
    "true_expansion": "-4*x**3/3 + 2*x",
    "lstm_prediction": "* x * * 3 / 2 + 3 * x",
    "improved_lstm_prediction": "- 4 * x * * 3 / 3 + 2 * x",
    "transformer_prediction": "- 4 * x * * 3 / 3 + 2 * x"
  },
  {
    "function": "(3*x**3 + x**2 - x + 4)/(1 - 4*x)",
    "true_expansion": "988*x**4 + 247*x**3 + 61*x**2 + 15*x + 4",
    "lstm_prediction": "588 * x * * 4 + 69 * x * * 3 + 23 * x * * 2 + 7 * x + 2",
    "improved_lstm_prediction": "147 * x * * 4 + 147 * x * * 3 + 37 * x * * 2 + 3 * x + 4",
    "transformer_prediction": "- 11 * x * * 4 - 13 * x * * 3 - 8 * x * * 2 + 7 * x + 4"
  },
  {
    "function": "1/(1 - x)",
    "true_expansion": "x**4 + x**3 + x**2 + x + 1",
    "lstm_prediction": "x * * 4 + x * * 3 + x * * 2 + x + 1",
    "improved_lstm_prediction": "x * * 4 + x * * 3 + x * * 2 + x + 1",
    "transformer_prediction": "x * * 4 + x * * 3 + x * * 2 + x + 1"
  },
  {
    "function": "5*x",
    "true_expansion": "5*x",
    "lstm_prediction": "5 * x",
    "improved_lstm_prediction": "5 * x * * 3 / 2 + 5 * x",
    "transformer_prediction": "5 * x"
  },
  {
    "function": "cosh(2*x)",
    "true_expansion": "2*x**4/3 + 2*x**2 + 1",
    "lstm_prediction": "x * * 2 / 2 + 1",
    "improved_lstm_prediction": "2 * x * * 4 / 3 + 2 * x * * 2 + 1",
    "transformer_prediction": "2 * x * * 4 / 3 + 2 * x * * 2 + 1"
  },
  {
    "function": "sinh(x)",
    "true_expansion": "x**3/6 + x",
    "lstm_prediction": "x * * 3 / 2 + x",
    "improved_lstm_prediction": "x * * 3 / 6 + x",
    "transformer_prediction": "x * * 3 / 6 + x"
  },
  {
    "function": "(3 - x)*sinh(x)",
    "true_expansion": "-x**4/6 + x**3/2 - x**2 + 3*x",
    "lstm_prediction": "x * * 4 / 2 + x * * 3 / 2 - x * * 2 + 3 * x",
    "improved_lstm_prediction": "x * * 4 / 2 + x * * 3 / 3 - x * * 2 + 3 * x",
    "transformer_prediction": "- x * * 4 / 2 + x * * 3 / 2 + 3 * x * * 2 + 3 * x"
  },
  {
    "function": "3*tan(x)",
    "true_expansion": "x**3 + 3*x",
    "lstm_prediction": "x * * 3 + 3 * x",
    "improved_lstm_prediction": "x * * 3 + 3 * x",
    "transformer_prediction": "9 * x * * 3 + 3 * x"
  },
  {
    "function": "cos(5*x)",
    "true_expansion": "625*x**4/24 - 25*x**2/2 + 1",
    "lstm_prediction": "* x * * 2 / 2 + 1",
    "improved_lstm_prediction": "625 * x * * 4 / 24 - 25 * x * * 2 / 2 + 1",
    "transformer_prediction": "5 * x * * 4 / 24 - 5 * x * * 2 / 2 + 5"
  },
  {
    "function": "atan(2*x)",
    "true_expansion": "-8*x**3/3 + 2*x",
    "lstm_prediction": "- 8 * x * * 3 / 3 + 2 * x",
    "improved_lstm_prediction": "- 8 * x * * 3 / 3 + 2 * x",
    "transformer_prediction": "- 2 * x * * 3 / 3 + 2 * x"
  },
  {
    "function": "2*x**2 - x + 5*tan(x) + 3",
    "true_expansion": "5*x**3/3 + 2*x**2 + 4*x + 3",
    "lstm_prediction": "5 * x * * 3 / 3 + 2 * x * * 2 + 5 * x + 3",
    "improved_lstm_prediction": "5 * x * * 3 / 3 + 2 * x * * 2 + 4 * x + 3",
    "transformer_prediction": "5 * x * * 3 / 3 + 3 * x * * 2 + 6 * x + 3"
  },
  {
    "function": "sin(x)",
    "true_expansion": "-x**3/6 + x",
    "lstm_prediction": "* x * * 3 / 2 + 5 * x",
    "improved_lstm_prediction": "- x * * 3 / 6 + x",
    "transformer_prediction": "- x * * 3 / 6 + x"
  },
  {
    "function": "tan(2*x)",
    "true_expansion": "8*x**3/3 + 2*x",
    "lstm_prediction": "8 * x * * 3 / 3 + 2 * x",
    "improved_lstm_prediction": "8 * x * * 3 / 3 + 2 * x",
    "transformer_prediction": "2 * x * * 3 / 3 + 2 * x"
  },
  {
    "function": "log(x + 1)",
    "true_expansion": "-x**4/4 + x**3/3 - x**2/2 + x",
    "lstm_prediction": "- x * * 4 / 4 + x * * 3 / 3 - x * * 2 / 2 + x",
    "improved_lstm_prediction": "- x * * 4 / 4 + x * * 3 / 3 - x * * 2 / 2 + x",
    "transformer_prediction": "- x * * 4 / 4 + x * * 3 / 3 - x * * 2 / 2 + x"
  },
  {
    "function": "sin(x)",
    "true_expansion": "-x**3/6 + x",
    "lstm_prediction": "* x * * 3 / 2 + 5 * x",
    "improved_lstm_prediction": "- x * * 3 / 6 + x",
    "transformer_prediction": "- x * * 3 / 6 + x"
  },
  {
    "function": "cos(x)",
    "true_expansion": "x**4/24 - x**2/2 + 1",
    "lstm_prediction": "x * * 2 / 2 + 1",
    "improved_lstm_prediction": "x * * 4 / 24 - x * * 2 / 2 + 1",
    "transformer_prediction": "x * * 4 / 24 - x * * 2 / 2 + 1"
  },
  {
    "function": "exp(x)",
    "true_expansion": "x**4/24 + x**3/6 + x**2/2 + x + 1",
    "lstm_prediction": "x * * 4 / 24 + x * * 2 / 2 + x + 1",
    "improved_lstm_prediction": "x * * 4 / 24 + x * * 3 / 6 + x * * 2 + x + 1",
    "transformer_prediction": "x * * 4 / 24 + x * * 3 / 6 + x * * 2 / 2 + x + 1"
  },
  {
    "function": "3*(x**2 - 2*x - 2)*exp(x)",
    "true_expansion": "x**4/4 - x**3 - 6*x**2 - 12*x - 6",
    "lstm_prediction": "- 5 * x * * 4 / 4 - x * * 3 - 6 * x * * 2 - 6 * x - 6",
    "improved_lstm_prediction": "- 13 * x * * 4 / 4 - 4 * x * * 3 - 6 * x * * 2 - 6 * x - 6",
    "transformer_prediction": "- 3 * x * * 4 / 12 - x * * 3 / 3 - 3 * x * * 2 - 2 * x - 2"
  },
  {
    "function": "(x**3 - x**2 - 3*x - 2)*exp(x)",
    "true_expansion": "-x**4/12 - 11*x**3/6 - 5*x**2 - 5*x - 2",
    "lstm_prediction": "x * * 4 / 4 - 2 * x * * 3 / 3 - x * * 2 - 2 * x - 2",
    "improved_lstm_prediction": "11 * x * * 4 / 12 - 5 * x * * 3 / 6 - 5 * x * * 2 - 5 * x - 2",
    "transformer_prediction": "- 3 * x * * 4 / 12 - x * * 3 / 3 - 3 * x * * 2 - 3 * x - 2"
  },
  {
    "function": "tan(x)",
    "true_expansion": "x**3/3 + x",
    "lstm_prediction": "x * * 3 / 3 + x",
    "improved_lstm_prediction": "x * * 3 / 3 + x",
    "transformer_prediction": "x * * 3 / 3 + x"
  },
  {
    "function": "2*exp(x)",
    "true_expansion": "x**4/12 + x**3/3 + x**2 + 2*x + 2",
    "lstm_prediction": "x * * 4 / 12 + x * * 3 / 2 + 2 * x * * 2 + x + 4",
    "improved_lstm_prediction": "x * * 4 / 12 + x * * 3 / 3 + x * * 2 + 2 * x + 2",
    "transformer_prediction": "2 * x * * 4 / 3 + 4 * x * * 3 / 3 + 2 * x * * 2 + 2 * x + 1"
  },
  {
    "function": "cos(x)",
    "true_expansion": "x**4/24 - x**2/2 + 1",
    "lstm_prediction": "x * * 2 / 2 + 1",
    "improved_lstm_prediction": "x * * 4 / 24 - x * * 2 / 2 + 1",
    "transformer_prediction": "x * * 4 / 24 - x * * 2 / 2 + 1"
  },
  {
    "function": "(-3*x**2 + x + 2)*atan(x)",
    "true_expansion": "-x**4/3 - 11*x**3/3 + x**2 + 2*x",
    "lstm_prediction": "- 2 * x * * 4 / 3 - 4 * x * * 3 / 3 + 2 * x * * 2 + 2 * x",
    "improved_lstm_prediction": "- 2 * x * * 4 / 3 - 10 * x * * 3 / 3 + x * * 2 + 2 * x",
    "transformer_prediction": "- 2 * x * * 4 / 3 + 2 * x * * 3 / 3 + 2 * x * * 2 + 2 * x"
  },
  {
    "function": "exp(x)",
    "true_expansion": "x**4/24 + x**3/6 + x**2/2 + x + 1",
    "lstm_prediction": "x * * 4 / 24 + x * * 2 / 2 + x + 1",
    "improved_lstm_prediction": "x * * 4 / 24 + x * * 3 / 6 + x * * 2 + x + 1",
    "transformer_prediction": "x * * 4 / 24 + x * * 3 / 6 + x * * 2 / 2 + x + 1"
  },
  {
    "function": "1/(1 - x)",
    "true_expansion": "x**4 + x**3 + x**2 + x + 1",
    "lstm_prediction": "x * * 4 + x * * 3 + x * * 2 + x + 1",
    "improved_lstm_prediction": "x * * 4 + x * * 3 + x * * 2 + x + 1",
    "transformer_prediction": "x * * 4 + x * * 3 + x * * 2 + x + 1"
  },
  {
    "function": "3*atan(x)",
    "true_expansion": "-x**3 + 3*x",
    "lstm_prediction": "x * * 3 + 3 * x",
    "improved_lstm_prediction": "- x * * 3 + 3 * x",
    "transformer_prediction": "- 9 * x * * 3 + 3 * x"
  },
  {
    "function": "tan(x)",
    "true_expansion": "x**3/3 + x",
    "lstm_prediction": "x * * 3 / 3 + x",
    "improved_lstm_prediction": "x * * 3 / 3 + x",
    "transformer_prediction": "x * * 3 / 3 + x"
  },
  {
    "function": "(-x**3 - 2*x**2 + 3*x - 1)*tan(x)",
    "true_expansion": "-7*x**3/3 + 3*x**2 - x",
    "lstm_prediction": "x * * 4 - 7 * x * * 3 / 3 + 3 * x * * 2 - x",
    "improved_lstm_prediction": "- 2 * x * * 4 / 3 - 2 * x * * 3 + 3 * x * * 2 - x",
    "transformer_prediction": "- 2 * x * * 4 / 3 - 10 * x * * 3 / 3 + 2 * x * * 2 + 2 * x"
  },
  {
    "function": "sinh(x)",
    "true_expansion": "x**3/6 + x",
    "lstm_prediction": "x * * 3 / 2 + x",
    "improved_lstm_prediction": "x * * 3 / 6 + x",
    "transformer_prediction": "x * * 3 / 6 + x"
  },
  {
    "function": "(2*x**2 + x + 2)/(1 - x)",
    "true_expansion": "5*x**4 + 5*x**3 + 5*x**2 + 3*x + 2",
    "lstm_prediction": "2 * x * * 4 + 2 * x * * 3 + 2 * x * * 2 + 2 * x + 4",
    "improved_lstm_prediction": "5 * x * * 4 + 5 * x * * 3 + 6 * x * * 2 + 3 * x + 2",
    "transformer_prediction": "5 * x * * 4 + 5 * x * * 3 + 5 * x * * 2 + 2 * x + 2"
  },
  {
    "function": "5*exp(x)",
    "true_expansion": "5*x**4/24 + 5*x**3/6 + 5*x**2/2 + 5*x + 5",
    "lstm_prediction": "5 * x * * 4 / 24 + 5 * x * * 3 / 6 + 5 * x * * 2 / 2 + 5 * x + 5",
    "improved_lstm_prediction": "5 * x * * 4 / 24 + 5 * x * * 3 / 6 + 5 * x * * 2 / 2 + 5 * x + 5",
    "transformer_prediction": "625 * x * * 4 / 24 + 125 * x * * 3 / 6 + 25 * x * * 2 / 2 + 5 * x + 1"
  },
  {
    "function": "4*x",
    "true_expansion": "4*x",
    "lstm_prediction": "4 * x + 1",
    "improved_lstm_prediction": "4 * x",
    "transformer_prediction": "4 * x"
  },
  {
    "function": "atan(x)",
    "true_expansion": "-x**3/3 + x",
    "lstm_prediction": "* x * * 3 / 3 + x",
    "improved_lstm_prediction": "- x * * 3 / 3 + x",
    "transformer_prediction": "- x * * 3 / 3 + x"
  },
  {
    "function": "3*x",
    "true_expansion": "3*x",
    "lstm_prediction": "3 * x",
    "improved_lstm_prediction": "3 * x * * 2 + 3 * x",
    "transformer_prediction": "3 * x"
  },
  {
    "function": "2*sinh(x)",
    "true_expansion": "x**3/3 + 2*x",
    "lstm_prediction": "x * * 3 / 3 + 2 * x",
    "improved_lstm_prediction": "x * * 3 / 3 + 2 * x",
    "transformer_prediction": "4 * x * * 3 / 3 + 2 * x"
  },
  {
    "function": "atan(x)",
    "true_expansion": "-x**3/3 + x",
    "lstm_prediction": "* x * * 3 / 3 + x",
    "improved_lstm_prediction": "- x * * 3 / 3 + x",
    "transformer_prediction": "- x * * 3 / 3 + x"
  },
  {
    "function": "-2*x**3 - 2*x**2 + x + exp(5*x)",
    "true_expansion": "625*x**4/24 + 113*x**3/6 + 21*x**2/2 + 6*x + 1",
    "lstm_prediction": "625 * x * * 4 / 24 + 107 * x * * 3 / 6 + 19 * x * * 2 / 2 + 4 * x + 1",
    "improved_lstm_prediction": "625 * x * * 4 / 24 + 131 * x * * 3 / 6 + 29 * x * * 2 / 2 + 6 * x + 1",
    "transformer_prediction": "625 * x * * 4 / 24 + 125 * x * * 3 / 6 + 19 * x * * 2 / 2 + 2 * x + 2"
  },
  {
    "function": "3*x + sinh(x)",
    "true_expansion": "x**3/6 + 4*x",
    "lstm_prediction": "x * * 3 / 2 + 4 * x",
    "improved_lstm_prediction": "x * * 3 / 6 + 4 * x",
    "transformer_prediction": "x * * 3 / 6 + 4 * x"
  },
  {
    "function": "sqrt(x + 1)",
    "true_expansion": "-5*x**4/128 + x**3/16 - x**2/8 + x/2 + 1",
    "lstm_prediction": "- 5 * x * * 4 / 128 + x * * 3 / 16 - x * * 2 / 8 + x / 2 + 1",
    "improved_lstm_prediction": "- 5 * x * * 4 / 128 + x * * 3 / 16 - x * * 2 / 8 + x / 2 + 1",
    "transformer_prediction": "- 5 * x * * 4 / 128 + x * * 3 / 16 - x * * 2 / 8 + x / 2 + 1"
  },
  {
    "function": "exp(2*x)",
    "true_expansion": "2*x**4/3 + 4*x**3/3 + 2*x**2 + 2*x + 1",
    "lstm_prediction": "2 * x * * 4 / 3 + 4 * x * * 3 / 2 + 2 * x * * 2 + 2 * x + 1",
    "improved_lstm_prediction": "2 * x * * 4 / 3 + 4 * x * * 3 / 3 + 2 * x * * 2 + 2 * x + 1",
    "transformer_prediction": "2 * x * * 4 / 3 + 4 * x * * 3 / 3 + 2 * x * * 2 + 2 * x + 1"
  },
  {
    "function": "4*x",
    "true_expansion": "4*x",
    "lstm_prediction": "4 * x + 1",
    "improved_lstm_prediction": "4 * x",
    "transformer_prediction": "4 * x"
  },
  {
    "function": "sqrt(x + 1)",
    "true_expansion": "-5*x**4/128 + x**3/16 - x**2/8 + x/2 + 1",
    "lstm_prediction": "- 5 * x * * 4 / 128 + x * * 3 / 16 - x * * 2 / 8 + x / 2 + 1",
    "improved_lstm_prediction": "- 5 * x * * 4 / 128 + x * * 3 / 16 - x * * 2 / 8 + x / 2 + 1",
    "transformer_prediction": "- 5 * x * * 4 / 128 + x * * 3 / 16 - x * * 2 / 8 + x / 2 + 1"
  },
  {
    "function": "log(x + 1) + 1",
    "true_expansion": "-x**4/4 + x**3/3 - x**2/2 + x + 1",
    "lstm_prediction": "- x * * 4 / 4 + x * * 3 / 3 - x * * 2 / 2 + x + 1",
    "improved_lstm_prediction": "- x * * 4 / 4 + x * * 3 / 3 - x * * 2 / 2 + x + 1",
    "transformer_prediction": "- x * * 4 / 4 + x * * 3 / 3 - x * * 2 / 2 + x + 1"
  },
  {
    "function": "2*tan(x)",
    "true_expansion": "2*x**3/3 + 2*x",
    "lstm_prediction": "2 * x * * 3 / 2 + 2 * x",
    "improved_lstm_prediction": "2 * x * * 3 / 3 + 2 * x",
    "transformer_prediction": "2 * x * * 3 / 3 + 2 * x"
  },
  {
    "function": "3*sqrt(x + 1)",
    "true_expansion": "-15*x**4/128 + 3*x**3/16 - 3*x**2/8 + 3*x/2 + 3",
    "lstm_prediction": "- 15 * x * * 4 / 128 + 3 * x * * 3 / 16 - 3 * x * * 2 / 8 + 3 * x / 2 + 1",
    "improved_lstm_prediction": "- 15 * x * * 4 / 128 + 3 * x * * 3 / 16 + 3 * x * * 2 / 8 + 3 * x / 2 + 3",
    "transformer_prediction": "- 15 * x * * 4 / 128 + 3 * x * * 3 / 16 - 3 * x * * 2 / 8 + 3 * x / 2 + 3"
  },
  {
    "function": "5*atan(x)",
    "true_expansion": "-5*x**3/3 + 5*x",
    "lstm_prediction": "5 * x * * 3 / 3 + 5 * x",
    "improved_lstm_prediction": "5 * x * * 3 / 3 + 5 * x",
    "transformer_prediction": "- 125 * x * * 3 / 3 + 5 * x"
  },
  {
    "function": "2*x + cosh(x) + 2",
    "true_expansion": "x**4/24 + x**2/2 + 2*x + 3",
    "lstm_prediction": "x * * 4 / 24 + x * * 2 / 2 + 3 * x + 3",
    "improved_lstm_prediction": "x * * 4 / 24 + x * * 2 / 2 + 2 * x + 3",
    "transformer_prediction": "x * * 4 / 24 + x * * 2 / 2 + 3 * x + 3"
  },
  {
    "function": "cosh(4*x)",
    "true_expansion": "32*x**4/3 + 8*x**2 + 1",
    "lstm_prediction": "32 * x * * 2 / 2 + 4",
    "improved_lstm_prediction": "32 * x * * 4 / 3 + 8 * x * * 2 + 1",
    "transformer_prediction": "x * * 4 / 6 + 2 * x * * 2 + 4"
  },
  {
    "function": "tan(2*x) + 2",
    "true_expansion": "8*x**3/3 + 2*x + 2",
    "lstm_prediction": "8 * x * * 3 / 3 + 2 * x + 2",
    "improved_lstm_prediction": "8 * x * * 3 / 3 + 2 * x + 2",
    "transformer_prediction": "2 * x * * 3 / 3 + 2 * x + 2"
  },
  {
    "function": "tan(4*x) + 3",
    "true_expansion": "64*x**3/3 + 4*x + 3",
    "lstm_prediction": "64 * x * * 3 / 3 + 4 * x + 3",
    "improved_lstm_prediction": "64 * x * * 3 / 3 + 4 * x + 3",
    "transformer_prediction": "4 * x * * 3 / 3 + 4 * x + 3"
  },
  {
    "function": "sin(x)",
    "true_expansion": "-x**3/6 + x",
    "lstm_prediction": "* x * * 3 / 2 + 5 * x",
    "improved_lstm_prediction": "- x * * 3 / 6 + x",
    "transformer_prediction": "- x * * 3 / 6 + x"
  },
  {
    "function": "sinh(5*x)",
    "true_expansion": "125*x**3/6 + 5*x",
    "lstm_prediction": "125 * x * * 3 / 6 + 5 * x",
    "improved_lstm_prediction": "125 * x * * 3 / 6 + 5 * x",
    "transformer_prediction": "125 * x * * 3 / 6 + 5 * x"
  },
  {
    "function": "sin(x)",
    "true_expansion": "-x**3/6 + x",
    "lstm_prediction": "* x * * 3 / 2 + 5 * x",
    "improved_lstm_prediction": "- x * * 3 / 6 + x",
    "transformer_prediction": "- x * * 3 / 6 + x"
  },
  {
    "function": "1/(1 - x)",
    "true_expansion": "x**4 + x**3 + x**2 + x + 1",
    "lstm_prediction": "x * * 4 + x * * 3 + x * * 2 + x + 1",
    "improved_lstm_prediction": "x * * 4 + x * * 3 + x * * 2 + x + 1",
    "transformer_prediction": "x * * 4 + x * * 3 + x * * 2 + x + 1"
  },
  {
    "function": "sin(x)",
    "true_expansion": "-x**3/6 + x",
    "lstm_prediction": "* x * * 3 / 2 + 5 * x",
    "improved_lstm_prediction": "- x * * 3 / 6 + x",
    "transformer_prediction": "- x * * 3 / 6 + x"
  },
  {
    "function": "exp(2*x)",
    "true_expansion": "2*x**4/3 + 4*x**3/3 + 2*x**2 + 2*x + 1",
    "lstm_prediction": "2 * x * * 4 / 3 + 4 * x * * 3 / 2 + 2 * x * * 2 + 2 * x + 1",
    "improved_lstm_prediction": "2 * x * * 4 / 3 + 4 * x * * 3 / 3 + 2 * x * * 2 + 2 * x + 1",
    "transformer_prediction": "2 * x * * 4 / 3 + 4 * x * * 3 / 3 + 2 * x * * 2 + 2 * x + 1"
  },
  {
    "function": "2*x + sinh(x) - 1",
    "true_expansion": "x**3/6 + 3*x - 1",
    "lstm_prediction": "x * * 3 / 6 + 3 * x - 1",
    "improved_lstm_prediction": "x * * 3 / 6 + 3 * x - 1",
    "transformer_prediction": "x * * 3 / 6 + 3 * x - 1"
  },
  {
    "function": "sin(x)",
    "true_expansion": "-x**3/6 + x",
    "lstm_prediction": "* x * * 3 / 2 + 5 * x",
    "improved_lstm_prediction": "- x * * 3 / 6 + x",
    "transformer_prediction": "- x * * 3 / 6 + x"
  },
  {
    "function": "(-2*x**2 + 3*x + 3)*cosh(x)",
    "true_expansion": "-7*x**4/8 + 3*x**3/2 - x**2/2 + 3*x + 3",
    "lstm_prediction": "x * * 4 / 8 + 3 * x * * 3 + 3 * x * * 2 / 2 + 3",
    "improved_lstm_prediction": "5 * x * * 4 / 8 - x * * 3 / 2 - 3 * x * * 2 / 2 + 3 * x + 3",
    "transformer_prediction": "x * * 4 / 12 + 3 * x * * 3 / 2 + 3 * x * * 2 + 3 * x + 3"
  },
  {
    "function": "-2*x**2 + 3*atan(x) - 1",
    "true_expansion": "-x**3 - 2*x**2 + 3*x - 1",
    "lstm_prediction": "- x * * 3 - 2 * x * * 2 + 5 * x - 1",
    "improved_lstm_prediction": "- x * * 3 - 2 * x * * 2 + 3 * x - 1",
    "transformer_prediction": "- 2 * x * * 3 / 3 + 2 * x * * 2 + 2 * x - 1"
  },
  {
    "function": "sinh(x)",
    "true_expansion": "x**3/6 + x",
    "lstm_prediction": "x * * 3 / 2 + x",
    "improved_lstm_prediction": "x * * 3 / 6 + x",
    "transformer_prediction": "x * * 3 / 6 + x"
  },
  {
    "function": "(-2*x**2 - x - 2)/(1 - 5*x)",
    "true_expansion": "-1425*x**4 - 285*x**3 - 57*x**2 - 11*x - 2",
    "lstm_prediction": "- 875 * x * * 4 - 175 * x * * 3 - 35 * x * * 2 - 10 * x - 2",
    "improved_lstm_prediction": "- 1310 * x * * 4 - 262 * x * * 3 - 52 * x * * 2 - 7 * x - 2",
    "transformer_prediction": "- 25 * x * * 4 - 5 * x * * 3 - 5 * x * * 2 - 10 * x - 10"
  },
  {
    "function": "-x**3 + 2*x**2 - x + exp(x) - 1",
    "true_expansion": "x**4/24 - 5*x**3/6 + 5*x**2/2",
    "lstm_prediction": "x * * 4 / 24 - x * * 3 / 6 + 3 * x * * 2 / 2",
    "improved_lstm_prediction": "x * * 4 / 24 - 5 * x * * 3 / 6 + 5 * x * * 2 / 2",
    "transformer_prediction": "x * * 4 / 24 + x * * 3 / 6 + 5 * x * * 2 / 2 + 2 * x + 2"
  },
  {
    "function": "exp(x)",
    "true_expansion": "x**4/24 + x**3/6 + x**2/2 + x + 1",
    "lstm_prediction": "x * * 4 / 24 + x * * 2 / 2 + x + 1",
    "improved_lstm_prediction": "x * * 4 / 24 + x * * 3 / 6 + x * * 2 + x + 1",
    "transformer_prediction": "x * * 4 / 24 + x * * 3 / 6 + x * * 2 / 2 + x + 1"
  },
  {
    "function": "sinh(3*x)",
    "true_expansion": "9*x**3/2 + 3*x",
    "lstm_prediction": "9 * x * * 2 / 2 + 1",
    "improved_lstm_prediction": "9 * x * * 3 / 2 + 3 * x",
    "transformer_prediction": "9 * x * * 3 / 2 + 3 * x"
  },
  {
    "function": "1/(1 - 4*x)",
    "true_expansion": "256*x**4 + 64*x**3 + 16*x**2 + 4*x + 1",
    "lstm_prediction": "256 * x * * 4 + 64 * x * * 3 + 16 * x * * 2 + 4 * x + 1",
    "improved_lstm_prediction": "256 * x * * 4 + 64 * x * * 3 + 16 * x * * 2 + 4 * x + 1",
    "transformer_prediction": "256 * x * * 4 + 64 * x * * 3 + 16 * x * * 2 + 4 * x + 1"
  },
  {
    "function": "-x - 2 + 1/(1 - x)",
    "true_expansion": "x**4 + x**3 + x**2 - 1",
    "lstm_prediction": "x * * 4 + x * * 3 + x * * 2 - x",
    "improved_lstm_prediction": "x * * 4 + x * * 3 + x * * 2 - 2",
    "transformer_prediction": "x * * 4 + x * * 3 + x * * 2 + x - 1"
  },
  {
    "function": "1/(1 - x)",
    "true_expansion": "x**4 + x**3 + x**2 + x + 1",
    "lstm_prediction": "x * * 4 + x * * 3 + x * * 2 + x + 1",
    "improved_lstm_prediction": "x * * 4 + x * * 3 + x * * 2 + x + 1",
    "transformer_prediction": "x * * 4 + x * * 3 + x * * 2 + x + 1"
  },
  {
    "function": "0",
    "true_expansion": "0",
    "lstm_prediction": "* x + 1",
    "improved_lstm_prediction": "0",
    "transformer_prediction": "0"
  },
  {
    "function": "exp(5*x) - 3",
    "true_expansion": "625*x**4/24 + 125*x**3/6 + 25*x**2/2 + 5*x - 2",
    "lstm_prediction": "625 * x * * 4 / 24 + 125 * x * * 3 / 6 + 25 * x * * 2 / 2 + 5 * x + 2",
    "improved_lstm_prediction": "625 * x * * 4 / 24 + 125 * x * * 3 / 6 + 25 * x * * 2 / 2 + 5 * x - 2",
    "transformer_prediction": "625 * x * * 4 / 24 + 125 * x * * 3 / 6 + 25 * x * * 2 / 2 + 5 * x - 2"
  },
  {
    "function": "tan(3*x)",
    "true_expansion": "9*x**3 + 3*x",
    "lstm_prediction": "9 * x * * 3 + 3 * x",
    "improved_lstm_prediction": "9 * x * * 3 + 3 * x",
    "transformer_prediction": "9 * x * * 3 + 3 * x"
  },
  {
    "function": "tan(4*x)",
    "true_expansion": "64*x**3/3 + 4*x",
    "lstm_prediction": "64 * x * * 3 / 3 + 4 * x",
    "improved_lstm_prediction": "64 * x * * 3 / 3 + 4 * x",
    "transformer_prediction": "4 * x * * 3 / 3 + 4 * x"
  },
  {
    "function": "cos(2*x)",
    "true_expansion": "2*x**4/3 - 2*x**2 + 1",
    "lstm_prediction": "x * * 2 + 4",
    "improved_lstm_prediction": "2 * x * * 4 / 3 + 2 * x * * 2 + 1",
    "transformer_prediction": "2 * x * * 4 / 3 - 2 * x * * 2 + 1"
  },
  {
    "function": "2*x + 1 + 4/(1 - x)",
    "true_expansion": "4*x**4 + 4*x**3 + 4*x**2 + 6*x + 5",
    "lstm_prediction": "4 * x * * 4 + 8 * x * * 3 + 7 * x * * 2 + 6 * x + 6",
    "improved_lstm_prediction": "4 * x * * 4 + 4 * x * * 3 + 4 * x * * 2 + 6 * x + 6",
    "transformer_prediction": "256 * x * * 4 + 64 * x * * 3 + 16 * x * * 2 + 4 * x + 3"
  },
  {
    "function": "3*x**2 - 2*x + 4*sqrt(x + 1) - 3",
    "true_expansion": "-5*x**4/32 + x**3/4 + 5*x**2/2 + 1",
    "lstm_prediction": "- 5 * x * * 4 / 32 + x * * 3 / 4 + 5 * x * * 2 / 2 - x + 4",
    "improved_lstm_prediction": "- 5 * x * * 4 / 32 + x * * 3 / 4 + 5 * x * * 2 / 2 + 2",
    "transformer_prediction": "- 5 * x * * 4 / 32 + x * * 3 / 4 - x * * 2 / 2 + 2 * x + 3"
  },
  {
    "function": "4*tan(x)",
    "true_expansion": "4*x**3/3 + 4*x",
    "lstm_prediction": "4 * x * * 3 / 3 + 4 * x",
    "improved_lstm_prediction": "4 * x * * 3 / 3 + 4 * x",
    "transformer_prediction": "4 * x * * 3 / 3 + 4 * x"
  },
  {
    "function": "2*sinh(x)",
    "true_expansion": "x**3/3 + 2*x",
    "lstm_prediction": "x * * 3 / 3 + 2 * x",
    "improved_lstm_prediction": "x * * 3 / 3 + 2 * x",
    "transformer_prediction": "4 * x * * 3 / 3 + 2 * x"
  },
  {
    "function": "tan(3*x)",
    "true_expansion": "9*x**3 + 3*x",
    "lstm_prediction": "9 * x * * 3 + 3 * x",
    "improved_lstm_prediction": "9 * x * * 3 + 3 * x",
    "transformer_prediction": "9 * x * * 3 + 3 * x"
  },
  {
    "function": "-5*sinh(x)",
    "true_expansion": "-5*x**3/6 - 5*x",
    "lstm_prediction": "5 * x * * 3 / 3 - 5 * x",
    "improved_lstm_prediction": "- 5 * x * * 3 / 6 - 5 * x",
    "transformer_prediction": "- 125 * x * * 3 / 6 - 5 * x"
  },
  {
    "function": "3*exp(x)",
    "true_expansion": "x**4/8 + x**3/2 + 3*x**2/2 + 3*x + 3",
    "lstm_prediction": "x * * 3 / 8 + x * * 2 / 2 + 3 * x + 3",
    "improved_lstm_prediction": "x * * 4 / 8 + x * * 3 / 2 + 3 * x * * 2 / 2 + 3 * x + 3",
    "transformer_prediction": "27 * x * * 4 / 8 + 9 * x * * 3 / 2 + 9 * x * * 2 / 2 + 3 * x + 1"
  },
  {
    "function": "5*tan(x)",
    "true_expansion": "5*x**3/3 + 5*x",
    "lstm_prediction": "5 * x * * 3 / 3 + 5 * x",
    "improved_lstm_prediction": "5 * x * * 3 / 3 + 5 * x",
    "transformer_prediction": "5 * x * * 3 / 3 + 5 * x"
  },
  {
    "function": "cos(x)",
    "true_expansion": "x**4/24 - x**2/2 + 1",
    "lstm_prediction": "x * * 2 / 2 + 1",
    "improved_lstm_prediction": "x * * 4 / 24 - x * * 2 / 2 + 1",
    "transformer_prediction": "x * * 4 / 24 - x * * 2 / 2 + 1"
  },
  {
    "function": "1/(1 - x)",
    "true_expansion": "x**4 + x**3 + x**2 + x + 1",
    "lstm_prediction": "x * * 4 + x * * 3 + x * * 2 + x + 1",
    "improved_lstm_prediction": "x * * 4 + x * * 3 + x * * 2 + x + 1",
    "transformer_prediction": "x * * 4 + x * * 3 + x * * 2 + x + 1"
  },
  {
    "function": "sinh(x)",
    "true_expansion": "x**3/6 + x",
    "lstm_prediction": "x * * 3 / 2 + x",
    "improved_lstm_prediction": "x * * 3 / 6 + x",
    "transformer_prediction": "x * * 3 / 6 + x"
  },
  {
    "function": "3*x*(3*x**3 - 3*x**2 - 3*x - 2)",
    "true_expansion": "9*x**4 - 9*x**3 - 9*x**2 - 6*x",
    "lstm_prediction": "9 * x * * 4 - 3 * x * * 3 - 6 * x * * 2 - 6 * x",
    "improved_lstm_prediction": "9 * x * * 4 - 9 * x * * 3 - 9 * x * * 2 - 9 * x",
    "transformer_prediction": "- 6 * x * * 4 - 6 * x * * 3 - 6 * x * * 2 - 6 * x"
  },
  {
    "function": "exp(x)",
    "true_expansion": "x**4/24 + x**3/6 + x**2/2 + x + 1",
    "lstm_prediction": "x * * 4 / 24 + x * * 2 / 2 + x + 1",
    "improved_lstm_prediction": "x * * 4 / 24 + x * * 3 / 6 + x * * 2 + x + 1",
    "transformer_prediction": "x * * 4 / 24 + x * * 3 / 6 + x * * 2 / 2 + x + 1"
  },
  {
    "function": "tan(x)",
    "true_expansion": "x**3/3 + x",
    "lstm_prediction": "x * * 3 / 3 + x",
    "improved_lstm_prediction": "x * * 3 / 3 + x",
    "transformer_prediction": "x * * 3 / 3 + x"
  },
  {
    "function": "-3*x + cosh(x)",
    "true_expansion": "x**4/24 + x**2/2 - 3*x + 1",
    "lstm_prediction": "x * * 4 / 8 + 3 * x * * 2 / 2 - 3 * x",
    "improved_lstm_prediction": "x * * 4 / 24 + x * * 2 / 2 - 3 * x + 1",
    "transformer_prediction": "x * * 4 / 24 + x * * 2 / 2 - 3 * x + 4"
  },
  {
    "function": "3*sinh(x)",
    "true_expansion": "x**3/2 + 3*x",
    "lstm_prediction": "x * * 3 / 2 + 3 * x",
    "improved_lstm_prediction": "x * * 3 / 2 + 3 * x",
    "transformer_prediction": "9 * x * * 3 / 2 + 3 * x"
  },
  {
    "function": "3*cosh(5*x)",
    "true_expansion": "625*x**4/8 + 75*x**2/2 + 3",
    "lstm_prediction": "625 * x * * 2 / 2 + 12",
    "improved_lstm_prediction": "625 * x * * 4 / 8 + 75 * x * * 2 / 2 + 3",
    "transformer_prediction": "5 * x * * 4 / 8 + 15 * x * * 2 / 2 + 15"
  },
  {
    "function": "3*cos(x)",
    "true_expansion": "x**4/8 - 3*x**2/2 + 3",
    "lstm_prediction": "x * * 2 / 2 + 3",
    "improved_lstm_prediction": "x * * 4 / 8 + 3 * x * * 2 / 2 + 3",
    "transformer_prediction": "x * * 4 / 8 - 3 * x * * 2 / 2 + 3"
  },
  {
    "function": "2*x + sqrt(5*x + 1) + 1",
    "true_expansion": "-3125*x**4/128 + 125*x**3/16 - 25*x**2/8 + 9*x/2 + 2",
    "lstm_prediction": "- 3125 * x * * 4 / 128 + 125 * x * * 3 / 16 - 25 * x * * 2 / 8 + 9 * x / 2 + 2",
    "improved_lstm_prediction": "- 3125 * x * * 4 / 128 + 125 * x * * 3 / 16 - 25 * x * * 2 / 8 + 9 * x / 2 + 2",
    "transformer_prediction": "- 25 * x * * 4 / 128 + 5 * x * * 3 / 16 - 5 * x * * 2 / 8 + 3 * x / 2 + 3"
  },
  {
    "function": "tan(4*x)",
    "true_expansion": "64*x**3/3 + 4*x",
    "lstm_prediction": "64 * x * * 3 / 3 + 4 * x",
    "improved_lstm_prediction": "64 * x * * 3 / 3 + 4 * x",
    "transformer_prediction": "4 * x * * 3 / 3 + 4 * x"
  },
  {
    "function": "sinh(x) - 3",
    "true_expansion": "x**3/6 + x - 3",
    "lstm_prediction": "x * * 3 / 6 + x - 3",
    "improved_lstm_prediction": "x * * 3 / 6 + x - 3",
    "transformer_prediction": "x * * 3 / 6 + x - 3"
  },
  {
    "function": "sinh(3*x)",
    "true_expansion": "9*x**3/2 + 3*x",
    "lstm_prediction": "9 * x * * 2 / 2 + 1",
    "improved_lstm_prediction": "9 * x * * 3 / 2 + 3 * x",
    "transformer_prediction": "9 * x * * 3 / 2 + 3 * x"
  },
  {
    "function": "(-x - 2)*sqrt(2*x + 1)",
    "true_expansion": "3*x**4/4 - x**3/2 - 3*x - 2",
    "lstm_prediction": "x * * 4 / 64 - x * * 2 / 4 - 2 * x - 2",
    "improved_lstm_prediction": "x * * 4 / 4 - x * * 2 - x - 2",
    "transformer_prediction": "- 5 * x * * 4 / 64 + x * * 3 / 8 - x * * 2 / 4 - x - 2"
  },
  {
    "function": "cosh(x)",
    "true_expansion": "x**4/24 + x**2/2 + 1",
    "lstm_prediction": "x * * 2 / 2 + 1",
    "improved_lstm_prediction": "x * * 4 / 24 + x * * 2 / 2 + 1",
    "transformer_prediction": "x * * 4 / 24 + x * * 2 / 2 + 1"
  },
  {
    "function": "exp(x)",
    "true_expansion": "x**4/24 + x**3/6 + x**2/2 + x + 1",
    "lstm_prediction": "x * * 4 / 24 + x * * 2 / 2 + x + 1",
    "improved_lstm_prediction": "x * * 4 / 24 + x * * 3 / 6 + x * * 2 + x + 1",
    "transformer_prediction": "x * * 4 / 24 + x * * 3 / 6 + x * * 2 / 2 + x + 1"
  },
  {
    "function": "1/(1 - 4*x)",
    "true_expansion": "256*x**4 + 64*x**3 + 16*x**2 + 4*x + 1",
    "lstm_prediction": "256 * x * * 4 + 64 * x * * 3 + 16 * x * * 2 + 4 * x + 1",
    "improved_lstm_prediction": "256 * x * * 4 + 64 * x * * 3 + 16 * x * * 2 + 4 * x + 1",
    "transformer_prediction": "256 * x * * 4 + 64 * x * * 3 + 16 * x * * 2 + 4 * x + 1"
  },
  {
    "function": "4*(x**2 - 2)*tan(x)",
    "true_expansion": "4*x**3/3 - 8*x",
    "lstm_prediction": "- 40 * x * * 3 / 3 + 8 * x",
    "improved_lstm_prediction": "- 8 * x * * 3 / 3 - 8 * x",
    "transformer_prediction": "- 16 * x * * 4 / 3 + 128 * x * * 3 / 3 - 8 * x * * 2 + 8 * x"
  },
  {
    "function": "cosh(x)",
    "true_expansion": "x**4/24 + x**2/2 + 1",
    "lstm_prediction": "x * * 2 / 2 + 1",
    "improved_lstm_prediction": "x * * 4 / 24 + x * * 2 / 2 + 1",
    "transformer_prediction": "x * * 4 / 24 + x * * 2 / 2 + 1"
  },
  {
    "function": "3*sqrt(x + 1)",
    "true_expansion": "-15*x**4/128 + 3*x**3/16 - 3*x**2/8 + 3*x/2 + 3",
    "lstm_prediction": "- 15 * x * * 4 / 128 + 3 * x * * 3 / 16 - 3 * x * * 2 / 8 + 3 * x / 2 + 1",
    "improved_lstm_prediction": "- 15 * x * * 4 / 128 + 3 * x * * 3 / 16 + 3 * x * * 2 / 8 + 3 * x / 2 + 3",
    "transformer_prediction": "- 15 * x * * 4 / 128 + 3 * x * * 3 / 16 - 3 * x * * 2 / 8 + 3 * x / 2 + 3"
  },
  {
    "function": "cos(2*x)",
    "true_expansion": "2*x**4/3 - 2*x**2 + 1",
    "lstm_prediction": "x * * 2 + 4",
    "improved_lstm_prediction": "2 * x * * 4 / 3 + 2 * x * * 2 + 1",
    "transformer_prediction": "2 * x * * 4 / 3 - 2 * x * * 2 + 1"
  },
  {
    "function": "5*cos(x)",
    "true_expansion": "5*x**4/24 - 5*x**2/2 + 5",
    "lstm_prediction": "5 * x * * 3 / 8 + 5 * x / 2 + 5",
    "improved_lstm_prediction": "5 * x * * 4 / 24 + 5 * x * * 2 / 2 + 5",
    "transformer_prediction": "5 * x * * 4 / 24 - 5 * x * * 2 / 2 + 5"
  },
  {
    "function": "sinh(2*x)",
    "true_expansion": "4*x**3/3 + 2*x",
    "lstm_prediction": "4 * x * * 3 / 2 + 2 * x",
    "improved_lstm_prediction": "4 * x * * 3 / 3 + 2 * x",
    "transformer_prediction": "4 * x * * 3 / 3 + 2 * x"
  },
  {
    "function": "-2*x**2 - 2*x + 2 + 3/(1 - x)",
    "true_expansion": "3*x**4 + 3*x**3 + x**2 + x + 5",
    "lstm_prediction": "3 * x * * 4 + 3 * x * * 2 + 4",
    "improved_lstm_prediction": "3 * x * * 4 + 3 * x * * 3 + x + 5",
    "transformer_prediction": "2 * x * * 4 + 2 * x * * 3 + 2 * x * * 2 + 5 * x + 5"
  },
  {
    "function": "sinh(x) + 3",
    "true_expansion": "x**3/6 + x + 3",
    "lstm_prediction": "x * * 3 / 6 + x + 3",
    "improved_lstm_prediction": "x * * 3 / 6 + x + 3",
    "transformer_prediction": "x * * 3 / 6 + x + 3"
  },
  {
    "function": "4*x",
    "true_expansion": "4*x",
    "lstm_prediction": "4 * x + 1",
    "improved_lstm_prediction": "4 * x",
    "transformer_prediction": "4 * x"
  },
  {
    "function": "x*(2*x**2 + x + 3)",
    "true_expansion": "2*x**3 + x**2 + 3*x",
    "lstm_prediction": "2 * x * * 3 + x * * 2 + 3 * x",
    "improved_lstm_prediction": "2 * x * * 3 + x * * 2 + 3 * x",
    "transformer_prediction": "3 * x * * 4 + 3 * x * * 3 + 2 * x * * 2 + 2 * x"
  },
  {
    "function": "3*x**2 + x + 4*tan(x)",
    "true_expansion": "4*x**3/3 + 3*x**2 + 5*x",
    "lstm_prediction": "4 * x * * 3 / 3 + 3 * x * * 2 + 5 * x",
    "improved_lstm_prediction": "4 * x * * 3 / 3 + 3 * x * * 2 + 5 * x",
    "transformer_prediction": "64 * x * * 3 / 3 + 3 * x * * 2 + 7 * x"
  },
  {
    "function": "atan(x)",
    "true_expansion": "-x**3/3 + x",
    "lstm_prediction": "* x * * 3 / 3 + x",
    "improved_lstm_prediction": "- x * * 3 / 3 + x",
    "transformer_prediction": "- x * * 3 / 3 + x"
  },
  {
    "function": "cos(3*x)",
    "true_expansion": "27*x**4/8 - 9*x**2/2 + 1",
    "lstm_prediction": "* x * * 2 / 2 + 1",
    "improved_lstm_prediction": "27 * x * * 4 / 8 + 9 * x * * 2 / 2 + 1",
    "transformer_prediction": "x * * 4 / 8 - 3 * x * * 2 / 2 + 3"
  },
  {
    "function": "-2*x + tan(x) - 3",
    "true_expansion": "x**3/3 - x - 3",
    "lstm_prediction": "x * * 3 / 3 - 2 * x - 3",
    "improved_lstm_prediction": "x * * 3 / 3 - x - 3",
    "transformer_prediction": "x * * 3 / 3 - 2 * x - 3"
  },
  {
    "function": "sinh(x)",
    "true_expansion": "x**3/6 + x",
    "lstm_prediction": "x * * 3 / 2 + x",
    "improved_lstm_prediction": "x * * 3 / 6 + x",
    "transformer_prediction": "x * * 3 / 6 + x"
  },
  {
    "function": "sin(x)",
    "true_expansion": "-x**3/6 + x",
    "lstm_prediction": "* x * * 3 / 2 + 5 * x",
    "improved_lstm_prediction": "- x * * 3 / 6 + x",
    "transformer_prediction": "- x * * 3 / 6 + x"
  },
  {
    "function": "5*tan(x) + 1",
    "true_expansion": "5*x**3/3 + 5*x + 1",
    "lstm_prediction": "5 * x * * 3 / 3 + 5 * x + 1",
    "improved_lstm_prediction": "5 * x * * 3 / 3 + 5 * x + 1",
    "transformer_prediction": "5 * x * * 3 / 3 + 5 * x + 1"
  },
  {
    "function": "cos(5*x)",
    "true_expansion": "625*x**4/24 - 25*x**2/2 + 1",
    "lstm_prediction": "* x * * 2 / 2 + 1",
    "improved_lstm_prediction": "625 * x * * 4 / 24 - 25 * x * * 2 / 2 + 1",
    "transformer_prediction": "5 * x * * 4 / 24 - 5 * x * * 2 / 2 + 5"
  },
  {
    "function": "4*sin(x)",
    "true_expansion": "-2*x**3/3 + 4*x",
    "lstm_prediction": "* x * * 3 / 3 + 4 * x",
    "improved_lstm_prediction": "- 2 * x * * 3 / 3 + 4 * x",
    "transformer_prediction": "- 32 * x * * 3 / 3 + 4 * x"
  },
  {
    "function": "1/(1 - 2*x)",
    "true_expansion": "16*x**4 + 8*x**3 + 4*x**2 + 2*x + 1",
    "lstm_prediction": "16 * x * * 4 + 8 * x * * 3 + 4 * x * * 2 + 2 * x + 1",
    "improved_lstm_prediction": "16 * x * * 4 + 8 * x * * 3 + 4 * x * * 2 + 2 * x + 1",
    "transformer_prediction": "16 * x * * 4 + 8 * x * * 3 + 4 * x * * 2 + 2 * x + 1"
  },
  {
    "function": "(-2*x**2 - x + 2)*tan(5*x)",
    "true_expansion": "-125*x**4/3 + 220*x**3/3 - 5*x**2 + 10*x",
    "lstm_prediction": "- 100 * x * * 4 / 3 + 80 * x * * 3 / 3 - 10 * x * * 2 + 8 * x",
    "improved_lstm_prediction": "295 * x * * 4 / 3 - 235 * x * * 3 / 3 - 10 * x * * 2 + 10 * x",
    "transformer_prediction": "- 5 * x * * 4 / 3 + 10 * x * * 3 / 3 - 10 * x * * 2 + 10 * x"
  },
  {
    "function": "atan(x) - 2",
    "true_expansion": "-x**3/3 + x - 2",
    "lstm_prediction": "- x * * 3 / 3 + x - 2",
    "improved_lstm_prediction": "- x * * 3 / 3 + x - 2",
    "transformer_prediction": "- x * * 3 / 3 + x - 2"
  },
  {
    "function": "cosh(4*x)",
    "true_expansion": "32*x**4/3 + 8*x**2 + 1",
    "lstm_prediction": "32 * x * * 2 / 2 + 4",
    "improved_lstm_prediction": "32 * x * * 4 / 3 + 8 * x * * 2 + 1",
    "transformer_prediction": "x * * 4 / 6 + 2 * x * * 2 + 4"
  },
  {
    "function": "3*log(x + 1)",
    "true_expansion": "-3*x**4/4 + x**3 - 3*x**2/2 + 3*x",
    "lstm_prediction": "- 3 * x * * 4 / 4 + x * * 3 - 3 * x * * 2 / 2 + 3 * x",
    "improved_lstm_prediction": "- 3 * x * * 4 / 4 + x * * 3 - 3 * x * * 2 / 2 + 3 * x",
    "transformer_prediction": "- 3 * x * * 4 / 4 + x * * 3 - 3 * x * * 2 / 2 + 3 * x"
  },
  {
    "function": "-x**3 - 3*x**2 + 3*x + 3",
    "true_expansion": "-x**3 - 3*x**2 + 3*x + 3",
    "lstm_prediction": "- 3 * x * * 3 - x * * 2 + 5 * x + 3",
    "improved_lstm_prediction": "- x * * 3 - 3 * x * * 2 + 3 * x",
    "transformer_prediction": "- 3 * x * * 3 + 3 * x * * 2 + 3 * x + 3"
  },
  {
    "function": "-x**2 + x + atan(5*x)",
    "true_expansion": "-125*x**3/3 - x**2 + 6*x",
    "lstm_prediction": "- 125 * x * * 3 / 3 - x * * 2 + 4 * x",
    "improved_lstm_prediction": "- 131 * x * * 3 / 3 - x * * 2 + 6 * x",
    "transformer_prediction": "- 125 * x * * 3 / 3 + x * * 2 + 3 * x"
  },
  {
    "function": "4*log(x + 1)",
    "true_expansion": "-x**4 + 4*x**3/3 - 2*x**2 + 4*x",
    "lstm_prediction": "- x * * 4 + 4 * x * * 3 / 3 - 2 * x * * 2 + 4 * x",
    "improved_lstm_prediction": "- x * * 4 + 4 * x * * 3 / 3 + 2 * x * * 2 + 4 * x",
    "transformer_prediction": "- 64 * x * * 4 + 64 * x * * 3 / 3 - 8 * x * * 2 + 4 * x"
  }
]